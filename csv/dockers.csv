,Repositório,Organização,Dockerfile,Linguagens,Data Criação,Data Update,Repo link
0,rsandor/Solace,,"FROM java:7


# Add the repo to the container
ADD . /solace
WORKDIR /solace


# Install ant and ivy
RUN apt-get update
RUN apt-get -y install ant
RUN apt-get -y install wget
RUN wget http://mirrors.gigenet.com/apache//ant/ivy/2.4.0/apache-ivy-2.4.0-bin-with-deps.tar.gz
RUN tar xzf apache-ivy-2.4.0-bin-with-deps.tar.gz
RUN cp apache-ivy-2.4.0/ivy-2.4.0.jar /usr/share/ant/lib


# Build the game server
RUN ant jar


# Run the game server
CMD java -jar build/jar/solace.jar 4000
","Java
91.9%





JavaScript
8.1%",2010-02-09 08:35:53,2017-08-01 16:58:01,https://github.com/rsandor/Solace
1,tokuhirom/64p.org,,"FROM nginx:latest


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update && apt-get install -y git-core \
    --no-install-recommends \
        && rm -rf /var/lib/apt/lists/*


EXPOSE 8443


RUN git clone https://github.com/tokuhirom/64p.org.git /64p/
ADD nginx.conf /nginx.conf


CMD [""nginx"", ""-c"", ""/nginx.conf""]


","HTML
63.4%





Nginx
26.5%





CSS
10.1%",2011-02-23 16:37:35,2016-04-08 23:58:28,https://github.com/tokuhirom/64p.org
2,andreasbaumann/pgfuse,,"# PgFuse DockerFile


FROM ubuntu:14.04


RUN apt-get update
RUN apt-get -y --force-yes install make pkg-config g++ wget unzip build-essential libpq-dev libfuse-dev


RUN wget https://github.com/andreasbaumann/pgfuse/archive/master.zip
RUN unzip master.zip


WORKDIR pgfuse-master


RUN make
","C
85.6%





Makefile
6.1%





Shell
5.7%





Other
2.6%",2012-04-05 10:33:42,2017-12-01 14:23:26,https://github.com/andreasbaumann/pgfuse
3,palladius/sakura,,"FROM ubuntu:14.04
#FROM ubuntu:12.04
MAINTAINER Riccardo Carlesso ""riccardo.carlesso+sakura@gmail.com""


ENV RICCARDO_APP sakura
ENV RICCARDO_DESCRIPTION ""This is a cool dockerization of my swiss-army git-repo knife. Seems not to work with 14:04""
# Copied from: https://github.com/paulczar/docker-apache2/blob/master/Dockerfile
env APACHE_RUN_USER    www-data
env APACHE_RUN_GROUP   www-data
env APACHE_PID_FILE    /var/run/apache2.pid
env APACHE_RUN_DIR     /var/run/apache2
env APACHE_LOCK_DIR    /var/lock/apache2
env APACHE_LOG_DIR     /var/log/apache2
env LANG               C
env SAKURA_DOCKER_VAR  2.2.1-20150219


RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get -y install apache2 libapache2-mod-php5 php5-mysql php5-gd php-pear php-apc php5-curl curl lynx-cur
#RUN apt-get install -y facter
RUN apt-get install -y netcat vim bash-completion
RUN sed -i /etc/apache2/sites-enabled/000-default.conf -e 's/#ServerName www.example.com/ServerName sakura.palladius.eu/'
RUN update-rc.d apache2 enable
#RUN service apache2 start
RUN mkdir -p /usr/local/palladius-sakura/
RUN echo ${SAKURA_DOCKER_VAR} > /root/SAKURA_DOCKER_VERSION


# Testing these two...
#ONBUILD ADD . /var/www/palladius-onbuild-sakura/
#ONBUILD RUN cd /var/www/palladius-onbuild-sakura/ && make
ADD . /var/www/html/
ADD . /usr/local/palladius-sakura/


CMD [""apache2"", ""-D"", ""FOREGROUND""]
#CMD service apache2 start
EXPOSE 80


###########################################################################################
# Inspiration
# https://medium.com/dev-tricks/apache-and-php-on-docker-44faef716150
###########################################################################################
","Shell
40.7%





Python
31.6%





Ruby
24.6%





Makefile
1.5%





Perl
1.2%





C
0.3%





Other
0.1%",2011-11-29 18:13:13,2017-04-11 10:39:32,https://github.com/palladius/sakura
4,vinik/minishop,,"FROM docker.io/vinik/web:latest


MAINTAINER Vinícius Kirst <vinicius@versul.com.br>


RUN a2ensite default


COPY . /var/www/html


EXPOSE 80


CMD apachectl -D FOREGROUND
","PHP
98.2%





Other
1.8%",2012-11-04 02:36:12,2016-03-28 05:19:51,https://github.com/vinik/minishop
5,sayanee/build-podcast,,"FROM    ubuntu:14.04


RUN     apt-get update
RUN     apt-get install -y git curl nano nginx
RUN     curl https://raw.githubusercontent.com/sayanee/dotfiles/master/.bashrc > /.bashrc
RUN     mkdir /apps
ADD     . /apps/html


RUN     mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.original
RUN     mv /apps/html/nginx.conf /etc/nginx/nginx.conf


WORKDIR /apps/html


EXPOSE  8888
CMD     [""nginx""]
","HTML
67.4%





CSS
26.8%





ApacheConf
2.3%





Perl
2.0%





Ruby
0.7%





Swift
0.3%





Other
0.5%",2012-05-28 03:43:07,2017-11-14 20:53:03,https://github.com/sayanee/build-podcast
6,sayanee/build-podcast,,"FROM      ubuntu:14.04


RUN       apt-get update
RUN       apt-get install -y git curl nano nodejs nodejs-dev npm
RUN       curl https://raw.githubusercontent.com/sayanee/dotfiles/master/.bashrc > /.bashrc
RUN       ln -s /usr/bin/nodejs  /usr/bin/node


RUN       mkdir /apps
ADD       . /apps/nodeapp


WORKDIR   /apps/nodeapp


EXPOSE    8000
CMD       [""node"", ""/apps/nodeapp/app.js""]
","HTML
67.4%





CSS
26.8%





ApacheConf
2.3%





Perl
2.0%





Ruby
0.7%





Swift
0.3%





Other
0.5%",2012-05-28 03:43:07,2017-11-14 20:53:03,https://github.com/sayanee/build-podcast
7,sayanee/build-podcast,,"FROM    ubuntu:14.04


RUN     apt-get update
RUN     apt-get install -y git curl nano build-essential libssl-dev libreadline-dev libffi-dev libgdbm-dev


# install ruby
ADD     http://cache.ruby-lang.org/pub/ruby/2.1/ruby-2.1.2.tar.bz2 /
RUN     tar xvjf ruby-2.1.2.tar.bz2 && cd ruby-2.1.2 && ./configure --disable-install-doc --with-openssl-dir=/usr/bin && make && make install && cd / && rm -rf /ruby-2.1.2
RUN     gem install sass compass jekyll --no-ri --no-rdoc


# install node, npm, bower, grunt
RUN     apt-get install -y software-properties-common python-software-properties git curl nano nginx
RUN     apt-get install -y nodejs nodejs-dev npm
RUN     ln -s /usr/bin/nodejs /usr/bin/node
RUN     npm install -g bower grunt grunt-cli


RUN     mkdir /apps
ADD     . /apps/bp
WORKDIR /apps/bp


EXPOSE  4000


CMD     [""jekyll"", ""serve"", ""--watch"", ""--config"", ""_dev_config.yml""]
","HTML
67.4%





CSS
26.8%





ApacheConf
2.3%





Perl
2.0%





Ruby
0.7%





Swift
0.3%





Other
0.5%",2012-05-28 03:43:07,2017-11-14 20:53:03,https://github.com/sayanee/build-podcast
8,skonakov/2mp4,,"FROM python:2.7.11


RUN apt-get update && apt-get install -y \
    libxml2-dev \
    libxslt1-dev \
    mediainfo


RUN pip install -U pip && pip install 2mp4
","Python
97.1%





Makefile
2.9%",2012-11-29 15:40:28,2016-04-21 23:58:06,https://github.com/skonakov/2mp4
9,emblicaorg/airfield,,"from ubuntu:12.04
maintainer Nick Stinemates


run apt-get -y update
run apt-get install -y wget 
run wget -O - http://nodejs.org/dist/v0.8.23/node-v0.8.23-linux-x64.tar.gz | tar -C /usr/local/ --strip-components=1 -zxv
add . /airfield
run cd /airfield && npm install


expose 3000


cmd [""node"", ""/airfield/airfield.js""]
","JavaScript
99.7%





CSS
0.3%",2013-01-03 02:16:40,2017-08-30 02:33:08,https://github.com/emblicaorg/airfield
10,docker-rubygem/itamae-plugin-recipe-ros,"Organization(name=None, id=24866894)","FROM ruby:2.4


MAINTAINER thinkbot@outlook.de


ENV VERSION=0.2.2


RUN gem install itamae-plugin-recipe-ros --version ${VERSION} --no-format-exec


WORKDIR /tmp


ENTRYPOINT [""create_itamae_ros_templates""]
CMD [""--help""]
",,2017-01-15 04:42:02,2017-01-15 04:42:02,https://github.com/docker-rubygem/itamae-plugin-recipe-ros
11,dutradda/myreco,,"FROM python:3.5


MAINTAINER Diogo Dutra <dutradda@gmail.com>
RUN apt-get update
RUN apt-get install -y build-essential libopenblas-dev liblapack-dev
RUN git clone http://github.com/dutradda/myreco /tmp/myreco
RUN pip install -r /tmp/myreco/requirements-dev.txt -r /tmp/myreco/requirements.txt --src /usr/local/src
RUN rm -rf /tmp/myreco
ADD run_tests.sh /usr/bin/run-tests
ENTRYPOINT /bin/bash
","Python
99.8%





Shell
0.2%",2016-09-03 02:33:48,2017-08-10 08:36:28,https://github.com/dutradda/myreco
12,docker-rubygem/ActiveSambaLdap,"Organization(name=None, id=24866894)","FROM ruby:2.4


MAINTAINER thinkbot@outlook.de


ENV VERSION=0.0.7


RUN gem install ActiveSambaLdap --version ${VERSION} --no-format-exec


WORKDIR /tmp


ENTRYPOINT [""asl-groupadd""]
CMD [""--help""]
",,2017-01-14 22:44:22,2017-01-14 22:44:22,https://github.com/docker-rubygem/ActiveSambaLdap
13,gatorcse/jetbrains-base,,"FROM ubuntu:16.10


RUN apt-get update && apt-get install -y default-jre wget
",,2017-01-23 03:42:28,2017-01-23 03:42:28,https://github.com/gatorcse/jetbrains-base
14,cjmay/thrift-4042,,"FROM centos:7
RUN yum update -y && yum clean all
RUN yum install -y gcc-c++ patch python python-devel tar
RUN curl https://bootstrap.pypa.io/get-pip.py | python && \
    pip install --upgrade setuptools
RUN mkdir /tmp/thrift-4042
ADD . /tmp/thrift-4042
WORKDIR /tmp/thrift-4042
RUN python setup.py install
CMD [""python"", ""-m"", ""thrift4042""]
","Python
100.0%",2017-01-27 19:36:23,2017-01-27 19:36:32,https://github.com/cjmay/thrift-4042
15,engineersftw/esg-servers,"Organization(name=None, id=9618429)","FROM php:7.0-apache


# Enable the Apache Headers module:
RUN ln -s /etc/apache2/mods-available/headers.load \
  /etc/apache2/mods-enabled/headers.load


# Enable the Apache Rewrite module:
RUN ln -s /etc/apache2/mods-available/rewrite.load \
  /etc/apache2/mods-enabled/rewrite.load


# Install GD, Imagick and ImageMagick as image conversion options:
RUN DEBIAN_FRONTEND=noninteractive \
  apt-get update && apt-get install -y --no-install-recommends \
    libpng-dev \
    libjpeg-dev \
    libmagickwand-dev \
    imagemagick \
  && pecl install \
    imagick \
  && docker-php-ext-enable \
    imagick \
  && docker-php-ext-configure \
    gd --with-jpeg-dir=/usr/include/ \
  && docker-php-ext-install \
    gd \
 # Uninstall obsolete packages:
  && apt-get autoremove -y \
    libpng-dev \
    libjpeg-dev \
    libmagickwand-dev \
 # Remove obsolete files:
  && apt-get clean \
  && rm -rf \
    /tmp/* \
    /usr/share/doc/* \
    /var/cache/* \
    /var/lib/apt/lists/* \
    /var/tmp/*
","JavaScript
33.5%





HTML
22.7%





Ruby
22.2%





PHP
14.6%





Go
2.3%





Python
1.9%





Other
2.8%",2017-01-28 02:41:45,2017-03-09 00:52:44,https://github.com/engineersftw/esg-servers
16,screwdriver-cd/screwdriver,"Organization(name=None, id=19417863)","FROM node:6


# Screwdriver Version
ARG VERSION=latest


# Create our application directory
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app


# Install Screwdriver API
RUN npm install screwdriver-api@$VERSION
WORKDIR /usr/src/app/node_modules/screwdriver-api


# Setup configuration folder
RUN ln -s /usr/src/app/node_modules/screwdriver-api/config /config


# Expose the web service port
EXPOSE 8080


# Run the service
CMD [ ""npm"", ""start"" ]
","JavaScript
92.4%





Gherkin
6.0%





Python
1.6%",2016-05-23 20:55:35,2017-11-28 07:02:07,https://github.com/screwdriver-cd/screwdriver
17,UKHomeOffice-attic/dsp-hello-world-simonb,"Organization(name=None, id=18351115)","FROM node:6-alpine
WORKDIR /src
COPY . .
RUN npm install --quiet && npm test
EXPOSE 4000
CMD npm start
","Standard ML
81.9%





JavaScript
18.1%",2017-01-27 14:04:17,2017-05-26 12:45:57,https://github.com/UKHomeOffice-attic/dsp-hello-world-simonb
18,mandla-moyo/cipher_nginx,,"FROM tutum/nginx
RUN rm /etc/nginx/sites-enabled/default
ADD sites-enabled/ /etc/nginx/sites-enabled
",,2017-01-27 13:36:21,2017-01-27 13:36:21,https://github.com/mandla-moyo/cipher_nginx
19,docker-rubygem/arduino_firmata,"Organization(name=None, id=24866894)","FROM ruby:2.4


MAINTAINER thinkbot@outlook.de


ENV VERSION=0.3.7


RUN gem install arduino_firmata --version ${VERSION} --no-format-exec


WORKDIR /tmp


ENTRYPOINT [""arduino_firmata""]
CMD [""--help""]
",,2017-01-15 00:55:37,2017-01-15 00:55:37,https://github.com/docker-rubygem/arduino_firmata
20,smizy/docker-keras-theano,,"FROM smizy/scikit-learn:0.18-alpine


ARG BUILD_DATE
ARG VCS_REF
ARG VERSION


LABEL \
    org.label-schema.build-date=$BUILD_DATE \
    org.label-schema.docker.dockerfile=""/Dockerfile"" \
    org.label-schema.license=""Apache License 2.0"" \
    org.label-schema.name=""smizy/keras"" \
    org.label-schema.url=""https://github.com/smizy"" \
    org.label-schema.vcs-ref=$VCS_REF \
    org.label-schema.vcs-type=""Git"" \
    org.label-schema.version=$VERSION \
    org.label-schema.vcs-url=""https://github.com/smizy/docker-keras-theano""


ENV KERAS_VERSION  $VERSION
ENV KERAS_BACKEND  theano


RUN set -x \
    && apk update \
 ## keras/theano
    && apk --no-cache add \
        g++ \
        python3-dev \
    && pip3 install keras==${KERAS_VERSION} \
    && mkdir -p /home/jupyter/.keras \
 ## clean 
    && find /usr/lib/python3.5 -name __pycache__ | xargs rm -r \
    && rm -rf /root/.[acpw]* 


COPY keras.json  /home/jupyter/.keras/
","Makefile
100.0%",2017-01-25 06:54:22,2017-07-20 03:04:42,https://github.com/smizy/docker-keras-theano
21,senecajs/seneca-mongo-store,"Organization(name=None, id=10085488)","FROM mongo


EXPOSE 27017
","JavaScript
100.0%",2013-02-11 16:41:41,2017-07-22 22:35:24,https://github.com/senecajs/seneca-mongo-store
22,fishtown-analytics/dbt,"Organization(name=None, id=18339788)","FROM python:3.6


RUN apt-get update


RUN apt-get install -y python-pip netcat
RUN apt-get install -y python-dev python3-dev


RUN pip install pip --upgrade
RUN pip install virtualenv
RUN pip install virtualenvwrapper
RUN pip install tox


WORKDIR /usr/src/app
RUN cd /usr/src/app
","Python
99.7%





Other
0.3%",2016-03-10 02:38:00,2017-12-01 21:17:52,https://github.com/fishtown-analytics/dbt
23,rickyshrestha/small-docker,,"FROM microsoft/dotnet:1.1.0-runtime-deps


# copy output from the published folder for docker
COPY ./out/runtime /opt/app/


WORKDIR /opt/app/


RUN chmod +x ./small-docker


CMD [""./small-docker""]
","XSLT
52.1%





C#
24.6%





Shell
23.3%",2017-01-28 22:06:11,2017-02-07 12:41:55,https://github.com/rickyshrestha/small-docker
24,paddykrish/enabledemos-app,,"FROM jtblin/debian-node-graphicsmagick:stretch-node-v4.4.7-gm-v1.3.24
WORKDIR /src
ADD . ./
RUN chown -R node:node /src
USER node
RUN npm install
CMD [""npm"", ""test""]
","CSS
41.8%





JavaScript
40.8%





HTML
15.1%





Java
2.3%",2017-01-11 06:19:59,2017-02-07 16:35:16,https://github.com/paddykrish/enabledemos-app
25,maccyber/micro-bigfive-evaluator,,"###########################################################
#
# Dockerfile for micro-bigfive-evaluator
#
###########################################################


# Setting the base to nodejs 7
FROM mhart/alpine-node:7


# Maintainer
MAINTAINER Jonas Enge


#### Begin setup ####


# Extra tools for native dependencies
# RUN apk add --no-cache make gcc g++ python


# Bundle app source
COPY . /src


# Change working directory
WORKDIR ""/src""


# Install dependencies
RUN npm install --production


# Env variables
ENV SERVER_PORT 3000
ENV LIMIT 5


# Expose 3000
EXPOSE ${SERVER_PORT}


# Startup
ENTRYPOINT micro -p ${SERVER_PORT}
","JavaScript
100.0%",2017-02-07 14:38:39,2017-06-28 16:01:05,https://github.com/maccyber/micro-bigfive-evaluator
26,Nobosaur/node_express,,"FROM ubuntu:12.04
MAINTAINER Remy Sharp <remy@leftlogic.com>


RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN apt-get update && apt-get install curl npm -y


ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 4
ENV NVM_VERSION 0.26.1
ENV TRAVIS TRUE


# # Install nvm with node and npm
RUN curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VERSION/install.sh | bash \
    && source $NVM_DIR/nvm.sh \
    && nvm install 0.10 \
    && nvm install 0.12 \
    && nvm install 4 \
    && nvm alias default $NODE_VERSION \
    && nvm use default
","CSS
84.6%





HTML
10.7%





JavaScript
4.0%





Other
0.7%",2017-02-05 19:04:22,2017-02-05 19:10:58,https://github.com/Nobosaur/node_express
27,annabuyevich/StudyTipsBlog,,"FROM ubuntu:12.04
MAINTAINER Remy Sharp <remy@leftlogic.com>


RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN apt-get update && apt-get install curl npm -y


ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 4
ENV NVM_VERSION 0.26.1
ENV TRAVIS TRUE


# # Install nvm with node and npm
RUN curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VERSION/install.sh | bash \
    && source $NVM_DIR/nvm.sh \
    && nvm install 0.10 \
    && nvm install 0.12 \
    && nvm install 4 \
    && nvm alias default $NODE_VERSION \
    && nvm use default
","JavaScript
50.6%





HTML
42.8%





CSS
6.6%",2017-02-05 09:28:29,2017-02-05 10:06:54,https://github.com/annabuyevich/StudyTipsBlog
28,huazai128/node-es6-mongodb,,"FROM ubuntu:12.04
MAINTAINER Remy Sharp <remy@leftlogic.com>


RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN apt-get update && apt-get install curl npm -y


ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 4
ENV NVM_VERSION 0.26.1
ENV TRAVIS TRUE


# # Install nvm with node and npm
RUN curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VERSION/install.sh | bash \
    && source $NVM_DIR/nvm.sh \
    && nvm install 0.10 \
    && nvm install 0.12 \
    && nvm install 4 \
    && nvm alias default $NODE_VERSION \
    && nvm use default
","JavaScript
72.5%





HTML
24.0%





CSS
3.5%",2017-02-05 15:01:23,2017-02-05 15:11:28,https://github.com/huazai128/node-es6-mongodb
29,docker-rubygem/darrell-activewarehouse-etl,"Organization(name=None, id=24866894)","FROM ruby:2.4


MAINTAINER thinkbot@outlook.de


ENV VERSION=0.9.1.6


RUN gem install darrell-activewarehouse-etl --version ${VERSION} --no-format-exec


WORKDIR /tmp


ENTRYPOINT [""etl""]
CMD [""--help""]
",,2017-01-15 02:38:59,2017-01-15 02:38:59,https://github.com/docker-rubygem/darrell-activewarehouse-etl
0,rgachuhi/services,,"FROM jboss/wildfly:latest
MAINTAINER Raphael Gachuhi, oli.cmu.edu
ADD changeDatabase.xsl ${JBOSS_HOME}/
RUN java -jar /usr/share/java/saxon.jar -s:${JBOSS_HOME}/standalone/configuration/standalone.xml -xsl:${JBOSS_HOME}/changeDatabase.xsl -o:${JBOSS_HOME}/standalone/configuration/standalone.xml; java -jar /usr/share/java/saxon.jar -s:${JBOSS_HOME}/standalone/configuration/standalone-ha.xml -xsl:${JBOSS_HOME}/changeDatabase.xsl -o:${JBOSS_HOME}/standalone/configuration/standalone-ha.xml; rm ${JBOSS_HOME}/changeDatabase.xsl
RUN mkdir -p ${JBOSS_HOME}/modules/system/layers/base/com/mysql/jdbc/main; cd ${JBOSS_HOME}/modules/system/layers/base/com/mysql/jdbc/main && curl -O http://central.maven.org/maven2/mysql/mysql-connector-java/5.1.40/mysql-connector-java-5.1.40.jar
ADD module.xml ${JBOSS_HOME}/modules/system/layers/base/com/mysql/jdbc/main/
","Java
94.7%





XSLT
4.4%





JavaScript
0.9%",2017-01-27 14:23:21,2017-01-27 14:26:18,https://github.com/rgachuhi/services
1,ptoonen/zerodowntimeapps,,"FROM microsoft/dotnet
WORKDIR /app
ENV ASPNETCORE_URLS http://*:80
EXPOSE 80
ENTRYPOINT [""dotnet"", ""web.dll""]
COPY . /app
","C#
88.7%





Shell
5.0%





PowerShell
4.4%





JavaScript
1.1%





CSS
0.8%",2017-02-06 18:06:13,2017-02-06 18:11:25,https://github.com/ptoonen/zerodowntimeapps
2,sensukho/gafootas,,"FROM mongo:latest


MAINTAINER JC Gil <sensukho@gmail.com>


EXPOSE 27017
","TypeScript
46.5%





CSS
25.5%





HTML
18.9%





JavaScript
8.5%





CoffeeScript
0.4%





Shell
0.1%





Makefile
0.1%",2017-02-06 22:10:42,2017-02-06 22:21:27,https://github.com/sensukho/gafootas
3,sensukho/gafootas,,"FROM node:latest


MAINTAINER JC Gil <sensukho@gmail.com>


ENV TERM=xterm


ADD start_node_api.sh /tmp/
RUN chmod 777 /tmp/start_node_api.sh


RUN apt-get update && apt-get install -y netcat-openbsd
RUN npm install -g nodemon
RUN npm install -g typescript
RUN npm install -g typings


EXPOSE 4200
CMD [""/bin/bash"", ""/tmp/start_node_api.sh""]
","TypeScript
46.5%





CSS
25.5%





HTML
18.9%





JavaScript
8.5%





CoffeeScript
0.4%





Shell
0.1%





Makefile
0.1%",2017-02-06 22:10:42,2017-02-06 22:21:27,https://github.com/sensukho/gafootas
4,sensukho/gafootas,,"FROM node:latest


MAINTAINER JC Gil <sensukho@gmail.com>


ENV TERM=xterm


ADD start_node_web.sh /tmp/
RUN chmod 777 /tmp/start_node_web.sh


RUN apt-get update && apt-get install -y netcat-openbsd
RUN npm install -g nodemon
RUN npm install -g typescript
RUN npm install -g typings


EXPOSE 3000
CMD [""/bin/bash"", ""/tmp/start_node_web.sh""]
","TypeScript
46.5%





CSS
25.5%





HTML
18.9%





JavaScript
8.5%





CoffeeScript
0.4%





Shell
0.1%





Makefile
0.1%",2017-02-06 22:10:42,2017-02-06 22:21:27,https://github.com/sensukho/gafootas
5,sensukho/gafootas,,"FROM alpine:latest


MAINTAINER JC Gil <sensukho@gmail.com>


CMD [""true""]
","TypeScript
46.5%





CSS
25.5%





HTML
18.9%





JavaScript
8.5%





CoffeeScript
0.4%





Shell
0.1%





Makefile
0.1%",2017-02-06 22:10:42,2017-02-06 22:21:27,https://github.com/sensukho/gafootas
6,sensukho/gafootas,,"FROM alpine:latest


MAINTAINER JC Gil <sensukho@gmail.com>


CMD [""true""]
","TypeScript
46.5%





CSS
25.5%





HTML
18.9%





JavaScript
8.5%





CoffeeScript
0.4%





Shell
0.1%





Makefile
0.1%",2017-02-06 22:10:42,2017-02-06 22:21:27,https://github.com/sensukho/gafootas
7,sensukho/gafootas,,"FROM node:latest


RUN git clone https://github.com/akveo/ng2-admin.git /var/www \
    && cd /var/www \
    && npm install --global rimraf \
    && npm run clean \
    && npm install --global webpack webpack-dev-server typescript@beta \
    && npm install \
    && npm run prebuild:prod && npm run build:prod


EXPOSE 8080


WORKDIR /var/www
ENTRYPOINT [""npm"", ""run"", ""server:prod""]
","TypeScript
46.5%





CSS
25.5%





HTML
18.9%





JavaScript
8.5%





CoffeeScript
0.4%





Shell
0.1%





Makefile
0.1%",2017-02-06 22:10:42,2017-02-06 22:21:27,https://github.com/sensukho/gafootas
8,sammynave/api,,"FROM elixir:latest
ENV DEBIAN_FRONTEND=noninteractive
RUN mix local.hex --force
RUN mix local.rebar --force
RUN mix archive.install --force https://github.com/phoenixframework/archives/raw/master/phoenix_new.ez
RUN curl -sL https://deb.nodesource.com/setup_6.x | bash -
RUN apt-get install -y -q nodejs


WORKDIR /app
ADD . /app
","Elixir
53.1%





JavaScript
46.9%",2017-02-04 20:36:30,2017-02-15 01:04:02,https://github.com/sammynave/api
9,critiqueslibres/docker_pg,"Organization(name=None, id=21012256)","FROM centos:latest
MAINTAINER ptim007@yahoo.com
ENV MAJORVER=9
ENV MINORVER=6
RUN yum update -y
RUN yum install -y libxslt systemd-sysv
ADD https://yum.postgresql.org/${MAJORVER}.${MINORVER}/redhat/rhel-7-x86_64/postgresql${MAJORVER}${MINORVER}-${MAJORVER}.${MINORVER}.1-1PGDG.rhel7.x86_64.rpm /tmp
ADD https://yum.postgresql.org/${MAJORVER}.${MINORVER}/redhat/rhel-7-x86_64/postgresql${MAJORVER}${MINORVER}-contrib-${MAJORVER}.${MINORVER}.1-1PGDG.rhel7.x86_64.rpm /tmp
ADD https://yum.postgresql.org/${MAJORVER}.${MINORVER}/redhat/rhel-7-x86_64/postgresql${MAJORVER}${MINORVER}-libs-${MAJORVER}.${MINORVER}.1-1PGDG.rhel7.x86_64.rpm /tmp
ADD https://yum.postgresql.org/${MAJORVER}.${MINORVER}/redhat/rhel-7-x86_64/postgresql${MAJORVER}${MINORVER}-server-${MAJORVER}.${MINORVER}.1-1PGDG.rhel7.x86_64.rpm /tmp
RUN rpm -i /tmp/postgresql${MAJORVER}${MINORVER}-${MAJORVER}.${MINORVER}.1-1PGDG.rhel7.x86_64.rpm \
           /tmp/postgresql${MAJORVER}${MINORVER}-contrib-${MAJORVER}.${MINORVER}.1-1PGDG.rhel7.x86_64.rpm \
           /tmp/postgresql${MAJORVER}${MINORVER}-libs-${MAJORVER}.${MINORVER}.1-1PGDG.rhel7.x86_64.rpm \
           /tmp/postgresql${MAJORVER}${MINORVER}-server-${MAJORVER}.${MINORVER}.1-1PGDG.rhel7.x86_64.rpm 
RUN mkdir -p /u01/pg96/data /u02/backup /u02/archive && chown -R postgres:postgres /u01/pg96 /u02/backup /u02/archive && chmod 700 /u01/pg96/data /u02/archive
ENV PGDATA /u01/pg96/data
ENV LANG=en_US.UTF-8
RUN usermod -G wheel -a postgres && echo ""postgres"" | passwd --stdin postgres
RUN localedef -i en_US -f UTF-8 en_US.UTF-8
USER postgres
#RUN /usr/pgsql-9.6/bin/pg_ctl initdb -D ${PGDATA} -o ""--encoding='UTF8' --locale=C""
#RUN /usr/pgsql-9.6/bin/pg_ctl -D /u01/pg96/data start -w && \
#      /usr/pgsql-9.6/bin/psql --command ""create database phoenix ENCODING='UTF8' LC_COLLATE='C';""
ADD initdb.sh /tmp
RUN /tmp/initdb.sh
VOLUME [""/u01/pg96/data"",""/u02/archive""]
ENTRYPOINT [""/usr/pgsql-9.6/bin/pg_ctl"",""-D"",""${PGDATA}"",""start""]
","Shell
100.0%",2017-02-05 15:48:06,2017-02-05 15:55:32,https://github.com/critiqueslibres/docker_pg
10,BreakOutEvent/breakout-backend,"Organization(name=None, id=13019720)","FROM java:openjdk-8-jdk


RUN mkdir -p /usr/src/myapp
COPY . /usr/src/myapp
WORKDIR /usr/src/myapp


RUN ./gradlew stage
CMD [""java"", ""-jar"", ""/usr/src/myapp/app.jar""]
EXPOSE 8082
","Kotlin
54.1%





HTML
45.6%





Shell
0.3%",2015-08-22 14:28:22,2017-08-18 08:25:23,https://github.com/BreakOutEvent/breakout-backend
11,zieckey/condiment,,"FROM ubuntu
MAINTAINER zieckey@codeg.cn
ADD ./helloworld /usr/bin/helloworld
","C++
78.5%





C
14.5%





Makefile
2.4%





Protocol Buffer
2.4%





CMake
1.6%





Shell
0.5%





Other
0.1%",2013-06-02 01:57:33,2017-07-14 15:42:23,https://github.com/zieckey/condiment
12,zieckey/condiment,,"FROM ubuntu
MAINTAINER zieckey@codeg.cn
RUN apt-get update
RUN mv /etc/apt/sources.list /etc/apt/sources.list.backup
ADD https://raw.githubusercontent.com/zieckey/tools/master/ubuntu/sources.list /etc/apt/sources.list
EXPOSE 80
","C++
78.5%





C
14.5%





Makefile
2.4%





Protocol Buffer
2.4%





CMake
1.6%





Shell
0.5%





Other
0.1%",2013-06-02 01:57:33,2017-07-14 15:42:23,https://github.com/zieckey/condiment
13,jpetazzo/gunsub,,"FROM ubuntu
MAINTAINER jerome.petazzoni@dotcloud.com
RUN apt-get install -qy python python-pandas
ADD gunsub.py /gunsub.py
CMD python /gunsub.py
","Python
100.0%",2013-08-30 18:26:50,2017-09-20 11:52:47,https://github.com/jpetazzo/gunsub
14,brimstone/docker-precise,,"FROM scratch


ADD precise.tar.gz /


CMD /sbin/upstart
","Shell
100.0%",2013-09-07 02:56:06,2014-02-25 02:48:38,https://github.com/brimstone/docker-precise
15,kanaka/raft.js,,"# dockerhub - A repository for various dockerfiles
# For more information; http://github.com/cmfatih/dockerhub
#
# SlimerJS
#
# Test
#   sudo docker run fentas/slimerjs /usr/bin/slimerjs -v
#   sudo docker run fentas/slimerjs /usr/bin/casperjs | head -n 1
#   sudo docker run -v `pwd`:/mnt/test fentas/slimerjs /usr/bin/slimerjs /mnt/test/test.js


# VERSION 1.0.1


FROM ubuntu:wily


#MAINTAINER fentas <jan.guth.so>
MAINTAINER Joel Martin <github@martintribe.org>


# Env
ENV SLIMERJS_VERSION_F 0.9.6
ENV CASPERJS_VERSION_T master


# Commands
RUN \
  apt-get update && \
  apt-get upgrade -y && \
  apt-get install -y vim git wget xvfb libxrender-dev libasound2 libdbus-glib-1-2 libgtk2.0-0 bzip2


RUN \
  mkdir -p /srv/var && \
  wget -O /tmp/slimerjs-$SLIMERJS_VERSION_F-linux-x86_64.tar.bz2 http://download.slimerjs.org/releases/$SLIMERJS_VERSION_F/slimerjs-$SLIMERJS_VERSION_F-linux-x86_64.tar.bz2 && \
  tar -xjf /tmp/slimerjs-$SLIMERJS_VERSION_F-linux-x86_64.tar.bz2 -C /tmp && \
  rm -f /tmp/slimerjs-$SLIMERJS_VERSION_F-linux-x86_64.tar.bz2 && \
  mv /tmp/slimerjs-$SLIMERJS_VERSION_F/ /srv/var/slimerjs && \
  echo '#!/bin/bash\nxvfb-run /srv/var/slimerjs/slimerjs $*' > /srv/var/slimerjs/slimerjs.sh && \
  chmod 755 /srv/var/slimerjs/slimerjs.sh && \
  ln -s /srv/var/slimerjs/slimerjs.sh /usr/bin/slimerjs


RUN \
  git clone https://github.com/n1k0/casperjs.git /srv/var/casperjs && \
  cd /srv/var/casperjs && \
  git checkout $CASPERJS_VERSION_T && \
  echo '#!/bin/bash\n/srv/var/casperjs/bin/casperjs --engine=slimerjs $*' >> /srv/var/casperjs/casperjs.sh && \
  chmod 755 /srv/var/casperjs/casperjs.sh && \
  ln -s /srv/var/casperjs/casperjs.sh /usr/bin/casperjs


RUN \
  apt-get install -y nodejs npm


RUN \
  apt-get autoremove -y && \
  apt-get clean all


# Default command
CMD [""/usr/bin/slimerjs""]
","TeX
92.0%





JavaScript
4.4%





Lua
2.8%





Shell
0.3%





Matlab
0.2%





HTML
0.2%





Other
0.1%",2013-09-16 21:19:10,2017-10-20 14:47:06,https://github.com/kanaka/raft.js
16,kanaka/raft.js,,"FROM ubuntu:14.04
MAINTAINER Joel Martin <github@martintribe.org>


RUN apt-get -y update


RUN apt-get -y install texlive-latex-base
RUN apt-get -y install texlive-bibtex-extra biber
#RUN apt-get -y install texlive-fonts-recommended texlive-latex-extra texlive-science
RUN apt-get -y install texlive-fonts-recommended
RUN apt-get -y install pgf
RUN apt-get -y install texlive-science
RUN apt-get -y install texlive-latex-extra


RUN apt-get -y install make
","TeX
92.0%





JavaScript
4.4%





Lua
2.8%





Shell
0.3%





Matlab
0.2%





HTML
0.2%





Other
0.1%",2013-09-16 21:19:10,2017-10-20 14:47:06,https://github.com/kanaka/raft.js
17,zbal/maestro_test,,"FROM docker.wcl.local/devops/base
MAINTAINER vincent vincent@example.com


RUN apt-get install -y python-software-properties python
RUN add-apt-repository ppa:chris-lea/node.js
RUN apt-get update
RUN apt-get install -y nodejs


CMD [ '/usr/sbin/sshd', '-D' ]
","Shell
100.0%",2013-09-27 03:13:01,2013-10-03 16:00:25,https://github.com/zbal/maestro_test
18,zbal/maestro_test,,"FROM docker.wcl.local/devops/base
MAINTAINER vincent vincent@example.com


RUN apt-get install -y htop


CMD [ '/usr/sbin/sshd', '-D' ]
","Shell
100.0%",2013-09-27 03:13:01,2013-10-03 16:00:25,https://github.com/zbal/maestro_test
19,islaio/docker-haproxy,"Organization(name=None, id=5636843)","# DOCKER-VERSION 0.3.4
# Inspired in http://efemoral.lovius.net/building-haproxy-from-git-on-ubuntu-12-04/
FROM isla/ubuntu-build-tools:python
MAINTAINER Alfonso Fernandez ""alfonso@isla.io""
RUN mkdir ~/haproxy_src; cd ~/haproxy_src; wget http://haproxy.1wt.eu/download/1.5/src/devel/haproxy-1.5-dev19.tar.gz; tar zxvf haproxy-1.5-dev19.tar.gz; cd haproxy-1.5-dev19; make TARGET=linux2628 CPU=native USE_PCRE=1 USE_OPENSSL=1 USE_ZLIB=1; make install
RUN ln -s /usr/local/sbin/haproxy /usr/sbin/haproxy
RUN mkdir /usr/share/haproxy
# RUN wget http://efemoral.lovius.net/wp-content/uploads/2013/02/init.d.haproxy.txt
# RUN mv init.d.haproxy.txt /etc/init.d/haproxy
# RUN chmod +x /etc/init.d/haproxy
# RUN update-rc.d haproxy defaults
RUN echo 'ENABLED=1' >> /etc/default/haproxy
RUN adduser --system --group haproxy
RUN mkdir /etc/haproxy
RUN mkdir /etc/haproxy/errors
RUN cd /etc/haproxy; wget https://raw.github.com/alfonsodev/docker-haproxy/master/haproxy.cfg
# RUN service haproxy start
EXPOSE 80
EXPOSE 443
CMD haproxy -db -f /etc/haproxy/haproxy.cfg
","Shell
100.0%",2013-10-07 19:49:10,2013-10-11 08:58:47,https://github.com/islaio/docker-haproxy
20,jellybob/docker-mysql,,"FROM ubuntu
MAINTAINER Jon Wood <jon@ninjagiraffes.co.uk>


RUN apt-get update
RUN apt-get install -y mysql-server
RUN /bin/rm -rf /var/lib/mysql/*


ADD initialize_and_start_mysql /usr/sbin/initialize_and_start_mysql
ADD listen_on_all_addresses.cnf /etc/mysql/conf.d/listen_on_all_addresses.cnf


EXPOSE 3306
CMD [ ""/usr/sbin/initialize_and_start_mysql"" ]
","Shell
100.0%",2013-11-28 19:29:48,2017-05-16 23:08:07,https://github.com/jellybob/docker-mysql
21,shipyard/docker-shipyard-router,"Organization(name=None, id=5009699)","from stackbrew/ubuntu:12.04
maintainer Shipyard Project ""http://shipyard-project.com""
run apt-get -qq update
run apt-get install -y g++ make python-dev python-setuptools libreadline-dev libncurses5-dev libpcre3-dev libssl-dev perl make wget git-core
run wget http://nodejs.org/dist/v0.8.26/node-v0.8.26.tar.gz -O /tmp/node.tar.gz
run (cd /tmp && tar zxf node.tar.gz)
run (cd /tmp/node-* && ./configure)
run (cd /tmp/node-* && make install)
run npm install -g hipache
add run.sh /usr/local/bin/run
volume /var/log/shipyard
expose 80
expose 443
cmd [""/bin/sh"", ""-e"", ""/usr/local/bin/run""]
","Shell
100.0%",2013-11-11 07:57:07,2016-09-19 06:06:30,https://github.com/shipyard/docker-shipyard-router
22,abevoelker/docker-postgres,,"FROM       phusion/baseimage:0.9.12
MAINTAINER Abe Voelker <abe@abevoelker.com>


ENV USERNAME postgres
ENV PASSWORD password
ENV VERSION  9.4


# Temporary hack around a Docker Hub `docker build` issue. See:
# https://github.com/docker/docker/issues/6345#issuecomment-49245365
RUN ln -s -f /bin/true /usr/bin/chfn


# Disable SSH and existing cron jobs
RUN rm -rf /etc/service/sshd \
  /etc/my_init.d/00_regen_ssh_host_keys.sh \
  /etc/cron.daily/dpkg \
  /etc/cron.daily/apt \
  /etc/cron.daily/passwd \
  /etc/cron.daily/logrotate \
  /etc/cron.daily/upstart \
  /etc/cron.weekly/fstrim


# Ensure UTF-8 locale
COPY locale /etc/default/locale
RUN locale-gen en_US.UTF-8 &&\
  dpkg-reconfigure locales


# Update APT
RUN DEBIAN_FRONTEND=noninteractive apt-get update


# Install build dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y wget


# Add PostgreSQL Global Development Group apt source
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Add PGDG repository key
RUN wget -qO - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add -


RUN DEBIAN_FRONTEND=noninteractive apt-get update


# Install Postgres, PL/Python, PL/V8
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
  postgresql-$VERSION \
  postgresql-contrib-$VERSION \
  postgresql-server-dev-$VERSION \
  postgresql-plpython-$VERSION \
  postgresql-$VERSION-plv8 \
# Install WAL-E dependencies
  libxml2-dev \
  libxslt1-dev \
  python-dev \
  python-pip \
  daemontools \
  libevent-dev \
  lzop \
  pv \
  libffi-dev \
  libssl-dev &&\
  pip install virtualenv


# Install WAL-E into a virtualenv
RUN virtualenv /var/lib/postgresql/wal-e &&\
  . /var/lib/postgresql/wal-e/bin/activate &&\
  pip install wal-e &&\
  ln -s /var/lib/postgresql/wal-e/bin/wal-e /usr/local/bin/wal-e


# Create directory for storing secret WAL-E environment variables
RUN umask u=rwx,g=rx,o= &&\
  mkdir -p /etc/wal-e.d/env &&\
  chown -R root:postgres /etc/wal-e.d


# Remove build dependencies and clean up APT and temporary files
RUN DEBIAN_FRONTEND=noninteractive apt-get remove --purge -y wget &&\
  apt-get clean &&\
  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Copy basic Postgres configs with values suitable for development
# (note: these should be overridden in production!)
COPY ./pg_hba.conf     /etc/postgresql/$VERSION/main/
COPY ./postgresql.conf /etc/postgresql/$VERSION/main/


# COPY sets ownership on this directory to root
RUN chown -R postgres:postgres /etc/postgresql/$VERSION/main


# Use wrapper scripts to start cron and Postgres
COPY scripts /data/scripts
RUN chmod -R 755 /data/scripts


# Copy runit configs
RUN mkdir -m 755 -p /etc/service/postgres
COPY runit/cron     /etc/service/cron/run
COPY runit/postgres /etc/service/postgres/run
RUN chmod 755 /etc/service/cron/run /etc/service/postgres/run


USER postgres


RUN /etc/init.d/postgresql start &&\
  psql --command ""ALTER USER postgres WITH PASSWORD '$PASSWORD';"" &&\
  /etc/init.d/postgresql stop


USER root


# The image only runs Postgres by default. If you want to run periodic full
# backups with cron + WAL-E you should start supervisord instead (see README)
CMD [""/data/scripts/start_postgres.sh""]


# Keep Postgres log, config and storage outside of union filesystem
VOLUME [""/var/log/postgresql"", \
 ""/var/log/supervisor"", \
 ""/etc/postgresql/9.4/main"", \
 ""/var/lib/postgresql/9.4/main""]


EXPOSE 5432
","Shell
100.0%",2013-11-14 03:23:24,2017-06-30 09:02:22,https://github.com/abevoelker/docker-postgres
23,colmsjo/myblog.old2,,"# MySQL Server with Apache and phpmyadmin
#
# VERSION               0.0.1


FROM     base
MAINTAINER Jonas Colmsjö ""jonas@gizur.com""




RUN apt-get update
RUN apt-get install -y curl git


# Install NodeJS


RUN curl https://raw.github.com/creationix/nvm/master/install.sh | sh
RUN echo ""[ -s $HOME/.nvm/nvm.sh ] && . $HOME/.nvm/nvm.sh"" > /.profile
RUN /bin/bash -c ""source /.profile && nvm install v0.10.24""




# Bundle app source
ADD . /src


# Install app dependencies
RUN /bin/bash -c ""source /.profile && cd /src && nvm use v0.10.24 && npm install""


EXPOSE  9778
CMD [""/src/run.sh"",""""]
","Perl
58.9%





Shell
34.2%





CoffeeScript
6.9%",2013-12-24 10:51:28,2014-09-09 14:50:58,https://github.com/colmsjo/myblog.old2
24,apeyroux/dockerfiles,,"from         j4pe/saucy
maintainer   j4pe


RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -s /bin/true /sbin/initctl


RUN echo ""deb http://archive.ubuntu.com/ubuntu saucy main universe"" > /etc/apt/sources.list
RUN apt-get update
RUN apt-get upgrade -y 
RUN apt-get install software-properties-common python-software-properties -y 
RUN add-apt-repository ppa:tuxpoldo/btsync -y
RUN apt-get update
RUN export DEBIAN_FRONTEND=noninteractive; apt-get install btsync -y  --force-yes
RUN rm -f /etc/btsync/debconf-default.conf
RUN mkdir -p /data/btsync
RUN mkdir -p /data/.btsync
ADD btsync.conf /etc/btsync/btsync.conf
RUN restart btsync


EXPOSE 3369/udp
EXPOSE 8888


CMD [""/usr/lib/btsync/btsync-daemon"", ""--nodaemon"", ""--config"", ""/etc/btsync/btsync.conf""]
","Ruby
77.6%





Shell
22.4%",2013-11-05 22:06:27,2014-11-04 11:32:39,https://github.com/apeyroux/dockerfiles
25,apeyroux/dockerfiles,,"from         j4pe/saucy
maintainer   j4pe


RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -s /bin/true /sbin/initctl


RUN echo ""deb http://archive.ubuntu.com/ubuntu saucy main universe"" > /etc/apt/sources.list


RUN apt-get update
RUN apt-get upgrade -y 
RUN export DEBIAN_FRONTEND=noninteractive; apt-get install haskell-platform vim -y
RUN useradd ja -d /home/ja -s /bin/bash
","Ruby
77.6%





Shell
22.4%",2013-11-05 22:06:27,2014-11-04 11:32:39,https://github.com/apeyroux/dockerfiles
26,apeyroux/dockerfiles,,"from j4pe/saucy
maintainer j4pe




RUN echo ""deb http://archive.ubuntu.com/ubuntu saucy main universe"" > /etc/apt/sources.list


run apt-get update
run apt-get install -y -q nginx
run rm /etc/nginx/sites-enabled/default
run echo ""daemon off;"" >> /etc/nginx/nginx.conf
add j4.pe /etc/nginx/sites-enabled/j4.pe
expose 80
cmd [""nginx""]
","Ruby
77.6%





Shell
22.4%",2013-11-05 22:06:27,2014-11-04 11:32:39,https://github.com/apeyroux/dockerfiles
27,judy/dockerfiles,,"# Minecraft server for 1.7.2
# Originally forked from crosbymichael at https://github.com/crosbymichael/Dockerfiles


MAINTAINER Clinton Judy, clinton@j-udy.com
FROM ubuntu


# Update and grab dependencies
RUN echo ""deb http://archive.ubuntu.com/ubuntu precise main universe"" > /etc/apt/sources.list
RUN apt-get update
RUN apt-get upgrade -y
RUN apt-get install -y openjdk-7-jre-headless openjdk-7-jre-lib wget git curl wget


# Install minecraft.jar to /minecraft
RUN mkdir /minecraft
RUN wget -O /minecraft/minecraft.jar https://s3.amazonaws.com/Minecraft.Download/versions/1.7.2/minecraft_server.1.7.2.jar
RUN chmod +x /minecraft/minecraft.jar


# Use default port of 25565, and require it externally.
EXPOSE 25565:25565


# Default command runs minecraft with recommended memory settings.
WORKDIR /minecraft
ENTRYPOINT [""/usr/bin/java"", ""-Xmx1024M"", ""-Xms1024M"", ""-jar"", ""/minecraft/minecraft.jar"", ""nogui""]
","Shell
100.0%",2013-11-03 05:57:48,2013-11-03 05:58:30,https://github.com/judy/dockerfiles
28,CoderDojoTC/python-minecraft,"Organization(name=None, id=3444699)","# Builds a Docker image that is suitable for compiling Canary. This is
# helpful when/if we need to make a local build of Canary.


FROM ubuntu:14.04
MAINTAINER Mike McCallister <mike@mccllstr.com>


# Pull in the components we need from Ubuntu. This is done here
# instead of in the server setup script because it lets Docker take
# advantage of its cache, which greatly speeds up subsequent builds.


RUN apt-get update \
    && apt-get install -y \
	git-core \
	maven \
	openjdk-7-jdk \
    && apt-get clean


# This is intended to be an interactive environment in which you can
# build Canary.
CMD [""bash"", ""-l""]
","Jupyter Notebook
74.2%





Python
21.9%





Shell
3.3%





Ruby
0.6%",2013-11-09 21:10:26,2017-11-19 13:40:31,https://github.com/CoderDojoTC/python-minecraft
29,CoderDojoTC/python-minecraft,"Organization(name=None, id=3444699)","# Builds the python-minecraft-student Docker image. Each student will
# get their own container built from this image.


FROM phusion/baseimage:0.9.16
MAINTAINER Mike McCallister <mike@mccllstr.com>


# ----------------------------------------------------------------------------
# Pull in the components we need from Ubuntu. This is done here
# instead of in the server setup script because it lets Docker take
# advantage of its cache, which greatly speeds up subsequent builds.


RUN apt-get update \
    && apt-get install --no-install-recommends --no-install-suggests -y \
        apg \
        curl \
        git-core \
        haveged \
        ipython-notebook \
        openjdk-7-jre-headless \
        openssl \
        psmisc \
        python-imaging \
        python-pip \
        python-pygame \
        supervisor \
        tmux \
        unison \
        unzip \
        zip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Upgrade IPython to get improved usability of the Notebook server
RUN pip install --upgrade jsonschema==2.4.0 tornado==4.0.0 ipython==3.1.0




# ----------------------------------------------------------------------------
# Minor configurations


# Set up Supervisor to run the pieces of the student's environment
COPY minecraft-lab.conf /etc/supervisor/conf.d/minecraft-lab.conf


# Copy our convenience commands into the image
COPY commands/ /usr/local/bin


# Expose the ports for the IPython notebook server and Minecraft
EXPOSE 8888
EXPOSE 25565


# Set the default command when a container is run
CMD [""/usr/bin/supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf""]


# Set up the student user
RUN [""adduser"", ""student"", ""--disabled-password"", ""--disabled-login"", ""--gecos"", """"]




# ----------------------------------------------------------------------------
# Prepare the image to run the Canary (Minecraft) Server


# Copy the default Canary configuration/files/world into the image


# NOTE: the contents of the following directory can be recreated with
# the following commands:
#
#     rm -rf server-files/*
#     cd server-files
#     java -jar CANARY_JAR_FILE nogui
#
# Then, make the necessary edits by hand. Do this if the Canary
# version moves ahead far enough that we need to create new default
# configuration files.


COPY default-canary-files/ /usr/local/share/default-canary-files/


# Get a copy of the RaspberryJuice plugin from GitHub


ADD https://github.com/martinohanlon/CanaryRaspberryJuice/blob/master/jars/canaryraspberryjuice-1.3.jar?raw=true /usr/local/share/default-canary-files/plugins/


# Download the Canary jar file


#ADD https://ci.visualillusionsent.net/job/CanaryMod/805/artifact/target/CanaryMod-1.8.0-1.2.1-SNAPSHOT-shaded.jar /usr/local/bin/
ADD http://canarymod.net/releases/CanaryMod-1.2.0.jar /usr/local/bin/CanaryMod-1.8.0-1.2.0-shaded.jar
","Jupyter Notebook
74.2%





Python
21.9%





Shell
3.3%





Ruby
0.6%",2013-11-09 21:10:26,2017-11-19 13:40:31,https://github.com/CoderDojoTC/python-minecraft
0,inetsys/docker-ubuntu,"Organization(name=None, id=4223050)","FROM ubuntu:12.04
MAINTAINER Pablo Banderas <pablo.banderas@inetsys.es>


# Run upgrades
RUN echo deb http://us.archive.ubuntu.com/ubuntu/ precise universe multiverse >> /etc/apt/sources.list;\
  echo deb http://us.archive.ubuntu.com/ubuntu/ precise-updates main restricted universe >> /etc/apt/sources.list;\
  echo deb http://security.ubuntu.com/ubuntu precise-security main restricted universe >> /etc/apt/sources.list;\
  echo udev hold | dpkg --set-selections;\
  echo initscripts hold | dpkg --set-selections;\
  echo upstart hold | dpkg --set-selections;\
  apt-get update;\
  apt-get -y upgrade;\
  apt-get -y install wget curl vim python-setuptools man;


# Supervisor Installation
RUN /usr/bin/easy_install supervisor
","Shell
100.0%",2013-11-19 08:04:26,2014-04-01 06:36:30,https://github.com/inetsys/docker-ubuntu
1,cglewis/wharf-services-example,,"FROM ubuntu
MAINTAINER Charlie Lewis <charlie.lewis42@gmail.com> 


ENV REFRESHED_AT 2013-10-25
RUN sed 's/main$/main universe/' -i /etc/apt/sources.list
RUN apt-get update
RUN apt-get upgrade -y


# Keep upstart from complaining
RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -s /bin/true /sbin/initctl


RUN apt-get install -y openjdk-6-jdk
RUN apt-get install -y wget
RUN apt-get install -y dpkg
RUN wget --no-check-certificate https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-0.90.2.deb
RUN dpkg -i elasticsearch-0.90.2.deb
RUN /usr/share/elasticsearch/bin/plugin -install mobz/elasticsearch-head
RUN service elasticsearch stop


EXPOSE 9200


ENTRYPOINT [""/usr/share/elasticsearch/bin/elasticsearch"", ""-f""]
","Shell
60.5%





JavaScript
33.2%





Python
6.3%",2013-11-24 23:05:25,2016-08-01 22:51:46,https://github.com/cglewis/wharf-services-example
2,cglewis/wharf-services-example,,"FROM ubuntu
MAINTAINER Charlie Lewis <charlie.lewis42@gmail.com> 


ENV REFRESHED_AT 2013-10-25
RUN sed 's/main$/main universe/' -i /etc/apt/sources.list
RUN apt-get update
RUN apt-get upgrade -y


# Keep upstart from complaining
RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -s /bin/true /sbin/initctl


# python
RUN apt-get install -y python-software-properties
RUN apt-get install -y software-properties-common
RUN add-apt-repository ppa:fkrull/deadsnakes
RUN apt-get update
RUN apt-get install -y python2.7


# kibana
RUN apt-get install -y wget
RUN apt-get install -y zip 
RUN wget http://download.elasticsearch.org/kibana/kibana/kibana-latest.zip  
RUN unzip kibana-latest.zip
ADD config.js /kibana-latest/


EXPOSE 8000


ENTRYPOINT cd /kibana-latest; python -m SimpleHTTPServer
","Shell
60.5%





JavaScript
33.2%





Python
6.3%",2013-11-24 23:05:25,2016-08-01 22:51:46,https://github.com/cglewis/wharf-services-example
3,cglewis/wharf-services-example,,"# Copyright 2013 dotCloud inc.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.




# Install the latest stable MongoDb from their repos, and start it with 
# your custom configuration file


FROM ubuntu:precise
MAINTAINER Dockerfiles <dockerfiles@docker.io>


RUN apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
RUN echo ""deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen"" | tee -a /etc/apt/sources.list.d/10gen.list
RUN apt-get update
RUN apt-get -y install apt-utils
RUN apt-get -y install mongodb-10gen


ADD mongodb.conf /etc/mongodb.conf
EXPOSE 27017


CMD [""/usr/bin/mongod"", ""--config"", ""/etc/mongodb.conf""]
# to persist the data start the container with a volume mounted to /var/lib/mongodb


","Shell
60.5%





JavaScript
33.2%





Python
6.3%",2013-11-24 23:05:25,2016-08-01 22:51:46,https://github.com/cglewis/wharf-services-example
4,cglewis/wharf-services-example,,"FROM ubuntu
MAINTAINER Charlie Lewis <charlie.lewis42@gmail.com>


ENV REFRESHED_AT 2013-10-22
RUN sed 's/main$/main universe/' -i /etc/apt/sources.list
RUN apt-get update
RUN apt-get upgrade -y


# Keep upstart from complaining
RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -s /bin/true /sbin/initctl


# sets root password to root, but isn't accessible from the outside
RUN echo 'mysql-server-5.5 mysql-server/root_password password password' | debconf-set-selections
RUN echo 'mysql-server-5.5 mysql-server/root_password_again password password' | debconf-set-selections


RUN apt-get update && apt-get install -y mysql-server && apt-get clean && rm -rf /var/lib/apt/lists/*
RUN sed -i -e""s/^bind-address\s*=\s*127.0.0.1/bind-address = 0.0.0.0/"" /etc/mysql/my.cnf


ADD mysql-setup.sh /tmp/mysql-setup.sh
RUN /bin/sh /tmp/mysql-setup.sh


EXPOSE 3306


ENTRYPOINT [""/usr/sbin/mysqld""]
","Shell
60.5%





JavaScript
33.2%





Python
6.3%",2013-11-24 23:05:25,2016-08-01 22:51:46,https://github.com/cglewis/wharf-services-example
5,jottr/docker-lamp,,"# runnable base
FROM boxcar/raring


MAINTAINER github.com/jottr
# based on https://github.com/Runnable/dockerfiles


# REPOS
RUN apt-get -y update && date
RUN apt-get install -y -q software-properties-common
RUN add-apt-repository -y ""deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) universe""
RUN apt-get -y update


#SHIMS


## Hack for initctl
## See: https://github.com/dotcloud/docker/issues/1024
RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -s /bin/true /sbin/initctl
ENV DEBIAN_FRONTEND noninteractive


# ENVIRONMENT
ENV TZ Europe/Berlin


# EDITORS
RUN apt-get install -y -q vim-tiny


# TOOLS
RUN apt-get install -y -q curl git make wget


# LANGS


## PHP
RUN apt-get install -y -q php5 php5-cli php5-dev php-pear php5-fpm php5-common php5-mcrypt php5-gd php-apc php5-curl php5-tidy php5-xmlrpc




# SERVICES


## SUPERVISOR
RUN apt-get install -y -q supervisor
ADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf


## SSH 
RUN apt-get install -y -q openssh-server
RUN mkdir -p /var/run/sshd
 
 


## MEMCACHED
#RUN apt-get install -y -q memcached
#RUN pecl install memcache


## MAGICK
#RUN apt-get install -y -q imagemagick graphicsmagick graphicsmagick-libmagick-dev-compat php5-imagick
#RUN pecl install imagick


## APACHE
RUN apt-get install -y -q apache2 libapache2-mod-php5
RUN a2enmod rewrite


ADD apache_foreground.sh /etc/apache2/apache_foreground.sh
RUN chmod 755 /etc/apache2/apache_foreground.sh


ADD php.ini /etc/php5/apache2/php.ini
RUN chmod 755 /etc/php5/apache2/php.ini


RUN chown -R www-data:www-data /var/www


## MYSQL
RUN apt-get install -y -q mysql-client mysql-server php5-mysql
RUN mysqld & sleep 2 && mysqladmin create mydb




## APP
#RUN rm -rf /var/www/*
#ADD app /var/www


## CREDENTIALS
RUN echo ""root:root"" | chpasswd


## PORTS
EXPOSE 80
EXPOSE 22


CMD [""/usr/bin/supervisord"", ""-n""]




# RESET


#ENV DEBIAN_FRONTEND dialog


## CONFIG
#ENV RUNNABLE_USER_DIR /var/www
#ENV RUNNABLE_SERVICE_CMDS memcached -d -u www-data; /etc/init.d/apache2 restart; mysqld
","Shell
100.0%",2013-11-27 15:40:29,2014-01-22 19:07:21,https://github.com/jottr/docker-lamp
6,fgrehm/ventriloquist,,"# Base image for creating Ventriloquist services


FROM debian:jessie
MAINTAINER Fabio Rehm ""fgrehm@gmail.com""


RUN apt-get update && apt-get install -y \
      git \
      libxml2-dev \
      build-essential \
      make \
      gcc \
      locales \
      curl \
      psmisc \
      vim \
      cron \
      python \
      logrotate \
      lsb-release \
      wget && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
7,fgrehm/ventriloquist,,"# Elasticsearch


FROM fgrehm/ventriloquist-openjdk7


RUN wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.1.0.deb -O /tmp/elasticsearch.deb -q --no-check-certificate && \
    dpkg -i /tmp/elasticsearch.deb && \
    rm /tmp/elasticsearch.deb && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean


EXPOSE 9200
CMD    [""/usr/share/elasticsearch/bin/elasticsearch"", ""-f""]
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
8,fgrehm/ventriloquist,,"# MailCatcher


FROM fgrehm/ventriloquist-base


RUN apt-get update && \
    apt-get install -y \
      ruby \
      ruby-dev \
      sqlite3 \
      libsqlite3-dev && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean


RUN gem install mailcatcher --no-ri --no-rdoc


EXPOSE 1025
EXPOSE 1080
CMD    [""/usr/local/bin/mailcatcher"", ""-f"", ""--ip"", ""0.0.0.0""]
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
9,fgrehm/ventriloquist,,"# Memcached


FROM fgrehm/ventriloquist-base


RUN wget -q http://www.memcached.org/files/memcached-1.4.17.tar.gz -O /tmp/memcached.tar.gz && \
    cd /tmp && \
    tar xvfz memcached.tar.gz && \
    cd memcached-1.4.17 && \
    apt-get update && \
    apt-get install libevent-dev -y && \
    ./configure --prefix=/usr/local/memcached && \
    make && \
    make install && \
    cd .. && rm -rf memcached* && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean


EXPOSE 11211
CMD    [""/usr/local/memcached/bin/memcached"", ""-u"", ""daemon""]
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
10,fgrehm/ventriloquist,,"# MySQL 5.5


FROM fgrehm/ventriloquist-base


# prevent apt from starting mysql right after the installation
RUN echo ""#!/bin/sh\nexit 101"" > /usr/sbin/policy-rc.d; chmod +x /usr/sbin/policy-rc.d && \
    apt-get update && \
    apt-get -q -y install mysql-server-5.5 && \
    apt-get clean && \
    sed -i 's/127.0.0.1/0.0.0.0/' /etc/mysql/my.cnf && \
    apt-get clean && \
    rm /usr/sbin/policy-rc.d # allow autostart again


ADD config /
RUN /bin/add-mysql-user


EXPOSE  3306
CMD     [""/usr/sbin/mysqld""]
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
11,fgrehm/ventriloquist,,"# MySQL 5.6
# Somehow based on http://www.peterchen.net/2013/02/20/en-how-to-install-mysql-5-6-on-ubuntu-12-04-precise/


FROM fgrehm/ventriloquist-base


RUN apt-get update && \
    apt-get install libaio-dev -y && \
    wget -q http://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.17-debian6.0-x86_64.deb -O /tmp/mysql.deb && \
    dpkg -i /tmp/mysql.deb && \
    rm /tmp/mysql.deb && \
    groupadd mysql && \
    useradd -r -g mysql mysql && \
    mkdir -p /etc/mysql/conf.d && \
    mkdir -p /var/log/mysql && \
    mkdir -p /var/run/mysqld && \
    chown -R mysql:mysql /opt/mysql/server-5.6 && \
    chown -R mysql:mysql /var/run/mysqld && \
    /opt/mysql/server-5.6/scripts/mysql_install_db --user=mysql --datadir=/var/lib/mysql && \
    rm /opt/mysql/server-5.6/my*.cnf && \
    echo 'export PATH=""/opt/mysql/server-5.6/bin:$PATH""' > /etc/profile.d/mysql.sh && \
    rm /opt/mysql/server-5.6/bin/mysqld-debug && \
    rm /opt/mysql/server-5.6/bin/mysqltest_* && \
    rm /opt/mysql/server-5.6/bin/mysql_client_test* && \
    rm /opt/mysql/server-5.6/lib/libmysqld-debug.a && \
    rm -rf /opt/mysql/server-5.6/mysql-test && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean


ADD config /


RUN /bin/add-mysql-user


EXPOSE  3306
CMD     [""/opt/mysql/server-5.6/bin/mysqld""]
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
12,fgrehm/ventriloquist,,"# Base openjdk image


FROM fgrehm/ventriloquist-base


RUN apt-get update && \
    apt-get install -y openjdk-7-jre-headless && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
13,fgrehm/ventriloquist,,"# PostgreSQL 9.1


FROM fgrehm/ventriloquist-base


RUN wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add - && \
    echo ""deb http://apt.postgresql.org/pub/repos/apt sid-pgdg main"" > /etc/apt/sources.list.d/pgdg.list && \
    apt-get update && \
    apt-get install -y postgresql-9.1 postgresql-contrib-9.1 && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean


ADD config /
RUN /bin/prepare-postgres vagrant vagrant


EXPOSE  5432
CMD     [""/bin/start-postgres""]
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
14,fgrehm/ventriloquist,,"# PostgreSQL 9.2


FROM fgrehm/ventriloquist-base


RUN wget --quiet -O - http://apt.postgresql.org/pub/repos/apt/ACCC4CF8.asc | apt-key add - && \
    echo ""deb http://apt.postgresql.org/pub/repos/apt sid-pgdg main"" > /etc/apt/sources.list.d/pgdg.list && \
    apt-get update && \
    apt-get install -y postgresql-9.2 postgresql-contrib-9.2 && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean


ADD config /
RUN /bin/prepare-postgres vagrant vagrant


EXPOSE  5432
CMD     [""/bin/start-postgres""]
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
15,fgrehm/ventriloquist,,"# PostgreSQL 9.3


FROM fgrehm/ventriloquist-base


RUN apt-get update && \
    apt-get install -y postgresql-9.3 postgresql-contrib-9.3 && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean


ADD config /
RUN /bin/prepare-postgres vagrant vagrant


EXPOSE  5432
CMD     [""/bin/start-postgres""]
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
16,fgrehm/ventriloquist,,"# Redis Server


FROM fgrehm/ventriloquist-base


RUN wget -q http://download.redis.io/releases/redis-2.8.8.tar.gz -O /tmp/redis.tar.gz && \
    cd /tmp && \
    tar xvfz redis.tar.gz && \
    cd redis-2.8.8 && \
    make redis-server && \
    mv src/redis-server /usr/bin && \
    cd .. && rm -rf redis* && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean


EXPOSE 6379
CMD    [""/usr/bin/redis-server""]
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
17,fgrehm/ventriloquist,,"# Dockerfile for Rethinkdb
# Based on https://github.com/crosbymichael/Dockerfiles/blob/master/rethinkdb/Dockerfile


FROM fgrehm/ventriloquist-base


RUN wget http://blog.anantshri.info/content/uploads/2010/09/add-apt-repository.sh.txt -O /tmp/add-apt-repository.sh.txt && \
    mv /tmp/add-apt-repository.sh.txt /usr/sbin/add-apt-repository && \
    chmod o+x /usr/sbin/add-apt-repository && \
    chown root:root /usr/sbin/add-apt-repository && \
    add-apt-repository ppa:rethinkdb/ppa && \
    apt-get update && \
    apt-get install -y rethinkdb && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* && \
    apt-get autoremove && \
    apt-get clean


# create the /rethinkdb_data dir structure
RUN /usr/bin/rethinkdb create


# Rethinkdb process, cluster, and webui
EXPOSE 28015 29015 8080


CMD [""/usr/bin/rethinkdb"", ""--bind"", ""all""]
","Ruby
81.7%





Shell
18.3%",2013-09-10 17:16:24,2017-10-31 20:52:23,https://github.com/fgrehm/ventriloquist
18,docker/gordon,"Organization(name=None, id=5429470)","FROM debian:wheezy
MAINTAINER Sven Dowideit <SvenDowideit@home.org.au> (@SvenDowideit)
#
# Run gordon in a container
#    `pulls() { docker run --rm -it -v $PWD:/src --workdir /src -e HOME=/src gordon pulls $@; }`
#


# Packaged dependencies
RUN apt-get update && apt-get install -yq --no-install-recommends build-essential ca-certificates curl git mercurial vim-tiny


# Install Go from binary release
RUN curl -s https://go.googlecode.com/files/go1.2.1.linux-amd64.tar.gz | tar -v -C /usr/local -xz
ENV PATH /go/bin:/usr/local/go/bin:$PATH
ENV GOPATH  /go


RUN go get -u github.com/dotcloud/gordon/pulls
RUN go get -u github.com/dotcloud/gordon/issues
","Go
69.7%





Python
22.7%





HTML
6.4%





Shell
1.2%",2013-10-30 22:10:05,2017-10-02 19:06:30,https://github.com/docker/gordon
19,docker/gordon,"Organization(name=None, id=5429470)","from ubuntu:12.04
maintainer Nick Stinemates


run apt-get install -y python-setuptools
run easy_install pip


add . /website
run pip install -r /website/requirements.txt
env PYTHONPATH /website
expose 5000


cmd [""python"", ""website/web/server.py""]
","Go
69.7%





Python
22.7%





HTML
6.4%





Shell
1.2%",2013-10-30 22:10:05,2017-10-02 19:06:30,https://github.com/docker/gordon
20,mproch/docker-oracle-xe,,"FROM ubuntu


MAINTAINER mpr@touk.pl


ENV ORACLE_SID XE


ENV ORACLE_HOME /u01/app/oracle/product/11.2.0/xe


ADD ./files /tmp/filesOracle


RUN ./tmp/filesOracle/install.sh


CMD /run.sh


EXPOSE 1521


","Shell
100.0%",2013-11-24 21:22:05,2015-05-22 09:26:37,https://github.com/mproch/docker-oracle-xe
21,sysdia/docker-varnish,,"FROM ubuntu:12.04
RUN apt-get -q -y update


RUN echo 'deb http://archive.ubuntu.com/ubuntu precise main universe' > /etc/apt/sources.list
RUN echo 'deb http://archive.ubuntu.com/ubuntu precise-updates universe' >> /etc/apt/sources.list
RUN echo ""deb http://us.archive.ubuntu.com/ubuntu/ precise universe"" >> /etc/apt/sources.list


RUN apt-get -q -y update
RUN apt-get install -q -y varnish
","Shell
100.0%",2013-12-25 19:05:36,2014-02-07 16:36:34,https://github.com/sysdia/docker-varnish
22,ccarpita/wedding,,"FROM alpine:3.2
RUN apk add --update nginx && rm -rf /var/cache/apk/*
RUN mkdir -p /tmp/nginx/client-body


COPY nginx/nginx.conf /etc/nginx/nginx.conf
COPY nginx/default.conf /etc/nginx/conf.d/default.conf
COPY src/public /usr/share/nginx/html
COPY vendor/lightbox-2.6/css/* /usr/share/nginx/html/assets/css/
COPY vendor/lightbox-2.6/js/* /usr/share/nginx/html/assets/js/
COPY vendor/lightbox-2.6/img/* /usr/share/nginx/html/assets/img/


CMD [""nginx"", ""-g"", ""daemon off;""]
","HTML
77.1%





CSS
19.4%





Nginx
3.5%",2014-02-09 03:57:50,2016-03-11 20:56:56,https://github.com/ccarpita/wedding
23,futoase/docker-centos-perl-base,,"FROM centos


MAINTAINER Keiji Matsuzaki <futoase@gmail.com>


# setup network
# reference from https://github.com/dotcloud/docker/issues/1240#issuecomment-21807183
RUN echo ""NETWORKING=yes"" > /etc/sysconfig/network
 
# setup remi repository
RUN wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
RUN wget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
RUN curl -O http://rpms.famillecollet.com/RPM-GPG-KEY-remi; rpm --import RPM-GPG-KEY-remi
RUN rpm -Uvh remi-release-6*.rpm epel-release-6*.rpm
 
# setup tools
# reference from http://blog.nomadscafe.jp/2013/12/centos-65dockergrowthforecast.html
RUN yum -y groupinstall --enablerepo=epel,remi ""Development Tools""
RUN yum -y install --enablerepo=epel,remi pkgconfig glib2-devel gettext libxml2-devel pango-devel cairo-devel git ipa-gothic-fonts
RUN yum -y install --enablerepo=epel,remi mysql mysql-server mysql-devel
 
# setup perlbrew
RUN export PERLBREW_ROOT=/opt/perlbrew && curl -L http://install.perlbrew.pl | bash
RUN source /opt/perlbrew/etc/bashrc && perlbrew install perl-5.18.2
RUN source /opt/perlbrew/etc/bashrc && perlbrew use perl-5.18.2 && perlbrew install-cpanm


ENV PATH /opt/perlbrew/bin/:/opt/perlbrew/perls/perl-5.18.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
","Shell
100.0%",2014-02-03 14:07:08,2017-02-13 13:17:16,https://github.com/futoase/docker-centos-perl-base
24,yoshiso/docker_rails_base,,"# DOCKER-RAILS
#
# VERSION       1


FROM centos


MAINTAINER yoshiso


RUN yum -y update


#Dev tools for all Docker
RUN yum -y install git vim
RUN yum -y install passwd openssh openssh-server openssh-clients sudo


########################################## sshd ##############################################


# create user
RUN useradd yoshiso
RUN passwd -f -u yoshiso
RUN mkdir -p /home/yoshiso/.ssh;chown yoshiso /home/yoshiso/.ssh; chmod 700 /home/yoshiso/.ssh
ADD sshd/authorized_keys /home/yoshiso/.ssh/authorized_keys
RUN chown yoshiso /home/yoshiso/.ssh/authorized_keys;chmod 600 /home/yoshiso/.ssh/authorized_keys
# setup sudoers
RUN echo ""yoshiso ALL=(ALL) ALL"" >> /etc/sudoers.d/yoshiso
# setup sshd
ADD sshd/sshd_config /etc/ssh/sshd_config
RUN /etc/init.d/sshd start;/etc/init.d/sshd stop


#######################################  Supervisord  ########################################


RUN wget http://peak.telecommunity.com/dist/ez_setup.py;python ez_setup.py;easy_install distribute;
RUN wget https://raw.github.com/pypa/pip/master/contrib/get-pip.py;python get-pip.py;
RUN pip install supervisor


ADD supervisor/supervisord.conf /etc/supervisord.conf




#######################################   Ruby and Node Runtime  ########################################
# Installing Rails Runtime, Ruby and Node.js
RUN yum -y install gcc make zlib zlib-devel readline readline-devel openssl openssl-devel curl curl-devel
ADD install.sh install.sh
RUN chmod +x install.sh; ./install.sh;


RUN usermod -G yoshiso,rbenv,nvm yoshiso




###################################### Docker config #########################################




# expose for sshd


EXPOSE 2222


CMD [""/usr/bin/supervisord""]


","Shell
100.0%",2014-01-06 08:56:09,2014-08-05 05:24:58,https://github.com/yoshiso/docker_rails_base
25,sleekslush/docker-d,,"# A container for building D applications.
#
# VERSION 0.0.3


FROM cslusher/archlinux
MAINTAINER Craig Slusher <cslush@gmail.com>


RUN pacman --noconfirm -S dmd dtools dub gdb
",,2014-01-30 20:22:09,2015-01-12 14:50:20,https://github.com/sleekslush/docker-d
26,futoase/docker-centos-ruby-base,,"FROM centos


MAINTAINER Keiji Matsuzaki <futoase@gmail.com>


# setup network
# reference from https://github.com/dotcloud/docker/issues/1240#issuecomment-21807183
RUN echo ""NETWORKING=yes"" > /etc/sysconfig/network


# setup remi repository
RUN wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
RUN wget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
RUN curl -O http://rpms.famillecollet.com/RPM-GPG-KEY-remi; rpm --import RPM-GPG-KEY-remi
RUN rpm -Uvh remi-release-6*.rpm epel-release-6*.rpm


RUN yum -y update
RUN yum -y groupinstall --enablerepo=epel,remi ""Development Tools""
RUN yum -y install --enablerepo=epel,remi openssl-devel git sqlite sqlite-devel libyaml-devel libxslt-devel


# setup ruby-install
RUN mkdir -p /tmp/download
RUN wget -O /tmp/download/ruby-install-0.3.4.tar.gz https://github.com/postmodern/ruby-install/archive/v0.3.4.tar.gz
RUN cd /tmp/download && tar -xvzf ruby-install-0.3.4.tar.gz
RUN cd /tmp/download/ruby-install-0.3.4 && make install


RUN ruby-install ruby 2.0.0-p353


ENV PATH /opt/rubies/ruby-2.0.0-p353/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin


RUN gem install bundle --no-ri --no-rdoc 
","Shell
100.0%",2014-02-03 18:03:29,2014-02-06 15:32:56,https://github.com/futoase/docker-centos-ruby-base
27,mattymo/fuel-docker-cobbler,,"# fuel-cobbler
#
# Version     0.1


FROM centos
MAINTAINER Matthew Mosesohn mmosesohn@mirantis.com


WORKDIR /root


RUN rm -rf /etc/yum.repos.d/*
RUN echo -e ""[nailgun]\nname=Nailgun Local Repo\nbaseurl=http://$(/sbin/ip route | awk '/default/ { print $3 }'):8080/centos/fuelweb/x86_64/\ngpgcheck=0"" > /etc/yum.repos.d/nailgun.repo
RUN yum clean all
RUN yum --quiet install -y ruby21-puppet
RUN yum --quiet install -y httpd cobbler dnsmasq xinetd tftp-server


ADD etc /etc
#Workaround for dnsmasq startup
RUN echo -e ""NETWORKING=yes\nHOSTNAME=$HOSTNAME"" > /etc/sysconfig/network
#FIXME workaround for ssh key
RUN mkdir -p /root/.ssh; chmod 700 /root/.ssh; touch /root/.ssh/id_rsa.pub




RUN /etc/init.d/httpd start && puppet apply -v /etc/puppet/modules/nailgun/examples/cobbler-only.pp


RUN mkdir -p /usr/local/bin
ADD start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh


EXPOSE 67
EXPOSE 69
EXPOSE 80
EXPOSE 443
CMD /usr/local/bin/start.sh
","Shell
100.0%",2014-04-03 09:26:16,2014-04-17 12:23:39,https://github.com/mattymo/fuel-docker-cobbler
28,openaustralia/morph-docker-php,"Organization(name=None, id=102012)","FROM openaustralia/morph-base
MAINTAINER Matthew Landauer <matthew@oaf.org.au>


# Special handling to install scraperwiki library
RUN git clone https://github.com/openaustralia/scraperwiki-php.git /usr/local/lib/scraperwiki; cd /usr/local/lib/scraperwiki; git checkout 8c73912af696b0e43b28d2f829f90b35ac99c429
ADD php.ini /etc/php5/cli/php.ini


# TODO Install php5-geoip (which doesn't appear to be present on this version of Ubuntu)
RUN apt-get -y install php5-tidy php5-cli php5-curl php5-sqlite php5-gd php-pear re2c


# TODO This doesn't yet work because it needs the database
#RUN pecl install geoip
","Shell
100.0%",2014-01-17 02:11:38,2014-08-16 08:44:08,https://github.com/openaustralia/morph-docker-php
29,dg-ratiodata/local_pac,,"FROM archlinux


RUN pacman -Suy ruby git zsh sudo phantomjs --noconfirm


ADD src/shell/ruby.sh /etc/profile.d/ruby.sh
RUN chmod +x /etc/profile.d/ruby.sh
RUN chown root:root /etc/profile.d/ruby.sh


ADD src/ruby/gemrc /etc/gemrc
RUN chown root:root /etc/gemrc


ADD src/sudo/sudoers /etc/sudoers
RUN chown root:root /etc/sudoers


RUN useradd -m user -s /usr/bin/zsh
RUN echo user:user | chpasswd -c SHA256


RUN groupadd sudo
RUN gpasswd -a user sudo


ADD src/zsh/.zshrc /home/user/.zshrc


RUN su -l -c ""gem install bundler"" user
RUN su -l -c ""gem install rake"" user
","Ruby
91.3%





HTML
4.1%





CSS
2.2%





Shell
2.0%





Other
0.4%",2014-02-11 13:15:04,2015-04-08 11:48:38,https://github.com/dg-ratiodata/local_pac
0,mapk0y/docker-mysql-test01,,"FROM ubuntu:12.04
MAINTAINER Kazuya Yokogawa ""mapk0y@gmail.com""


RUN echo ""deb http://jp.archive.ubuntu.com/ubuntu/ precise main"" > /etc/apt/sources.list
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get -y install mysql-server wget
RUN apt-get install -y python


RUN sed -i -e""s/^bind-address\s*=\s*127.0.0.1/bind-address = 0.0.0.0/"" /etc/mysql/my.cnf
RUN wget http://dev.mysql.com/get/Downloads/Connector-Python/mysql-connector-python_1.1.4-1ubuntu12.04_all.deb
RUN dpkg -i mysql-connector-python_1.1.4-1ubuntu12.04_all.deb
RUN wget http://dev.mysql.com/get/Downloads/MySQLGUITools/mysql-utilities_1.3.6-1ubuntu12.04_all.deb
RUN dpkg -i mysql-utilities_1.3.6-1ubuntu12.04_all.deb
ADD init.sql /tmp/
RUN (/usr/bin/mysqld_safe &); sleep 3; mysql -u root < /tmp/init.sql


CMD [""/usr/bin/mysqld_safe""]
","Shell
100.0%",2014-01-08 17:39:39,2014-01-10 10:09:51,https://github.com/mapk0y/docker-mysql-test01
1,ukanga/docker-postgresql,,"FROM stackbrew/ubuntu


MAINTAINER Ukang'a Dickson

EXPOSE 5432

VOLUME [""/var/lib/postgres/data""]

ENV USERNAME dbusername
ENV PASS dbpasswd
ENV CODENAME precise

RUN echo ""deb http://archive.ubuntu.com/ubuntu precise main universe"" > /etc/apt/sources.list
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ $CODENAME-pgdg main"" > /etc/apt/sources.list.d/pgdg.list

ADD apt.postgresql.org.gpg /apt.postgresql.org.gpg
ENV KEYRING /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg
RUN test -e $KEYRING || touch $KEYRING
RUN apt-key --keyring $KEYRING add /apt.postgresql.org.gpg
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3

RUN mkdir -p /data/postgres
ADD pg_hba.conf /data/postgres/pg_hba.conf
ADD postgresql.conf /data/postgres/postgresql.conf

ADD start /start
RUN chmod 0755 /start

# Cleanup
RUN apt-get clean

CMD [""/start""]
","Shell
100.0%",2014-01-08 23:49:13,2014-01-22 17:01:44,https://github.com/ukanga/docker-postgresql
2,edpaget/docker-postgresql,,"# DOCKER-VERSION 0.9.0
# VERSION 0.2


FROM ubuntu:12.04
MAINTAINER Edward Paget <ed@zooniverse.org>


RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list
RUN apt-get update


RUN apt-get -y -q install python-software-properties software-properties-common
RUN apt-get -y -q install postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3


USER postgres
RUN /etc/init.d/postgresql start &&\
  psql --command ""CREATE USER storm WITH SUPERUSER PASSWORD 'storm';"" &&\
  createdb -O storm events


RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


EXPOSE 5432


CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/var/lib/postgresql/9.3/main"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","Shell
100.0%",2014-03-25 21:40:33,2014-03-25 21:41:39,https://github.com/edpaget/docker-postgresql
3,mingfang/docker-erlang,,"FROM ubuntu
 
RUN echo 'deb http://archive.ubuntu.com/ubuntu precise main universe' > /etc/apt/sources.list && \
    echo 'deb http://archive.ubuntu.com/ubuntu precise-updates universe' >> /etc/apt/sources.list && \
    apt-get update


#Prevent daemon start during install
RUN dpkg-divert --local --rename --add /sbin/initctl && ln -sf /bin/true /sbin/initctl


#Supervisord
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y supervisor && mkdir -p /var/log/supervisor
CMD [""/usr/bin/supervisord"", ""-n""]


#SSHD
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y openssh-server &&	mkdir /var/run/sshd && \
	echo 'root:root' |chpasswd


#Utilities
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y vim less net-tools inetutils-ping curl git telnet nmap socat dnsutils netcat tree htop unzip sudo


#Dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y default-jdk build-essential libncurses5-dev openssl libssl-dev fop xsltproc unixodbc-dev


#Erlang
RUN wget --no-check-certificate https://packages.erlang-solutions.com/erlang/esl-erlang-src/otp_src_R16B03-1.tar.gz && \
    tar xvf otp*tar.gz && \
    rm otp*tar.gz
RUN cd otp_src* && \
    ./configure && \
    make && \
    make install
RUN rm -rf otp_src*
RUN echo 'export PATH=/usr/local/lib/erlang/lib/erl_interface-3.7.15/bin:$PATH' >> /root/.bashrc


#Configuration
ADD . /docker
RUN ln -s /docker/supervisord-ssh.conf /etc/supervisor/conf.d/supervisord-ssh.conf


EXPOSE 22
","Shell
100.0%",2014-03-01 15:47:28,2015-01-19 23:51:36,https://github.com/mingfang/docker-erlang
4,glesage/rails_app_mysql,,"# Environment for Rails 4 with MySQL, Ruby 2.1.1 & NodeJS
#
# VERSION               0.1


FROM glesage/nodejs-rails4
MAINTAINER Geoffroy Lesage




RUN export DEBIAN_FRONTEND=noninteractive


#
# MySql
#
RUN echo mysql-server mysql-server/root_password password root | sudo debconf-set-selections
RUN echo mysql-server mysql-server/root_password_again password root | sudo debconf-set-selections
RUN apt-get -y install mysql-server libmysqlclient-dev 
# mysql-client libmysql-ruby




# Decouple webapp from container
VOLUME [""/webapp""]


ADD start.sh /start.sh
RUN chmod 755 /start.sh


EXPOSE 3000


CMD [""/start.sh""]
","Shell
100.0%",2014-03-04 06:43:12,2014-03-17 01:06:10,https://github.com/glesage/rails_app_mysql
5,robsquires/dockman,,"FROM busybox


VOLUME /var/www


ADD ./ /var/www
","Shell
100.0%",2014-02-20 20:10:52,2017-06-22 16:19:04,https://github.com/robsquires/dockman
6,jsantiago/docker-ansible,,"FROM ubuntu:saucy


RUN apt-get -qq update
RUN apt-get install -y ansible


ADD inventory /etc/ansible/hosts


RUN mkdir -p /opt/docker-ansible
WORKDIR /opt/docker-ansible
ADD playbook.yml /opt/docker-ansible/


CMD [""ansible-playbook"", ""/opt/docker-ansible/playbook.yml""]
","Shell
100.0%",2014-02-21 05:53:31,2014-04-18 05:20:15,https://github.com/jsantiago/docker-ansible
7,pokle/totally-hi,,"FROM tianon/centos:6.5
ADD . /app
WORKDIR /app
EXPOSE 8000
CMD python -m SimpleHTTPServer 8000


","Shell
100.0%",2014-03-30 08:42:35,2014-03-30 09:58:28,https://github.com/pokle/totally-hi
8,nf/cacophon,,"FROM private/vmruntime-go


ENV DEBIAN_FRONTEND noninteractive


ADD app.yaml /appgo/
ADD install_deps.sh /appgo/
RUN /appgo/install_deps.sh /appgo/app.yaml


ADD . /appgo
WORKDIR /appgo


EXPOSE 8080


ENTRYPOINT [""/appgo/_go_app.bin""]
","JavaScript
91.5%





Go
5.0%





Shell
3.5%",2014-03-10 02:03:53,2017-11-30 23:46:37,https://github.com/nf/cacophon
9,nf/cacophon,,"../../frontend/Dockerfile.node
","JavaScript
91.5%





Go
5.0%





Shell
3.5%",2014-03-10 02:03:53,2017-11-30 23:46:37,https://github.com/nf/cacophon
10,nf/cacophon,,"Dockerfile.node
","JavaScript
91.5%





Go
5.0%





Shell
3.5%",2014-03-10 02:03:53,2017-11-30 23:46:37,https://github.com/nf/cacophon
11,ir4y/fabric-scripts,,"# updated ubuntu
#
# VERSION               0.0.1


FROM  phusion/baseimage:0.9.16


MAINTAINER Ilya Beda ""ir4y.ix@gmail.com""


RUN apt-get update
RUN rm -f /etc/service/sshd/down
ADD sshd_config /etc/ssh/sshd_config
RUN /etc/my_init.d/00_regen_ssh_host_keys.sh


RUN echo 'root:screencast' | chpasswd


EXPOSE 22
CMD    /usr/sbin/sshd -D
","Python
100.0%",2014-08-06 09:17:31,2017-05-16 12:34:41,https://github.com/ir4y/fabric-scripts
12,trautw/docker-jenkins,,"FROM     ubuntu:14.04
MAINTAINER Christoph Trautwein ""christoph.trautwein@sinnerschrader.com""


ENV DEBIAN_FRONTEND noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN true


# Install.
RUN \
  sed -i 's/# \(.*multiverse$\)/\1/g' /etc/apt/sources.list && \
  apt-get update && \
  apt-get -y upgrade && \
  apt-get install -y less && \
  apt-get install -y vim


RUN echo root:`dd if=/dev/urandom count=250 2>/dev/null | sha1sum | tail -n 1 | cut -f1 -d\ ` |chpasswd


RUN apt-get install -y git-core


RUN apt-get install -y wget
RUN wget -q -O - http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add -
RUN echo ""deb http://pkg.jenkins-ci.org/debian binary/"" >> /etc/apt/sources.list
RUN apt-get update
# RUN apt-get install -y jenkins=1.550
# RUN apt-get install -y jenkins=1.564
RUN apt-get install -y jenkins


ENV JENKINS_HOME /volume/data


ENTRYPOINT chown jenkins: $JENKINS_HOME && exec su jenkins -c ""java -jar /usr/share/jenkins/jenkins.war""
EXPOSE 8080
CMD [""""]
","Ruby
86.2%





Shell
13.8%",2014-07-28 20:29:23,2014-07-28 21:03:55,https://github.com/trautw/docker-jenkins
13,obulpathi/cdn1,,"##
##    CDN API
##
##


# The following files should exist in this folder before running Dockerfile
# - docker_rsa (private key) -> public key should be published to the private git repo
# - cdn.conf (desired configuration for cdn api)
# - logging.conf (desired logging configuration file)




FROM ubuntu:14.04
MAINTAINER Amit Gandhi <amit.gandhi@rackspace.com>


RUN apt-get -qq update
RUN apt-get -qq upgrade


# Install Pip, Python, etc
RUN apt-get -qqy install git-core wget curl libpython-dev vim memcached libev4 libev-dev python-dev


# setuptools
RUN wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py
RUN python ez_setup.py


# pip
RUN wget https://raw.github.com/pypa/pip/master/contrib/get-pip.py
RUN python get-pip.py


# uwsgi 
RUN pip install uwsgi 


# Make ssh dir
RUN mkdir /root/.ssh/


# Copy over private key, and set permissions
ADD docker_rsa /root/.ssh/id_rsa


RUN chmod 700 /root/.ssh/id_rsa
RUN echo ""Host github.com\n\tStrictHostKeyChecking no\n"" >> /root/.ssh/config
RUN echo ""IdentityFile ~/.ssh/id_rsa"" >> /etc/ssh/ssh_config


# Create known_hosts
RUN touch /root/.ssh/known_hosts


# Pull project
RUN git clone git@github.com:rackerlabs/cdn /home/cdn


# Install Requirements
RUN sudo pip install -r /home/cdn/requirements/requirements.txt


RUN sudo pip install -e /home/cdn/.


# Set up the configuration files
ADD ./cdn.conf /etc/cdn.conf
ADD ./logging.conf /etc/logging.conf
ADD ./uwsgi.ini /root/uwsgi.ini


# create uwsgi log directory
RUN mkdir -p /var/log/cdn
RUN chmod -R +w /var/log/cdn


# create uwsgi pid directory
RUN mkdir -p /var/run/cdn
RUN chmod -R +w /var/run/cdn


#RUN /usr/local/bin/uwsgi --ini /root/uwsgi.ini


# Start CDN
EXPOSE 80
CMD [""/usr/local/bin/uwsgi"", ""--ini"", ""/root/uwsgi.ini""]
","Python
98.6%





Shell
1.4%",2014-07-25 15:47:36,2014-08-02 14:40:58,https://github.com/obulpathi/cdn1
14,obulpathi/cdn1,,"##
##    Cassandra
##
##


FROM ubuntu
MAINTAINER Tony Tan, tonytan198211@gmail.com


# Add PPA for the necessary JDK
RUN echo ""deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" | tee /etc/apt/sources.list.d/webupd8team-java.list
RUN echo ""deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" | tee -a /etc/apt/sources.list.d/webupd8team-java.list
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys EEA14886
RUN apt-get update


# Install other packages
RUN apt-get install -y curl


# Preemptively accept the Oracle License
RUN echo ""oracle-java7-installer	shared/accepted-oracle-license-v1-1	boolean	true"" > /tmp/oracle-license-debconf
RUN /usr/bin/debconf-set-selections /tmp/oracle-license-debconf
RUN rm /tmp/oracle-license-debconf


# Install the JDK
RUN apt-get install -y oracle-java7-installer oracle-java7-set-default
RUN apt-get update


# Install Cassandra
RUN echo ""deb http://debian.datastax.com/community stable main"" | sudo tee -a /etc/apt/sources.list.d/datastax.sources.list
RUN curl -L http://debian.datastax.com/debian/repo_key | sudo apt-key add -
RUN apt-get update
RUN apt-get install -y dsc20


# Deploy startup script
ADD init.sh /usr/local/bin/cass-dock
RUN chmod 755 /usr/local/bin/cass-dock


# Deploy shutdown script
ADD shutdown.sh /usr/local/bin/cass-stop
RUN chmod 755 /usr/local/bin/cass-stop


EXPOSE 7199 7000 7001 9160 9042
USER root
CMD cass-dock


","Python
98.6%





Shell
1.4%",2014-07-25 15:47:36,2014-08-02 14:40:58,https://github.com/obulpathi/cdn1
15,wingrunr21/drone-ruby,,"FROM wingrunr21/drone-base
MAINTAINER Stafford Brunk <stafford.brunk@gmail.com>


ENV SHELL /bin/bash
ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8


RUN apt-get update


RUN ruby-install ruby  1.9.3-p551
RUN ruby-install ruby  2.0.0-p645
RUN ruby-install ruby  2.1.6
RUN ruby-install ruby  2.2.2
RUN ruby-install jruby 1.7.21
RUN ruby-install jruby 9.0.0.0
RUN ruby-install rbx 2.5.8


RUN /bin/bash -l -c ""chruby 1.9.3 && gem install bundler --no-rdoc --no-ri""
RUN /bin/bash -l -c ""chruby 2.0.0 && gem install bundler --no-rdoc --no-ri""
RUN /bin/bash -l -c ""chruby 2.1.6 && gem install bundler --no-rdoc --no-ri""
RUN /bin/bash -l -c ""chruby 2.2.2 && gem install bundler --no-rdoc --no-ri""
RUN /bin/bash -l -c ""chruby jruby-1.7.21 && gem install bundler --no-rdoc --no-ri""
RUN /bin/bash -l -c ""chruby jruby-9.0.0.0 && gem install bundler --no-rdoc --no-ri""
RUN /bin/bash -l -c ""chruby rbx-2.5.8 && gem install bundler --no-rdoc --no-ri""
",,2014-08-01 21:32:57,2015-07-08 15:12:09,https://github.com/wingrunr21/drone-ruby
16,codius/codius-host,"Organization(name=None, id=8072060)","FROM codius/codius.org:base


# Install NPM dependencies
# We do this first so that it can be cached even if the rest of the
# application changes.
ADD package.json /code/package.json
WORKDIR /code
RUN npm install --no-color


# Add rest of application
ENV PORT 8080
ENV CONTRACTS_STORAGE /contracts/
EXPOSE 8080
VOLUME [""/contracts""]


ADD . /code


ENTRYPOINT [""/usr/local/bin/node"", ""bin/codius-host""]
CMD [""start""]
","JavaScript
99.4%





Shell
0.6%",2014-07-05 01:50:24,2017-06-19 14:12:02,https://github.com/codius/codius-host
17,redhat-performance/docker-performance,"Organization(name=None, id=12718395)","FROM centos/tools
MAINTAINER jeder <jeder@redhat.com>


# Clone git repos for test tooling.
RUN git clone https://github.com/redhat-performance/docker-performance.git /root/docker-performance
RUN yum install -y https://dl.fedoraproject.org/pub/epel/6/x86_64/stress-1.0.4-4.el6.x86_64.rpm aspell && yum clean all
","Python
67.3%





Shell
32.7%",2014-07-30 18:35:49,2017-10-31 21:21:49,https://github.com/redhat-performance/docker-performance
18,klaseskilson/vattentornet,,"FROM ruby:2.3.1
RUN apt-get update -qq && apt-get install -y build-essential libpq-dev nodejs


ENV APP_HOME /vattentornet
RUN mkdir $APP_HOME
WORKDIR $APP_HOME


ADD Gemfile $APP_HOME/Gemfile
ADD Gemfile.lock $APP_HOME/Gemfile.lock


# Speed bundler up
ENV BUNDLE_GEMFILE=$APP_HOME/Gemfile \
  BUNDLE_JOBS=2 \
  BUNDLE_PATH=/bundle


RUN bundle install
ADD . /vattentornet
","Ruby
49.9%





HTML
40.4%





CSS
6.6%





CoffeeScript
3.1%",2014-09-08 08:17:36,2016-10-06 05:19:17,https://github.com/klaseskilson/vattentornet
19,bparees/sprint50_demo,,"FROM dockerfile/ruby
#FROM openshift/ruby-19-centos


RUN gem install sinatra
ADD https://raw.githubusercontent.com/bparees/sprint50_demo/master/app/app.rb /tmp/app.rb


#USER root
EXPOSE 8080
CMD [""/usr/bin/ruby"",""/tmp/app.rb""]






","Ruby
57.6%





Shell
42.4%",2014-09-11 17:39:46,2014-09-15 15:18:30,https://github.com/bparees/sprint50_demo
20,kisenka/docker-centos6-jekyll,,"FROM kisenka/centos6-ruby


RUN yum install -y nodejs npm
RUN gem install jekyll --no-ri --no-rdoc


VOLUME /data


WORKDIR /data
EXPOSE 4000


CMD jekyll serve --host=0.0.0.0 --port=4000 --watch --force_polling
","Shell
100.0%",2014-08-27 15:27:45,2015-07-21 02:52:20,https://github.com/kisenka/docker-centos6-jekyll
21,blotzy/docker-ubuntu-dev,,"FROM ubuntu:12.04
MAINTAINER Richard Acosta <richardhacosta@gmail.com>


RUN apt-get update -y
RUN apt-get install -y -q autoconf make gcc cpp patch python-dev git libtool default-jdk default-jdk-builddep default-jre gzip libghc-zlib-dev libcurl4-openssl-dev build-essential libsasl2-dev maven python-pip wget curl supervisor


###SSH and debug tools
RUN mkdir -p /var/run/sshd
RUN apt-get -y install openssh-server vim-gtk
RUN mkdir -p /root/.ssh
RUN echo 'root:screencast' |chpasswd
EXPOSE 22
###


ADD supervisor.conf /etc/supervisor/conf.d/supervisord.conf


CMD [""/usr/bin/supervisord""]
","Shell
100.0%",2014-08-18 18:46:02,2014-08-18 18:47:15,https://github.com/blotzy/docker-ubuntu-dev
22,camembertaulaitcrew/mmo_paint,"Organization(name=None, id=7717490)","FROM moul/node


RUN npm install express@3.4.8 socket.io@0.9.16
ADD . /app
RUN npm install
ENTRYPOINT [""coffee"", ""app.coffee""]
","JavaScript
97.4%





CoffeeScript
2.1%





Other
0.5%",2014-08-02 10:47:29,2015-01-29 09:26:16,https://github.com/camembertaulaitcrew/mmo_paint
23,meandmymonkey/docker-apt-cacher-ng,,"FROM ubuntu:14.04


MAINTAINER Andreas Hucks ""andreas@inputrequired.org""


RUN \
    apt-get update && \
    apt-get install -y apt-cacher-ng


EXPOSE 3142
VOLUME /var/cache/apt-cacher-ng


CMD \
    chmod 777 /var/cache/apt-cacher-ng && \
    /etc/init.d/apt-cacher-ng start && \
    tail -f /var/log/apt-cacher-ng/*
","Shell
100.0%",2014-08-03 17:38:55,2014-09-16 11:14:35,https://github.com/meandmymonkey/docker-apt-cacher-ng
24,tclavier/california-debian-builder,,"FROM deliverous/jessie
RUN echo ""deb http://ftp.fr.debian.org/debian/ sid main non-free contrib"" >  /etc/apt/sources.list
RUN apt-get update && apt-get dist-upgrade -y && apt-get clean
RUN apt-get update && apt-get install -y dpkg-dev && apt-get clean
ADD california /usr/src/california
RUN apt-get update && apt-get install -y $(cat /usr/src/california/debian/control | sed -e ':a;N;$!ba;s/,\s*\n/ /g' | grep Build-Depends | sed -e 's/([^(]*)//g' -e 's/Build-Depends://') && apt-get clean
RUN cd /usr/src/california && dpkg-buildpackage
CMD ""cd /usr/src && tar -c *.deb""
","Shell
69.3%





Ruby
30.7%",2014-09-03 15:59:06,2014-09-08 13:54:18,https://github.com/tclavier/california-debian-builder
25,whithajess/DockerNexpose,,"FROM ubuntu:14.04
MAINTAINER Jesse Whitham ""jesse.whitham@gmail.com""


#INSTALL necessary packages for install 
#NB: -y flag assumes yes when apt asks if you want to install the other packages needed
RUN apt-get update
RUN apt-get install -y curl build-essential libxml2-dev libxslt-dev git screen


#INSTALL chef (for nexpose cookbook install)
RUN curl -L https://www.opscode.com/chef/install.sh | sudo bash


#INSTALL berkshelf gem (used to install cookbooks)
RUN echo ""gem: --no-ri --no-rdoc"" > ~/.gemrc
RUN /opt/chef/embedded/bin/gem install berkshelf


#COPY local dir into chef folder on container (could exclude the Dockerfile or just be more implicit here)
ADD . /chef


#DOWNLOAD nexpose cookbook (out of Berksfile from copy)
RUN cd /chef && /opt/chef/embedded/bin/berks vendor /chef/cookbooks


#SET file permissions of screen folder (to fix weird behaviour by chef)
RUN chmod 775 /var/run/screen


#INSTALL nexpose cookbook
RUN chef-solo -c /chef/file_paths.rb -j /chef/run_list.json


#EXPOSE nexpose web console
EXPOSE 3780


#CHANGE directory (nexpose throws an error unless you are in the right directory)
#START nexpose console (this takes ages needs to build updates etc.)
#PIPE the output to dev/null (otherwise will fill the logs)
CMD cd /opt/rapid7/nexpose/nsc/ && ./nsc.sh  > /dev/null
","Ruby
100.0%",2014-09-10 22:40:58,2017-11-23 08:19:32,https://github.com/whithajess/DockerNexpose
26,atsaki/docker-cloudstack,,"FROM phusion/baseimage:0.9.13


ENV HOME /root
ENV CLOUDSTACK_REPO_URL https://github.com/apache/cloudstack.git
ENV CLOUDSTACK_BRANCH 4.4-forward


# Install required Packages
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections; \
    echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections; \
    echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections; \
    echo ""mysql-server mysql-server/root_password password root"" | debconf-set-selections; \
    echo ""mysql-server mysql-server/root_password_again password root"" | debconf-set-selections; \
    add-apt-repository -y ppa:webupd8team/java; \
    apt-get update; \
    apt-get install -y build-essential libreadline-gplv2-dev libncursesw5-dev libssl-dev \
                       libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev git autoconf g++ \
                       python2.7-dev python-setuptools python-pip \
                       python-software-properties \
                       oracle-java7-installer oracle-java7-set-default maven \
                       mysql-server; \
    apt-get clean; \ 
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Reset MySQL Password
RUN (/usr/bin/mysqld_safe &); sleep 3; mysqladmin -u root -proot password ''


# Checkout CloudStack and Build CloudStack Simulator
RUN cd $HOME; \
    git clone $CLOUDSTACK_REPO_URL; \
    cd $HOME/cloudstack; \
    git checkout $CLOUDSTACK_BRANCH; \
    mvn clean install -P developer -Dsimulator -DskipTests; \
    (/usr/bin/mysqld_safe &); \
    sleep 3; \
    mvn -Pdeveloper -pl developer -Ddeploydb; \
    mvn -Pdeveloper -pl developer -Ddeploydb-simulator; \
    mysql -e ""GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION""


# Change log level
RUN sed -i -e 's/<param name=""Threshold"" value="".*""\/>/<param name=""Threshold"" value=""DEBUG""\/>/g'  \
      $HOME/cloudstack/client/tomcatconf/log4j-cloud.xml.in


# Install Marvin
RUN cd $HOME/cloudstack; \
    mvn -Pdeveloper -pl :cloud-apidoc; \
    mvn -Pdeveloper -pl :cloud-marvin; \
    cd $HOME/cloudstack/tools/marvin; \
    python setup.py install


# Install cloudmonkey
RUN pip install cloudmonkey; \
    cloudmonkey init


# Add runit scripts
ADD etc/service/mysqld_safe/run /etc/service/mysqld_safe/run
RUN chmod +x /etc/service/mysqld_safe/run


ADD etc/service/cloudstack_simulator/run /etc/service/cloudstack_simulator/run
RUN chmod +x /etc/service/cloudstack_simulator/run


# Regenerate ssh key and remove unnecessary files
RUN /etc/my_init.d/00_regen_ssh_host_keys.sh


CMD [""/sbin/my_init"", ""--enable-insecure-key""]
","Ruby
61.5%





Shell
38.5%",2014-09-07 01:21:15,2015-08-27 14:15:18,https://github.com/atsaki/docker-cloudstack
27,atsaki/docker-cloudstack,,"FROM phusion/baseimage:0.9.13


ENV HOME /root
ENV CLOUDSTACK_REPO_URL https://github.com/apache/cloudstack.git
ENV CLOUDSTACK_BRANCH GA-4.4.1


# Install required Packages
RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections; \
    echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections; \
    echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections; \
    echo ""mysql-server mysql-server/root_password password root"" | debconf-set-selections; \
    echo ""mysql-server mysql-server/root_password_again password root"" | debconf-set-selections; \
    add-apt-repository -y ppa:webupd8team/java; \
    apt-get update; \
    apt-get install -y build-essential libreadline-gplv2-dev libncursesw5-dev libssl-dev \
                       libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev git autoconf g++ \
                       python2.7-dev python-setuptools python-pip \
                       python-software-properties \
                       oracle-java7-installer oracle-java7-set-default maven \
                       mysql-server; \
    apt-get clean; \ 
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Reset MySQL Password
RUN (/usr/bin/mysqld_safe &); sleep 3; mysqladmin -u root -proot password ''


# Checkout CloudStack and Build CloudStack Simulator
RUN cd $HOME; \
    git clone $CLOUDSTACK_REPO_URL; \
    cd $HOME/cloudstack; \
    git checkout $CLOUDSTACK_BRANCH; \
    mvn clean install -P developer -Dsimulator -DskipTests; \
    (/usr/bin/mysqld_safe &); \
    sleep 3; \
    mvn -Pdeveloper -pl developer -Ddeploydb; \
    mvn -Pdeveloper -pl developer -Ddeploydb-simulator; \
    mysql -e ""GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION""


# Change log level
RUN sed -i -e 's/<param name=""Threshold"" value="".*""\/>/<param name=""Threshold"" value=""DEBUG""\/>/g'  \
      $HOME/cloudstack/client/tomcatconf/log4j-cloud.xml.in


# Install Marvin
RUN cd $HOME/cloudstack; \
    mvn -Pdeveloper -pl :cloud-apidoc; \
    mvn -Pdeveloper -pl :cloud-marvin; \
    cd $HOME/cloudstack/tools/marvin; \
    python setup.py install


# Install cloudmonkey
RUN pip install cloudmonkey; \
    cloudmonkey init


# Add runit scripts
ADD etc/service/mysqld_safe/run /etc/service/mysqld_safe/run
RUN chmod +x /etc/service/mysqld_safe/run


ADD etc/service/cloudstack_simulator/run /etc/service/cloudstack_simulator/run
RUN chmod +x /etc/service/cloudstack_simulator/run


# Regenerate ssh key and remove unnecessary files
RUN /etc/my_init.d/00_regen_ssh_host_keys.sh


CMD [""/sbin/my_init"", ""--enable-insecure-key""]
","Ruby
61.5%





Shell
38.5%",2014-09-07 01:21:15,2015-08-27 14:15:18,https://github.com/atsaki/docker-cloudstack
28,atsaki/docker-cloudstack,,"FROM atsaki/cloudstack-simulator:4.5.2-marvin


RUN (/usr/bin/supervisord -c /etc/supervisord.conf &); \
    sleep 300 ; \
    python /root/tools/marvin/marvin/deployDataCenter.py -i /root/setup/dev/advanced.cfg ; \
    /usr/bin/supervisorctl -c /etc/supervisord.conf stop cloudstack


CMD [""/usr/bin/supervisord"", ""-c"", ""/etc/supervisord.conf""]
","Ruby
61.5%





Shell
38.5%",2014-09-07 01:21:15,2015-08-27 14:15:18,https://github.com/atsaki/docker-cloudstack
29,atsaki/docker-cloudstack,,"FROM ubuntu:14.04


RUN echo 'mysql-server mysql-server/root_password password root' |  debconf-set-selections; \
    echo 'mysql-server mysql-server/root_password_again password root' |  debconf-set-selections; \
    apt-get -y update ; \
    apt-get install -qqy \
      wget \
      genisoimage \
      maven \
      openjdk-7-jdk \
      openssh-client \
      supervisor \
      mysql-server ; \
    apt-get clean all ; \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


RUN (/usr/bin/mysqld_safe &); sleep 5; mysqladmin -u root -proot password ''


RUN wget https://github.com/apache/cloudstack/archive/4.5.2.tar.gz ; \
    tar xvfz 4.5.2.tar.gz ; \
    mv cloudstack-4.5.2/* /root ; \
    rm -frv 4.5.2.tar.gz cloudstack-4.5.2


WORKDIR /root


RUN mvn -Pdeveloper -Dsimulator -DskipTests clean install


RUN (/usr/bin/mysqld_safe &); \
    sleep 3; \
    mvn -Pdeveloper -pl developer -Ddeploydb; \
    mvn -Pdeveloper -pl developer -Ddeploydb-simulator


RUN sed -i -e 's/<param name=""Threshold"" value="".*""\/>/<param name=""Threshold"" value=""DEBUG""\/>/g'  \
           -e 's/<param name=""ConversionPattern"" value=""%-5p/<param name=""ConversionPattern"" value=""%d{ISO8601} %-5p/' \
           /root/client/tomcatconf/log4j-cloud.xml.in


COPY supervisord.conf /etc/supervisord.conf


EXPOSE 8080 8096


CMD [""/usr/bin/supervisord"", ""-c"", ""/etc/supervisord.conf""]
","Ruby
61.5%





Shell
38.5%",2014-09-07 01:21:15,2015-08-27 14:15:18,https://github.com/atsaki/docker-cloudstack
0,atsaki/docker-cloudstack,,"FROM atsaki/cloudstack-simulator:4.5.2-marvin


RUN (/usr/bin/supervisord -c /etc/supervisord.conf &); \
    sleep 300 ; \
    python /root/tools/marvin/marvin/deployDataCenter.py -i /root/setup/dev/basic.cfg ; \
    /usr/bin/supervisorctl -c /etc/supervisord.conf stop cloudstack


CMD [""/usr/bin/supervisord"", ""-c"", ""/etc/supervisord.conf""]
","Ruby
61.5%





Shell
38.5%",2014-09-07 01:21:15,2015-08-27 14:15:18,https://github.com/atsaki/docker-cloudstack
1,atsaki/docker-cloudstack,,"FROM atsaki/cloudstack-simulator:4.5.2


RUN apt-get -y update && \
    apt-get install -qqy \
      python-pip \
      python-dev ; \
    apt-get clean all ; \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


RUN pip install --allow-external mysql-connector-python /root/tools/marvin


CMD [""/usr/bin/supervisord"", ""-c"", ""/etc/supervisord.conf""]
","Ruby
61.5%





Shell
38.5%",2014-09-07 01:21:15,2015-08-27 14:15:18,https://github.com/atsaki/docker-cloudstack
2,jrab89/sinatra_api,,"FROM ruby:2.0.0


MAINTAINER Jeff Rabovsky <jrab89@gmail.com>


RUN apt-get update
RUN apt-get install -y postgresql-9.4 postgresql-server-dev-9.4 libpq-dev


RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app


COPY Gemfile /usr/src/app/
COPY Gemfile.lock /usr/src/app/
RUN bundle install


COPY . /usr/src/app


CMD bundle exec ruby app/app.rb
","Ruby
50.6%





Gherkin
49.4%",2014-07-26 20:47:01,2015-06-09 03:12:34,https://github.com/jrab89/sinatra_api
3,iwata/docker-centos6-mysql56-q4m-hs,,"FROM centos:centos6
MAINTAINER Motonori Iwata <gootonori+docker@gmail.com>


ENV MYVER 5.6.19
ENV Q4MVER 0.9.14
ENV HSVER 1.1.1
ENV MYSQLDIR /usr/local/mysql
ENV TZ Asia/Tokyo


RUN echo ""ZONE=\""$TZ\"""" > /etc/sysconfig/clock


# Upgrade to latest version
RUN rpm -Uvh http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm && \
    yum -y upgrade


RUN yum install -y curl wget tar ntp unzip && yum -y clean all
RUN rm -f /etc/localtime && ln -fs /usr/share/zoneinfo/$TZ /etc/localtime
RUN echo ""NETWORKING=yes"" > /etc/sysconfig/network


# install mysql-build
RUN cd /tmp && wget https://github.com/kamipo/mysql-build/archive/master.zip && unzip master.zip && mv mysql-build-master /usr/local/mysql-build && rm master.zip
ENV PATH /usr/local/mysql-build/bin:$PATH


# to compile MySQL
RUN yum install -y gcc gcc-c++ ncurses-devel cmake libedit-devel \
                   libaio-devel perl libedit libtool which && \
    yum -y clean all


COPY ./install-mysql.sh /install-mysql.sh
RUN chmod +x /*.sh


RUN /install-mysql.sh
ENV PATH $MYSQLDIR/bin:$PATH


COPY ./my.cnf /etc/my.cnf


ENV LANG en_US.UTF-8
EXPOSE 3306
#ENTRYPOINT [""/usr/local/mysql/bin/mysqld_safe""]
#CMD [""--user=mysql""]
CMD [""/usr/local/mysql/bin/mysqld_safe"", ""--user=mysql""]
","Shell
100.0%",2014-08-10 01:00:07,2014-10-06 14:06:35,https://github.com/iwata/docker-centos6-mysql56-q4m-hs
4,alankent/docker-magento-ce,,"FROM ubuntu:trusty
MAINTAINER Alan Kent


# Get Apache, mysql client, PHP etc
RUN apt-get update && apt-get install -y apache2 mysql-server mysql-client php5 php5-mhash php5-curl php5-mcrypt php5-gd php5-mysql php5-cli curl git


# mcrypt.ini appears to be missing from apt-get install. Needed for PHP mcrypt library to be enabled.
ADD config/20-mcrypt.ini /etc/php5/cli/conf.d/20-mcrypt.ini
ADD config/20-mcrypt.ini /etc/php5/apache2/conf.d/20-mcrypt.ini
RUN echo ""memory_limit = 512M"" >> /etc/php5/apache2/php.ini




# Environment variables from /etc/apache2/apache2.conf
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_RUN_DIR /var/run/apache2
ENV APACHE_LOG_DIR /var/log/apache2
ENV APACHE_LOCK_DIR /var/lock/apache2
ENV APACHE_PID_FILE /var/run/apache2/apache2.pid


# Enable Apache rewrite module
RUN a2enmod rewrite


# Add the Apache virtual host file
ADD config/apache_default_vhost /etc/apache2/sites-enabled/magento.conf
RUN rm -f /etc/apache2/sites-enabled/000-default.conf


# Download Magento CE
RUN cd /tmp && curl -O http://www.magentocommerce.com/downloads/assets/1.9.0.1/magento-1.9.0.1.tar.gz
RUN cd /tmp && curl -O http://www.magentocommerce.com/downloads/assets/1.9.0.0/magento-sample-data-1.9.0.0.tar.gz


# Install Magento CE
RUN cd /var/www && tar -zxvf /tmp/magento-1.9.0.1.tar.gz
RUN rm /tmp/magento-1.9.0.1.tar.gz 
RUN cd /tmp && tar -zxvf /tmp/magento-sample-data-1.9.0.0.tar.gz
RUN rm /tmp/magento-sample-data-1.9.0.0.tar.gz
RUN cp -r /tmp/magento-sample-data-1.9.0.0/media/* /var/www/magento/media
RUN cp -r /tmp/magento-sample-data-1.9.0.0/skin/* /var/www/magento/skin
RUN rm -rf /tmp/magento-sample-data-1.9.0.0/{media,skin}
RUN chown www-data:www-data -R /var/www/magento


# Expose the web server port
EXPOSE 80


# Start up the Apache server
ADD scripts/runserver /usr/local/bin/runserver
RUN chmod +x /usr/local/bin/runserver
ENTRYPOINT [""bash"", ""-c""]
CMD [""/usr/local/bin/runserver""]
","Shell
100.0%",2014-08-17 06:25:52,2015-11-05 19:39:29,https://github.com/alankent/docker-magento-ce
5,danieldreier/docker-puppet-master-ssl,,"FROM danieldreier/wheezy-puppet-agent
MAINTAINER Daniel Dreier <ddreier@thinkplango.com>


# run using
# docker build -t danieldreier/ssl-data-example .
# docker run --rm -e ""AWS_ACCESS_KEY_ID=XXXX"" -e ""AWS_SECRET_ACCESS_KEY=XXXXX"" -e ""S3BUCKET=dockertest1"" -t -i --name=puppetmaster-ssl-data danieldreier/ssl-data-example
VOLUME /var/lib/puppet/ssl
RUN mkdir -p /var/lib/puppet/ssl


RUN apt-get update && apt-get install -y inotify-tools python-pip
RUN pip install awscli
ADD sync.sh /root/sync.sh
ADD inotify_watch.sh /root/inotify_watch.sh
RUN chmod +x /root/inotify_watch.sh /root/sync.sh
# if you use ENTRYPOINT or other CMD format exit signal isn't detected correctly
# you have to run /root/sync.sh directly in the docker run command
","Shell
100.0%",2014-09-02 02:39:16,2014-09-02 02:39:26,https://github.com/danieldreier/docker-puppet-master-ssl
6,osu-cass/working-waterfronts-api,"Organization(name=None, id=8293685)","FROM centos:7


MAINTAINER OSU Open Source Lab, support@osuosl.org




ENV PASSWORD working_waterfronts
ENV HOST postgis
ENV USER working_waterfronts
ENV NAME  working_waterfronts
ENV ENVIRONMENTCONFIG True
ENV ENGINE django.contrib.gis.db.backends.postgis


EXPOSE 8000


RUN yum install -y python-devel python-setuptools postgresql-devel gcc curl


# Install the ius repository to install GDAL
RUN curl http://dl.iuscommunity.org/pub/ius/stable/CentOS/7/x86_64/ius-release-1.0-13.ius.centos7.noarch.rpm > /tmp/ius.rpm
RUN yum install -y /tmp/ius.rpm
RUN yum install -y gdal


RUN easy_install pip


WORKDIR /opt/working_waterfronts


COPY . /opt/working_waterfronts
RUN pip install .
CMD [""python"", ""manage.py"", ""runserver"", ""0.0.0.0:8000""]
","Python
87.9%





HTML
8.5%





CSS
3.3%





Ruby
0.3%",2014-09-17 22:40:02,2016-04-19 19:45:41,https://github.com/osu-cass/working-waterfronts-api
7,iamfat/dockerfile-selenium-hub,,"FROM debian:7.6
MAINTAINER jia.huang@geneegroup.com


ENV DEBIAN_FRONTEND noninteractive


# Install Java
RUN apt-get update && apt-get install -y openjdk-7-jre-headless


# Install Selenium Server
RUN apt-get install -y curl && mkdir -p /usr/local/share/selenium && \
	curl -sLo /usr/local/share/selenium/selenium-server.jar http://selenium-release.storage.googleapis.com/2.44/selenium-server-standalone-2.44.0.jar


# Selenium Port
EXPOSE 4444


CMD [""/usr/bin/java"", ""-jar"", ""/usr/local/share/selenium/selenium-server.jar"", ""-role"", ""hub""]
","Shell
100.0%",2014-08-16 02:20:26,2014-11-18 09:42:57,https://github.com/iamfat/dockerfile-selenium-hub
8,mikefaille/mikefaille-docker-etcd,,"FROM mikefaille/go-base:latest
MAINTAINER Michaël Faille <michael@faille.pw>
# Let's install etcd and etcdctl (from source).




ADD supervisor-etcd.conf /etc/supervisor/conf.d/etcd.conf


RUN cd /opt && git clone --depth=1 https://github.com/coreos/etcd.git && cd /opt/etcd && \
    PATH=/usr/local/go/bin:$PATH ./build && mv bin/* /usr/local/bin && \
    rm -R /opt/etcd && \
    cd /opt && git clone  --depth=1 https://github.com/coreos/etcdctl/  && cd /opt/etcdctl && \
    PATH=/usr/local/go/bin:$PATH ./build && mv bin/* /usr/local/bin && \
    rm -R /opt/etcdctl


EXPOSE 4001 7001


CMD [""/data/run.sh""]
",,2014-08-23 20:37:13,2015-04-23 08:23:22,https://github.com/mikefaille/mikefaille-docker-etcd
9,t10471/docker-haskell-base,,"## haskell-base 
FROM t10471/base:latest


MAINTAINER t10471 <t104711202@gmail.com>


ENV OPTS_APT -y --force-yes --no-install-recommends


## add ppa for ubuntu trusty haskell packages
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F6F88286\
 && echo 'deb     http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' >> /etc/apt/sources.list.d/haskell.list\
 && echo 'deb-src http://ppa.launchpad.net/hvr/ghc/ubuntu trusty main' >> /etc/apt/sources.list.d/haskell.list


## install ghc dependencies
RUN apt-get update\
 && apt-get install ${OPTS_APT}\
      gcc\
      libc6\
      libc6-dev\
      libgmp10\
      libgmp-dev\
      libncursesw5\
      libtinfo5\
      threadscope\
      libdevil-dev\
      libtaoframework-devil1.6-cil


## install llvm for the ghc backend
RUN apt-get update\
 && apt-get install ${OPTS_APT} llvm


RUN apt-get update\
 && apt-get install ${OPTS_APT}\
      ctags \
      libghc-pcre-light-dev \
      libpcrecpp0 \
      libpcre3-dev


## haskell package versions; can be overriden via context hacks
ENV VERSION_ALEX   3.1.7
ENV VERSION_CABAL  1.22.7.0
ENV VERSION_HAPPY  1.19.5


## install minimal set of haskell packages
RUN apt-get update\
 && apt-get install ${OPTS_APT}\
      alex-""${VERSION_ALEX}""\
      cabal-install-""${VERSION_CABAL}""\
      happy-""${VERSION_HAPPY}""


## haskell package versions; can be overriden via context hacks
ENV VERSION_GHC    7.10.3


## install ghc
RUN apt-get update\
 && apt-get install ${OPTS_APT}\
      ghc-""${VERSION_GHC}""


## set the VERSION vars and PATH for login shells
RUN\
  ( exec >> /etc/profile.d/haskell.sh\
 && echo ""VERSION_ALEX=${VERSION_ALEX}""\
 && echo ""VERSION_CABAL=${VERSION_CABAL}""\
 && echo ""VERSION_HAPPY=${VERSION_HAPPY}""\
 && echo ""VERSION_GHC=${VERSION_GHC}""\
 && echo 'PATH=${HOME}/.cabal/bin:${PATH}'\
  )


## link the binaries into /usr/local/bin
RUN find /opt -maxdepth 3 -name bin -type d\
  -exec sh -c\
 'cd {} && ls .\
      | egrep -v ^.*\-[.[:digit:]]+$\
      | xargs -I % ln -s `pwd`/% /usr/local/bin/%' \;


ADD init.sh /root/
","Shell
100.0%",2014-09-12 18:30:13,2016-02-12 11:26:53,https://github.com/t10471/docker-haskell-base
10,kjunine/docker-mms-backup-agent,,"FROM kjunine/ubuntu:latest
MAINTAINER Daniel Ku ""kjunine@gmail.com""
ENV REFRESHED_AT 2014-11-01


RUN curl -OL https://mms.mongodb.com/download/agent/backup/mongodb-mms-backup-agent_2.6.0.176-1_amd64.deb && \
    dpkg -i mongodb-mms-backup-agent_2.6.0.176-1_amd64.deb


ENV MMS_API_KEY key


ADD ./setup.sh /root/
ADD ./run.sh /root/
WORKDIR /root


CMD ./setup.sh && ./run.sh
","Shell
100.0%",2014-09-16 17:36:21,2014-09-16 17:37:15,https://github.com/kjunine/docker-mms-backup-agent
11,zxiiro/lamp,,"#######################################################################
#
# Copyright (c) 2014 Eclipse Foundation and others.
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#   Thanh Ha (Eclipse Foundation) - initial implementation
#
#######################################################################


FROM zxiiro/mysql
MAINTAINER Thanh Ha <thanh.ha@alumni.carleton.ca>


RUN apt-get update


# --------------------
# Install Requirements
# --------------------


# Install Apache Requirements
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y apache2 php5 php5-mysql php5-gd php-xml-parser php5-xsl php5-curl sharutils php5-memcache memcached




# -----------------------------
# Pull in scripts and resources
# -----------------------------
ADD etc/supervisor/conf.d /etc/supervisor/conf.d
ADD scripts/apache /scripts/apache
RUN chmod 755 /scripts/apache/*.sh


# Apache
ADD etc/apache2/sites-enabled /etc/apache2/sites-enabled
ADD etc/apache2/ports.conf /etc/apache2/ports.conf


# -----
# Setup
# -----


RUN /scripts/apache/apache-setup.sh




# Apache HTTPS
EXPOSE 443


CMD [""/scripts/apache/supervisord-start.sh""]


","Shell
100.0%",2014-05-21 14:34:24,2016-08-17 08:14:59,https://github.com/zxiiro/lamp
12,komica2/docker-lamp-saucy,,"FROM ubuntu:saucy
MAINTAINER komica <komica@dr.com>
ADD sources.list /etc/apt/sources.list
RUN apt-get update
RUN apt-get -y upgrade
RUN apt-get -y -f install
RUN DEBIAN_FRONTEND=noninteractive apt-get --yes --force-yes install -f mysql-client mysql-server apache2 libapache2-mod-php5 pwgen python-setuptools vim-tiny php5-mysql
RUN update-rc.d apache2 enable
RUN service apache2 start
RUN update-rc.d mysql defaults
RUN service mysql start
EXPOSE 80
","Shell
100.0%",2014-05-04 16:47:50,2014-05-04 17:12:01,https://github.com/komica2/docker-lamp-saucy
13,dustywusty/docker-lamp,,"#
# ..lamp
#


FROM ubuntu
MAINTAINER dusty@clarkda.com


# Update our repositories
RUN apt-get update


# ..
RUN apt-get install supervisor apache2 libapache2-mod-php5 php5-mysql -y


ADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf


EXPOSE 80


CMD [""/usr/bin/supervisord""]
","Shell
100.0%",2014-05-10 07:17:43,2015-12-03 18:41:10,https://github.com/dustywusty/docker-lamp
14,dockerfile/ruby,"Organization(name=None, id=6375309)","#
# Ruby Dockerfile
#
# https://github.com/dockerfile/ruby
#


# Pull base image.
FROM dockerfile/ubuntu


# Install Ruby.
RUN \
  apt-get update && \
  apt-get install -y ruby ruby-dev ruby-bundler && \
  rm -rf /var/lib/apt/lists/*


# Define working directory.
WORKDIR /data


# Define default command.
CMD [""bash""]
","Shell
100.0%",2014-05-11 18:36:27,2017-10-18 18:39:50,https://github.com/dockerfile/ruby
15,vizv/Dockerfiles,,"# NOTE: use -v to mount data volume to /data/db
#     and config volume (read-only) to /config:ro


FROM centos
MAINTAINER Viz <viz@linux.com>


# add mongo db repo
ADD mongodb.repo /etc/yum.repos.d/mongodb.repo


RUN yum install -y mongodb-org-server


ENTRYPOINT [""/usr/bin/mongod""]


CMD [""--config"", ""/config/mongodb.conf""]
","Shell
100.0%",2014-06-17 03:37:48,2014-06-18 23:17:12,https://github.com/vizv/Dockerfiles
16,vizv/Dockerfiles,,"FROM vizv/centos:rvm
MAINTAINER Viz <viz@linux.com>


# add init script
ADD init /init


ENTRYPOINT [""/init""]
","Shell
100.0%",2014-06-17 03:37:48,2014-06-18 23:17:12,https://github.com/vizv/Dockerfiles
17,vizv/Dockerfiles,,"FROM centos
MAINTAINER Viz <viz@linux.com>


# enable centos plus repo and install epel repo
RUN sed -i '0,/enabled=.*/{s/enabled=.*/enabled=1/}' /etc/yum.repos.d/CentOS-Base.repo
RUN yum install -y http://fedora.mirror.nexicom.net/epel/6/x86_64/epel-release-6-8.noarch.rpm
RUN yum update -y


# install necessary utilities
RUN yum install -y which tar


# install rvm
RUN curl -L get.rvm.io | bash -s stable
RUN source /etc/profile.d/rvm.sh
RUN /bin/bash -l -c ""rvm requirements""
RUN /bin/bash -l -c ""rvm install ruby""
RUN /bin/bash -l -c ""gem install bundler --no-ri --no-rdoc""
","Shell
100.0%",2014-06-17 03:37:48,2014-06-18 23:17:12,https://github.com/vizv/Dockerfiles
18,tianon/debian-libcontainer,,"FROM tianon/debian-devel


# start by adding just ""debian/control"" so we can get mk-build-deps with maximum caching
ADD control /usr/src/libcontainer/debian/
WORKDIR /usr/src/libcontainer


# get all the build deps of _this_ package in a nice repeatable way
RUN apt-get update && mk-build-deps -irt'apt-get --no-install-recommends -yq' debian/control


# need our debian/ directory to compile _this_ package
ADD . /usr/src/libcontainer/debian


# go download and unpack our upstream source
RUN uscan --force-download --verbose --download-current-version
RUN origtargz --unpack


# tianon is _really_ lazy, and likes a preseeded bash history
RUN echo 'origtargz --unpack && dpkg-buildpackage -us -uc && lintian -EvIL+pedantic' >> ""$HOME/.bash_history""
",Go,2014-06-17 03:41:52,2015-01-23 20:56:12,https://github.com/tianon/debian-libcontainer
19,sqawasmi/unity-master-server-docker,,"FROM centos:centos6
MAINTAINER Shaker Qawasmi - ""http://github.com/sqawasmi"" 
RUN yum update -y
RUN yum install -y openssh-server supervisor unzip wget patch gcc-c++ python-setuptools
RUN easy_install supervisor


RUN useradd unityserver
RUN mkdir -p /var/run/sshd
RUN mkdir -p /var/log/supervisor
RUN mkdir -p /home/unityserver/Production/MasterServer


RUN wget http://unity3d.com/files/master-server/MasterServer-2.0.1f1.zip -O /home/unityserver/MasterServer.zip
RUN unzip /home/unityserver/MasterServer.zip -d /home/unityserver/Production/MasterServer/
RUN chown unityserver.unityserver -R /home/unityserver
ADD ./files/RakNet001.patch /home/unityserver/Production/MasterServer/
RUN cd /home/unityserver/Production/MasterServer/ && patch -p0 -i RakNet001.patch


RUN cd /home/unityserver/Production/MasterServer/ && make


RUN echo 'root:unityserver' |chpasswd


ADD ./files/supervisord.conf /usr/supervisord.conf


EXPOSE 22 23466
CMD [""/usr/bin/supervisord""]
","Shell
100.0%",2014-06-12 12:53:56,2017-05-28 15:37:39,https://github.com/sqawasmi/unity-master-server-docker
20,pmoust/docker-redis,,"#########################################################################
#
# A container holding Redis
#
#########################################################################


FROM centos


MAINTAINER Panagiotis Moustafellos <pmoust@gmail.com>


# Addind epel (trusted)
RUN rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm


# Install Redis + OpenSSH server + PIP + Tools 
RUN yum install -y 	redis openssh-server python-pip \
		   	htop mtr vim nmap telnet tcpdump


# Keeping container updated with latest security patches
RUN yum install -y yum-security
RUN yum list-security
RUN yum update -y --security


# Install supervisor
RUN pip install pip --upgrade
RUN pip install supervisor
ADD containerconfig/supervisord.conf /etc/supervisord.conf
RUN mkdir /var/log/supervisor


# Let Supervisor daemonize Redis and set overautocommit for memory issues
RUN sed -ri ""s/bind/#bind/g"" /etc/redis.conf
RUN sed -ri ""s/daemonize yes/daemonize no/g"" /etc/redis.conf
RUN touch /var/log/redis/redis.log
RUN chown redis /var/log/redis/redis.log
RUN echo 'vm.overcommit_memory = 1' >> /etc/sysctl.conf


########################################################################
#       CONFIGURE SSHD inside the container - useful for debugging
########################################################################
RUN ssh-keygen -q -N """" -t dsa -f /etc/ssh/ssh_host_dsa_key 
RUN ssh-keygen -q -N """" -t rsa -f /etc/ssh/ssh_host_rsa_key
RUN sed -ri ""s/#UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g"" /etc/ssh/sshd_config
RUN sed -ri 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
RUN echo 'AuthorizedKeysFile	.ssh/authorized_keys' 	>> /etc/ssh/sshd_config
RUN echo 'PermitRootLogin	yes'			>> /etc/ssh/sshd_config
RUN echo 'root:changeme' | chpasswd
# Prepare a .ssh directory so we can optionally add our private key to the host and avoid needing a password to ssh into the container as root
RUN mkdir -p /root/.ssh




########################################################################
#             Expose a Port for each service in this container
########################################################################
EXPOSE 6379 22


CMD [""/usr/bin/supervisord"", ""-c"", ""/etc/supervisord.conf""]


########################################################################
#                             END
########################################################################
","Shell
100.0%",2014-05-13 10:46:47,2014-06-11 12:48:51,https://github.com/pmoust/docker-redis
21,ubccr/harrier,"Organization(name=None, id=2301947)","FROM debian:jessie
MAINTAINER Andrew E. Bruno <aebruno2@buffalo.edu>
RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y -q python-setuptools python-dev python-openssl python-pip libffi-dev libssl-dev curl build-essential
ADD . /srv/harrier
WORKDIR /srv/harrier


RUN pip install -qr /srv/harrier/requirements.txt
RUN python setup.py install


EXPOSE 5000


ENTRYPOINT [""/usr/local/bin/harrier""]


CMD [""--help""]
","Python
48.2%





HTML
34.7%





JavaScript
16.8%





CSS
0.3%",2014-05-23 21:10:27,2017-03-06 14:09:37,https://github.com/ubccr/harrier
22,sauloaldocker/lamp,"Organization(name=None, id=7672876)","#docker build -t sauloal/lamp --rm=true .


FROM tutum/lamp


RUN a2enmod cgi


VOLUME [""/etc/mysql"", ""/var/lib/mysql"" ]


EXPOSE 80 3306


CMD [""/run.sh""]


","JavaScript
80.4%





HTML
9.1%





Python
7.2%





Shell
3.3%",2014-07-08 21:12:31,2017-04-02 13:22:18,https://github.com/sauloaldocker/lamp
23,digital-wonderland/docker-oracle-jre-8,,"# Oracle JRE 8


FROM digitalwonderland/base


RUN rpm --rebuilddb && curl -L -C - -b ""oraclelicense=accept-securebackup-cookie"" -O http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jre-8u91-linux-x64.rpm \
 && rpm -Uvh jre-*-linux-x64.rpm \
 && rm jre-*-linux-x64.rpm


RUN yum install -y unzip && yum clean all \
 && cd /tmp \
 && curl -L -C - -b ""oraclelicense=accept-securebackup-cookie"" -O http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip \
 && unzip jce_policy-8.zip \
 && mv UnlimitedJCEPolicyJDK8/*.jar /usr/java/jre*/lib/security/ \
 && rm -rf jce_policy-8.zip UnlimitedJCEPolicyJDK8
",,2014-06-24 19:46:19,2016-01-22 04:18:01,https://github.com/digital-wonderland/docker-oracle-jre-8
24,louisdorard/dev-base,,"FROM phusion/baseimage
MAINTAINER Louis Dorard <louis@dorard.me>


# Make sure the package repository is up to date
RUN echo ""deb http://archive.ubuntu.com/ubuntu precise main universe"" > /etc/apt/sources.list
RUN apt-get update


# Install some useful tools for development
RUN apt-get install -y wget git-core vim zsh


# Install ohmyzsh
RUN wget --no-check-certificate http://install.ohmyz.sh -O - | sh
RUN chsh -s /bin/zsh


# Form a set of standard directories
RUN mkdir -p /downloads
RUN mkdir -p /work
","Shell
100.0%",2014-06-21 13:16:35,2015-08-28 14:11:25,https://github.com/louisdorard/dev-base
25,cmkimerer/docker-base,,"from ubuntu:14.04


MAINTAINER Craig Kimerer <craig@offxone.com>


RUN apt-get update
","Shell
100.0%",2014-07-17 20:34:07,2014-07-17 20:34:43,https://github.com/cmkimerer/docker-base
26,slok/docker-vagrant-base,,"# Based on ubuntu 14:04
FROM phusion/baseimage:0.9.12
MAINTAINER Xabier Larrakoetxea <slok69@gmail.com>




# Create vagrant user and group
RUN groupadd vagrant
RUN useradd vagrant -m -g vagrant -G sudo -s /bin/bash
RUN passwd -d -u vagrant
RUN echo ""vagrant ALL=(ALL) NOPASSWD:ALL"" > /etc/sudoers.d/vagrant
RUN chmod 0440 /etc/sudoers.d/vagrant




# Set private key for user
USER vagrant
RUN mkdir /home/vagrant/.ssh
RUN chmod 700 /home/vagrant/.ssh
ADD authorized_keys /home/vagrant/.ssh/authorized_keys
ADD bashrc /home/vagrant/.bashrc
USER root
RUN chmod 0600 /home/vagrant/.ssh/authorized_keys
RUN chown vagrant:vagrant /home/vagrant/.ssh/authorized_keys
RUN chmod 0644 /home/vagrant/.bashrc
RUN chown vagrant:vagrant /home/vagrant/.bashrc


EXPOSE 22


# Start the magic
CMD [""/sbin/my_init""]
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
","Shell
100.0%",2014-07-19 06:09:24,2014-07-19 09:46:30,https://github.com/slok/docker-vagrant-base
27,iluetkeb/robot-dockerfiles,,"FROM ingo/ros-fuerte-camera-base:12.04
MAINTAINER Ingo Lütkebohle <ingo.luetkebohle@ipvs.uni-stuttgart.de>


# get ready for running through x11vnc
RUN mkdir /.vnc
RUN x11vnc -storepasswd camerapose /.vnc/passwd
RUN bash -c 'echo -e ""fluxbox&; xterm"" >> /.xsession'
RUN chmod +x /.xsession


# now build the camera_pose stuff
RUN mkdir ros_ws
WORKDIR /ros_ws
RUN rosws init . /opt/ros/fuerte/
RUN rosws set -y camera_pose --git https://github.com/Paethon/camera_pose.git
RUN rosws update camera_pose
RUN bash -c ""source setup.sh ; rosmake camera_pose""


# start up x11vnc, so that we can access the container with a GUI
# this port can be mapped when starting the container to prevent conflicts
EXPOSE 5900
CMD [""x11vnc"", ""-forever"", ""-usepw"", ""-create""]




","Shell
100.0%",2014-07-18 07:55:08,2014-07-18 07:55:16,https://github.com/iluetkeb/robot-dockerfiles
28,iluetkeb/robot-dockerfiles,,"FROM ingo/ros-common-deps:12.04
MAINTAINER Ingo Lütkebohle <ingo.luetkebohle@ipvs.uni-stuttgart.de>


RUN apt-get -y install ros-fuerte-ros ros-fuerte-ros-comm 


","Shell
100.0%",2014-07-18 07:55:08,2014-07-18 07:55:16,https://github.com/iluetkeb/robot-dockerfiles
29,iluetkeb/robot-dockerfiles,,"FROM ingo/ros-fuerte-base:12.04
MAINTAINER Ingo Lütkebohle <ingo.luetkebohle@ipvs.uni-stuttgart.de>


RUN apt-get -y install ros-fuerte-opencv2 ros-fuerte-driver-common ros-fuerte-geometry ros-fuerte-geometry-experimental
# this one is really massive, so give docker a chance to cache the above
RUN apt-get -y install ros-fuerte-pr2-calibration


","Shell
100.0%",2014-07-18 07:55:08,2014-07-18 07:55:16,https://github.com/iluetkeb/robot-dockerfiles
0,iluetkeb/robot-dockerfiles,,"FROM ingo/ros-common-deps:12.04
MAINTAINER Ingo Lütkebohle <ingo.luetkebohle@ipvs.uni-stuttgart.de>


RUN apt-get -y install ros-groovy-ros-base libopenni-nite-dev


","Shell
100.0%",2014-07-18 07:55:08,2014-07-18 07:55:16,https://github.com/iluetkeb/robot-dockerfiles
1,iluetkeb/robot-dockerfiles,,"FROM ingo/ros-groovy-base:12.04
MAINTAINER Ingo Lütkebohle <ingo.luetkebohle@ipvs.uni-stuttgart.de>
# this will pull in not just ros, but a whole bunch of X dependencies also
RUN apt-get -y install ros-groovy-desktop binutils pkg-config x11vnc mesa-utils libgtk2.0-0 twm xpra


","Shell
100.0%",2014-07-18 07:55:08,2014-07-18 07:55:16,https://github.com/iluetkeb/robot-dockerfiles
2,iluetkeb/robot-dockerfiles,,"FROM ingo/ros-groovy-base:12.04
MAINTAINER Ingo Lütkebohle <ingo.luetkebohle@ipvs.uni-stuttgart.de>
RUN apt-get -y install vim binutils pkg-config x11vnc xvfb ros-groovy-object-recognition-capture






","Shell
100.0%",2014-07-18 07:55:08,2014-07-18 07:55:16,https://github.com/iluetkeb/robot-dockerfiles
3,iluetkeb/robot-dockerfiles,,"FROM groovy-desktop:12.04-0.2
MAINTAINER Ingo Lütkebohle <ingo.luetkebohle@ipvs.uni-stuttgart.de>
RUN apt-get -y install ros-groovy-pr2-desktop ros-groovy-pr2-navigation-apps 


","Shell
100.0%",2014-07-18 07:55:08,2014-07-18 07:55:16,https://github.com/iluetkeb/robot-dockerfiles
4,iluetkeb/robot-dockerfiles,,"FROM ingo/ubuntu-de:12.04
MAINTAINER Ingo Lütkebohle <ingo.luetkebohle@ipvs.uni-stuttgart.de>


# i've been watching https://www.youtube.com/watch?v=xfAx8_rFjx4 while this
# built -- go check it out, that kid is amazing


# add ros repository
RUN echo ""deb http://ros.informatik.uni-freiburg.de/packages/ros/ubuntu precise main"" > /etc/apt/sources.list.d/ros-latest.list
ADD http://packages.ros.org/ros.key ros.key
RUN apt-key add ros.key
RUN apt-get update


# install all the *Ubuntu* packages that would be pulled in by installing ROS
RUN apt-get -y install `apt-get install -s ros-fuerte-ros ros-fuerte-pr2-apps ros-groovy-ros ros-groovy-pr2-apps python-rospkg |grep ^Inst|grep -v ROS|awk '{print $2}'`


# common ROS build infrastructure
RUN apt-get -y install python-rosdep python-rosdistro python-rosinstall python-rosinstall-generator python-rospkg python-wstool python-vcstools python-catkin-pkg


# often used for actually running and displaying stuff, so might as well include it here
RUN apt-get -y install sudo x11vnc fluxbox xvfb


","Shell
100.0%",2014-07-18 07:55:08,2014-07-18 07:55:16,https://github.com/iluetkeb/robot-dockerfiles
5,iluetkeb/robot-dockerfiles,,"FROM ubuntu:12.04
MAINTAINER Ingo Lütkebohle <ingo.luetkebohle@ipvs.uni-stuttgart.de>


# turn of debconf questions, they do not work in ""docker build"" anyway.
# for important things, use debconf-set-selections *prior* to installation
RUN echo debconf debconf/frontend select noninteractive | debconf-set-selections


# change ubuntu source to german mirrors
RUN sed -i 's#http://archive.ubuntu.com#http://de.archive.ubuntu.com#g' /etc/apt/sources.list


# add multiverse repo, some ros package need it (not the ones installed here,
# but images that build on this might do)
RUN apt-get update
RUN apt-get -y install python-software-properties
RUN add-apt-repository ""deb http://de.archive.ubuntu.com/ubuntu/ precise multiverse""
RUN add-apt-repository ""deb http://de.archive.ubuntu.com/ubuntu/ precise-updates multiverse""
RUN add-apt-repository ""deb http://de.archive.ubuntu.com/ubuntu/ precise-security multiverse""
RUN apt-get update
","Shell
100.0%",2014-07-18 07:55:08,2014-07-18 07:55:16,https://github.com/iluetkeb/robot-dockerfiles
6,ubermuda/docker-symfony-phpunit,,"FROM debian:wheezy
 
ENV DEBIAN_FRONTEND noninteractive
 
RUN apt-get update -y
RUN apt-get install -y \
 curl \
 php5-cli php5-json php5-curl




RUN curl -sS https://getcomposer.org/installer | php
RUN mv composer.phar /usr/local/bin/composer


RUN composer global require 'phpunit/phpunit=4.1.*'




#Les tests sur le finder (et notamment testIgnoredAccessDeniedException et testAccessDeniedException)
#ne peuvent être lancés en root
RUN useradd tests


#permet de lancer ProfilerTest
RUN apt-get install -y php5-sqlite




#permet de faire fonctionner src/Symfony/Component/Process/Tests/SimpleProcessTest.php ::testSignal
RUN sed --in-place '/disable_functions/d' /etc/php5/cli/php.ini


RUN apt-get install -y wget build-essential
 
RUN wget http://download.icu-project.org/files/icu4c/51.2/icu4c-51_2-src.tgz -O	 /root/icu4c-51_2-src.tgz
RUN cd /root && tar -zxf icu4c-51_2-src.tgz
RUN cd /root/icu/source/ && ./configure && make && make install


RUN apt-get install -y php-pear php5-dev
#RUN pear install pecl
RUN pecl update-channels




RUN apt-get install -y php5-intl 
RUN apt-get install -y php-apc 


RUN echo 'date.timezone = Europe/Paris' >> /etc/php5/cli/php.ini




#permet de faire fonctionner testDumpNumericValueWithLocale
#Symfony\Component\Yaml\Tests\InlineTest
RUN apt-get install -y locales
RUN cat /etc/locale.gen
RUN sed -i ""s/^# fr_FR/fr_FR/"" /etc/locale.gen
RUN locale-gen
RUN update-locale LANG=fr_FR.UTF-8


USER tests


WORKDIR /var/www
VOLUME [""/var/www""]




CMD [""--exclude-group"", ""benchmark""]


ENTRYPOINT [""/.composer/vendor/bin/phpunit""]


",,2014-07-18 06:49:25,2014-07-19 19:19:10,https://github.com/ubermuda/docker-symfony-phpunit
7,tkaplan/apollo,,"#
# example Dockerfile for http://docs.docker.io/en/latest/examples/postgresql_service/
#


FROM ubuntu
MAINTAINER SvenDowideit@docker.com


# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc 
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8


# Add PostgreSQL's repository. It contains the most recent stable release
#     of PostgreSQL, ``9.3``.
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Update the Ubuntu and PostgreSQL repository indexes
RUN apt-get update


# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get -y -q install python-software-properties software-properties-common
RUN apt-get -y -q install postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3


# Note: The official Debian and Ubuntu images automatically ``apt-get clean``
# after each ``apt-get`` 


# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres


# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER docker WITH SUPERUSER PASSWORD 'docker';"" &&\
    createdb -O docker docker


# Adjust PostgreSQL configuration so that remote connections to the
# database are possible. 
RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf


# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


# Expose the PostgreSQL port
EXPOSE 5432


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME	[""/etc/postgresql"", ""/var/log/postgresql"", ""/var/lib/postgresql""]


# Set the default command to run when starting the container
CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/var/lib/postgresql/9.3/main"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","JavaScript
68.6%





CSS
31.4%",2014-07-19 19:07:05,2014-12-01 00:19:02,https://github.com/tkaplan/apollo
8,sorccu/docker-rethinkdb,,"FROM ubuntu:14.04
MAINTAINER Simo Kinnunen


# Install rethinkdb.
RUN apt-get update && \
    apt-get -y install wget && \
    . /etc/lsb-release && \
    echo ""deb http://download.rethinkdb.com/apt $DISTRIB_CODENAME main"" | \
      tee /etc/apt/sources.list.d/rethinkdb.list && \
    wget -qO- http://download.rethinkdb.com/apt/pubkey.gpg | \
      apt-key add - && \
    apt-get -y purge wget && \
    apt-get update && \
    apt-get -y install rethinkdb=1.13.1-0ubuntu1~trusty && \
    apt-get -y autoremove


# Volume for data.
VOLUME [""/data""]


# Use the data volume by default.
WORKDIR /data


# Expose Web UI port.
EXPOSE 8080


# Expose default RethinkDB port.
EXPOSE 28015


# Expose cluster communication port.
EXPOSE 29015


# Start rethinkdb by default.
CMD [""rethinkdb"", ""--bind"", ""all""]
","Shell
100.0%",2014-07-09 07:15:36,2015-09-09 10:25:20,https://github.com/sorccu/docker-rethinkdb
9,tshst/docker-sshd,,"FROM centos
MAINTAINER tshuichi ""takaoka.shuichi@gmail.com""


# Install package
RUN yum update  -y
RUN yum install -y openssh-server.x86_64 passwd sudo


# Create user
RUN useradd dep
RUN passwd  -f -u dep


# Set up SSH
RUN mkdir           /home/dep/.ssh; chown dep: /home/dep/.ssh; chmod 700 /home/dep/.ssh
ADD authorized_keys /home/dep/.ssh/authorized_keys
RUN chown dep:      /home/dep/.ssh/authorized_keys
RUN chmod 600       /home/dep/.ssh/authorized_keys
RUN chown dep:      /home/dep


# Set up sudoers
RUN echo ""dep    ALL=(ALL)       ALL"" >> /etc/sudoers.d/dep


# Set up SSHD config
RUN sed -ri 's/UsePAM yes/#UsePAM yes/g'                               /etc/ssh/sshd_config
RUN sed -ri 's/#UsePAM no/UsePAM no/g'                                 /etc/ssh/sshd_config
RUN sed -ri 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config


## Init SSHD
RUN /etc/init.d/sshd start
RUN /etc/init.d/sshd stop
","Shell
100.0%",2014-07-06 05:45:27,2014-07-06 06:29:50,https://github.com/tshst/docker-sshd
10,ryanj/restify-base,,"FROM ryanj/centos7-nodejs:current
MAINTAINER ryanj <ryanj@redhat.com>
","HTML
82.7%





JavaScript
17.3%",2014-04-27 04:37:35,2016-02-15 20:16:44,https://github.com/ryanj/restify-base
11,knjname/jenkins-docker-example,,"FROM ubuntu


MAINTAINER knjname


# Install required tools
RUN apt-get update
RUN apt-get install -y openjdk-7-jdk
RUN apt-get install -y openssh-client


# Install SSH configuration
ADD ssh-files /root/.ssh


# Install Jenkins
RUN mkdir -p /jenkins/bin
RUN mkdir -p /jenkins/home
RUN mkdir -p /jenkins/logs


ADD http://mirrors.jenkins-ci.org/war/latest/jenkins.war /jenkins/bin/jenkins.war
ADD resources/run.sh /jenkins/bin/run.sh


# Declarations
CMD bash /jenkins/bin/run.sh




","Shell
100.0%",2014-05-03 05:38:25,2017-06-26 09:48:10,https://github.com/knjname/jenkins-docker-example
12,knjname/jenkins-docker-example,,"FROM ubuntu


MAINTAINER knjname


# Install required tools
RUN apt-get update
RUN apt-get install -y openjdk-7-jdk
RUN apt-get install -y openssh-server


# Install SSH configuration
# (Should allow master's SSH request.)
ADD ssh-files /root/.ssh
RUN mkdir -p /var/run/sshd


# Install additional tools several jobs needs.
# (Following packages are just examples.)
RUN apt-get install -y gcc graphviz ruby


# Jenkins workspace
RUN mkdir -p /jenkins/ws


# Declarations
CMD /usr/sbin/sshd -D




","Shell
100.0%",2014-05-03 05:38:25,2017-06-26 09:48:10,https://github.com/knjname/jenkins-docker-example
13,bradfitz/talk-2014-04-gophercon,,"FROM ubuntu:12.04


RUN apt-get update
RUN apt-get -y install curl mercurial
RUN apt-get -y install make gcc bison
RUN apt-get -y install emacs23-nox
RUN apt-get -y install git-core


RUN adduser gopher


ENV GOROOT /home/gopher/go
ENV GOBIN /home/gopher/go/bin


WORKDIR /home/gopher
RUN curl --remote-name http://bradfitz-public.s3-website-us-east-1.amazonaws.com/go.tar.gz
RUN tar -zxvf go.tar.gz
RUN rm go.tar.gz
RUN mkdir -p $GOBIN


ENV GOVERS f613443bb13a
RUN cd $GOROOT && hg pull https://code.google.com/p/go
RUN cd $GOROOT && hg update -C $GOVERS
RUN echo $GOVERS > $GOROOT/VERSION


RUN chown -R gopher.gopher $GOROOT
RUN apt-get -y install sudo
RUN echo ""gopher ALL=(ALL) NOPASSWD:ALL"" >> /etc/sudoers


USER gopher
ENV PATH /home/gopher/bin:/home/gopher/src/camlistore.org/bin:/home/gopher/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV HOME /home/gopher


RUN cd $GOROOT/src && ./make.bash


ENV CAMVERS 8ac8437e91cbce921cb7245d44f5191c1916b170
ENV GOPATH /home/gopher
RUN mkdir /home/gopher/src /home/gopher/bin
RUN cd /home/gopher/src && git clone https://github.com/bradfitz/camlistore.git camlistore.org
RUN cd /home/gopher/src/camlistore.org && git reset --hard $CAMVERS
RUN cd /home/gopher/src/camlistore.org && make


ENV USER gopher
RUN camput init --newkey


RUN sudo apt-get -y install fuse


RUN (echo ""#!/bin/sh""; echo ""exec camlistored 2>/dev/null"") > /home/gopher/bin/d
RUN chmod +x /home/gopher/bin/d
RUN sudo usermod -a -G fuse gopher


RUN go get code.google.com/p/go.tools/cmd/godoc


ENTRYPOINT /bin/bash


","Go
68.9%





Shell
29.8%





CSS
1.3%",2014-04-21 18:19:37,2015-08-24 14:33:43,https://github.com/bradfitz/talk-2014-04-gophercon
14,bradfitz/talk-2014-04-gophercon,,"FROM ubuntu:10.04


RUN apt-get update
RUN apt-get -y install curl mercurial
RUN apt-get -y install make gcc ed bison
RUN apt-get -y install emacs22-nox
RUN apt-get -y install git-core


RUN adduser gopher


ENV GOROOT /home/gopher/go
ENV GOBIN /home/gopher/go/bin


WORKDIR /home/gopher
RUN curl --remote-name http://bradfitz-public.s3-website-us-east-1.amazonaws.com/go.tar.gz
RUN tar -zxvf go.tar.gz
RUN rm go.tar.gz
RUN mkdir -p $GOBIN


ENV GOVERS afd6198fb082
RUN cd $GOROOT && hg update -C $GOVERS
RUN echo $GOVERS > $GOROOT/VERSION


RUN chown -R gopher.gopher $GOROOT
RUN apt-get -y install libc6-dev-i386
RUN apt-get -y install sudo
RUN echo ""gopher ALL=(ALL) NOPASSWD:ALL"" >> /etc/sudoers


USER gopher
ENV GOARCH 386
RUN cd $GOROOT/src && ./make.bash


ENV CAMVERS e7b00b6e2c3955350d1c714637f16e8b985511aa
RUN cd /home/gopher && git clone https://github.com/bradfitz/camlistore.git
RUN cd /home/gopher/camlistore && git reset --hard $CAMVERS


ENV PATH /home/gopher/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV HOME /home/gopher
ENTRYPOINT /bin/bash


","Go
68.9%





Shell
29.8%





CSS
1.3%",2014-04-21 18:19:37,2015-08-24 14:33:43,https://github.com/bradfitz/talk-2014-04-gophercon
15,bradfitz/talk-2014-04-gophercon,,"FROM ubuntu:10.04


RUN apt-get update
RUN apt-get -y install curl mercurial
RUN apt-get -y install make gcc ed bison
RUN apt-get -y install emacs22-nox


RUN adduser gopher


ENV GOROOT /home/gopher/go
ENV GOBIN /home/gopher/go/bin


WORKDIR /home/gopher
RUN curl --remote-name http://bradfitz-public.s3-website-us-east-1.amazonaws.com/go.tar.gz
RUN tar -zxvf go.tar.gz
RUN rm go.tar.gz
RUN mkdir -p $GOBIN


ENV GOVERS aaa902b78832
RUN cd $GOROOT && hg update -C $GOVERS
RUN echo $GOVERS > $GOROOT/VERSION


RUN chown -R gopher.gopher $GOROOT
USER gopher
RUN cd $GOROOT/src && ./make.bash


ENV PATH /home/gopher/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
ENV HOME /home/gopher
ENTRYPOINT /bin/bash


","Go
68.9%





Shell
29.8%





CSS
1.3%",2014-04-21 18:19:37,2015-08-24 14:33:43,https://github.com/bradfitz/talk-2014-04-gophercon
16,prettynatty/docker-ghc-7.6,,"FROM ubuntu:12.04


MAINTAINER Andrey Kuznetsov <fear@loathing.in>
ENV DEBIAN_FRONTEND noninteractive


# Install basis stuff
RUN apt-get update
RUN apt-get -y install software-properties-common python-software-properties


# Add ghc ppa
RUN add-apt-repository ppa:hvr/ghc -y


# Install basic needed packages
RUN apt-get update
RUN apt-get install -y libgmp3-dev zlib1g-dev 


# Install ghc
RUN apt-get install -y ghc-7.6.3


# Install cabal-install
RUN apt-get install -y cabal-install-1.20


# Install build tools
RUN apt-get install -y alex-3.1.3 happy-1.19.3


# Set PATH
ENV PATH /opt/happy/1.19.3/bin:/opt/alex/3.1.3/bin:/opt/ghc/7.6.3/bin:/opt/cabal/1.20/bin:$PATH
","Shell
100.0%",2014-05-28 14:27:54,2014-06-12 06:18:23,https://github.com/prettynatty/docker-ghc-7.6
17,fimkrypto/fimk,,"# Nxt docker image
#
# to use:
#
# 1. install docker, see docker.com
# 2. clone the git repo including this Dockerfile
# 3. build the container with ```docker build -t nxt .```
# 4. run the created nxt container with ```docker run -d -p 127.0.0.1:7876:7876 -p 7874:7874 nxt```
# 5. inspect with docker logs (image hash, find out with docker ps, or assign a name)


FROM phusion/baseimage
# start off with standard ubuntu images


#java8
RUN sed 's/main$/main universe/' -i /etc/apt/sources.list
RUN apt-get update && apt-get install -y software-properties-common python-software-properties
RUN add-apt-repository ppa:webupd8team/java -y
RUN apt-get update
RUN apt-get install -y wget unzip
RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
RUN apt-get install -y oracle-java8-installer


# run and compile nxt
RUN mkdir /nxt
ADD . /nxt
# repo has
ADD docker_start.sh /docker_start.sh
+# set nxt to listen on all interfaces
+RUN echo 'nxt.allowedBotHosts=*' >> /nxt/conf/nxt.properties
+RUN echo 'nxt.apiServerHost=0.0.0.0' >> /nxt/conf/nxt.properties
RUN chmod +x /docker_start.sh


RUN cd /nxt; ./compile.sh
# both Nxt ports get exposed
EXPOSE 7874 7876
CMD [""/docker_start.sh""]
","Java
93.7%





JavaScript
5.5%





Other
0.8%",2014-06-28 14:07:49,2017-03-18 15:07:57,https://github.com/fimkrypto/fimk
18,ringohub/docker-index,,"FROM google/golang


MAINTAINER Yoshiki Aoki <ringohub@gmail.com>


ENV LANG en_US.UTF-8


RUN go get github.com/revel/cmd/revel


RUN go get github.com/ringohub/docker-index; echo ''


ENV DOCKER_REPOSITORY_PATH /var/registry/repos


RUN mkdir -p ${DOCKER_REPOSITORY_PATH}


EXPOSE 9000


CMD revel run github.com/ringohub/docker-index


#CMD /bin/bash
# docker build --rm -t ringohub/docker-index .
# docker run -v /var/registry/repositories:/var/tmp/repos -e DOCKER_REGISTORY_URL=foo.example.com -p 9000:9000 -ti ringohub/docker-index:latest
","Go
87.5%





Shell
12.5%",2014-07-07 17:00:30,2014-11-19 02:35:23,https://github.com/ringohub/docker-index
19,ungerts/docker-wso2esb-sample,,"FROM ungerts/docker-wso2esb
MAINTAINER Tobias Unger


ADD ./proxies /home/wso2/wso2esb-4.8.1/repository/deployment/server/synapse-configs/default/proxy-services
","Shell
100.0%",2014-07-07 22:09:27,2015-07-24 02:04:10,https://github.com/ungerts/docker-wso2esb-sample
20,danhixon/docker-web-base,,"# Use phusion/passenger-full as base image. To make your builds reproducible, make
# sure you lock down to a specific version, not to `latest`!
# See https://github.com/phusion/passenger-docker/blob/master/Changelog.md for
# a list of version numbers.
#FROM phusion/passenger-full:<VERSION>
# Or, instead of the 'full' variant, use one of these:
#FROM phusion/passenger-ruby18:<VERSION>
#FROM phusion/passenger-ruby19:<VERSION>
FROM phusion/passenger-ruby20
#FROM phusion/passenger-ruby21:<VERSION>
#FROM phusion/passenger-nodejs:<VERSION>
#FROM phusion/passenger-customizable:<VERSION>


# Set correct environment variables.
ENV HOME /root
# first we update openssl for heartbleed then
# libpq-dev is required for the pg gem,
# libxml2 libxslt-dev libxml2-dev are required by nokogiri,
# Need javascript engine for the asset pipeline
# Need git in order for capistrano to check out code from repo
# I like view files in vim:
RUN apt-get update && apt-get -yqq install python-software-properties software-properties-common && add-apt-repository ppa:george-edison55/openssl-heartbleed-fix -y && apt-get update && apt-get -yqq upgrade && apt-get -yqq install imagemagick graphicsmagick libmagickcore-dev libmagickwand-dev build-essential libssl-dev zlib1g-dev libpq-dev libxml2 libxslt-dev libxml2-dev nodejs git-core vim && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


RUN echo ""source /etc/container_environment.sh"" >> /root/.bashrc


# Use baseimage-docker's init process.
CMD [""/sbin/my_init""]
","Shell
100.0%",2014-04-21 16:06:59,2014-05-08 19:49:09,https://github.com/danhixon/docker-web-base
21,flynn-archive/flynn-grid,"Organization(name=None, id=8339465)","FROM flynn/busybox
MAINTAINER Jonathan Rudenberg <jonathan@titanous.com>


ADD https://github.com/coreos/etcd/releases/download/v0.3.0/etcd-v0.3.0-linux-amd64.tar.gz /tmp/etcd.tar.gz


RUN cd /tmp && \
    tar xzf etcd.tar.gz && \
    mv etcd-v0.3.0-linux-amd64/etcd /bin && \
    rm -rf *etcd*


ENTRYPOINT [""/bin/etcd""]
","Shell
84.6%





Ruby
15.4%",2014-04-28 23:42:24,2017-11-08 16:15:31,https://github.com/flynn-archive/flynn-grid
22,glibin/docker-hh,,"FROM    ubuntu:12.04
MAINTAINER Vitaly Glibin <glibin.v@gmail.com>


RUN apt-get update; apt-get install -y locales apt-transport-https curl wget


RUN wget -qO - http://admin.hh.ru:81/debian-key.pub | apt-key add -
RUN echo ""deb http://admin.hh.ru:81/ubuntu unstable/"" >> /etc/apt/sources.list
RUN echo ""deb http://admin.hh.ru:81/precise precise/"" >> /etc/apt/sources.list
RUN apt-get update


RUN apt-get install -y --force-yes python-hhsession python-tornado=2.0.0+hh22 python-tortik python-tornado-util python-hhwebutils python-hhtranslations2-client libcurl3=7.22.0-3ubuntu4.9+hh1 libcurl3-gnutls=7.22.0-3ubuntu4.9+hh1


RUN mkdir /data
VOLUME /data
WORKDIR /data


EXPOSE 8080


CMD [""python"", ""dev_run.py""]


","Shell
100.0%",2014-09-22 13:09:15,2014-09-23 12:37:26,https://github.com/glibin/docker-hh
23,glibin/docker-hh,,"FROM    ubuntu:12.04
MAINTAINER Vitaly Glibin <glibin.v@gmail.com>


RUN apt-get update; apt-get install -y locales apt-transport-https curl wget


RUN wget -qO - http://admin.hh.ru:81/debian-key.pub | apt-key add -
RUN echo ""deb http://admin.hh.ru:81/ubuntu unstable/"" >> /etc/apt/sources.list
RUN echo ""deb http://admin.hh.ru:81/precise precise/"" >> /etc/apt/sources.list
RUN apt-get update --fix-missing


RUN apt-get install -y --force-yes python-hhsession python-tornado=2.0.0+hh22 python-tortik python-tornado-util python-hhwebutils python-hhtranslations2-client libcurl3=7.22.0-3ubuntu4.9+hh1 libcurl3-gnutls=7.22.0-3ubuntu4.9+hh1  frontik hh-frontik-common hh-sofea-proto-api hh-proto-api python-crypto xsltproc hh-tornado-protobuf-utils


RUN mkdir /data
VOLUME /data
WORKDIR /data


EXPOSE 9200


CMD [""python"", ""dev_run.py"", ""--port=9200""]


","Shell
100.0%",2014-09-22 13:09:15,2014-09-23 12:37:26,https://github.com/glibin/docker-hh
24,glibin/docker-hh,,"FROM    ubuntu:12.04
MAINTAINER Vitaly Glibin <glibin.v@gmail.com>


RUN apt-get update; apt-get install -y locales apt-transport-https curl wget


RUN wget -qO - http://admin.hh.ru:81/debian-key.pub | apt-key add -
RUN echo ""deb http://admin.hh.ru:81/ubuntu unstable/"" >> /etc/apt/sources.list
RUN echo ""deb http://admin.hh.ru:81/precise precise/"" >> /etc/apt/sources.list
RUN apt-get update


RUN apt-get install -y --force-yes python-hhsession python-tornado=2.0.0+hh22 python-tornado-util python-hhwebutils python-hhtranslations2-client libcurl3=7.22.0-3ubuntu4.9+hh1 libcurl3-gnutls=7.22.0-3ubuntu4.9+hh1 frontik hh-frontik-common hh-sofea-proto-api hh-proto-api python-crypto xsltproc supervisor nginx
RUN easy_install watchdog
ADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf
ADD xhh.conf /etc/supervisor/conf.d/xhh.conf
ADD nginx.conf /etc/supervisor/conf.d/nginx.conf
RUN rm /etc/nginx/sites-enabled/default
RUN chown -R www-data:www-data /var/lib/nginx
ADD static.conf /etc/nginx/sites-enabled/static
RUN echo ""daemon off;"" >> /etc/nginx/nginx.conf


RUN mkdir /data
VOLUME /data
WORKDIR /data


EXPOSE 9300 9301


CMD [""/usr/bin/supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf""]


","Shell
100.0%",2014-09-22 13:09:15,2014-09-23 12:37:26,https://github.com/glibin/docker-hh
25,mirkosertic/Docker,,"FROM centos
MAINTAINER Mirko Sertic <mirko.sertic@web.de>


# Install required tools
# Seems not to be installed in base centos image
RUN yum install -y tar && \
    yum install -y wget


","Shell
100.0%",2014-09-30 09:03:50,2014-09-30 09:25:26,https://github.com/mirkosertic/Docker
26,mirkosertic/Docker,,"FROM mirkosertic/centosbase
MAINTAINER Mirko Sertic <mirko.sertic@web.de>


# Install Oracle JDK
RUN mkdir /opt/Oracle_Java && \
    cd /opt/Oracle_Java && \
    wget --header=""Cookie:s_cc=true; s_nr=1412060362634; gpw_e24=http%3A%2F%2Fwww.oracle.com%2Ftechnetwork%2Fjava%2Fjavase%2Fdownloads%2Fjdk7-downloads-1880260.html; s_sq=%5B%5BB%5D%5D; notice_preferences=2:cb8350a2759273dccf1e483791e6f8fd; oraclelicense=accept-securebackup-cookie"" http://download.oracle.com/otn-pub/java/jdk/7u67-b01/jdk-7u67-linux-x64.tar.gz && \
    tar xfz jdk-7u67-linux-x64.tar.gz && \
    chmod -R 755 /opt/Oracle_Java && \
    rm /opt/Oracle_Java/jdk-7u67-linux-x64.tar.gz && \
    ln -s /opt/Oracle_Java/jdk1.7.0_67 /opt/Oracle_Java/current_jdk && \
    update-alternatives --install ""/usr/bin/java"" ""java"" ""/opt/Oracle_Java/current_jdk/bin/java"" 1 && \
    update-alternatives --install ""/usr/bin/javac"" ""javac"" ""/opt/Oracle_Java/current_jdk/bin/javac"" 1 && \
    update-alternatives --install ""/usr/bin/javaws"" ""javaws"" ""/opt/Oracle_Java/current_jdk/bin/javaws"" 1 && \
    update-alternatives --install ""/usr/bin/jar"" ""jar"" ""/opt/Oracle_Java/current_jdk/bin/jar"" 1 && \
    rm -rf /tmp/*
","Shell
100.0%",2014-09-30 09:03:50,2014-09-30 09:25:26,https://github.com/mirkosertic/Docker
27,mirkosertic/Docker,,"FROM mirkosertic/centosbase
MAINTAINER Mirko Sertic <mirko.sertic@web.de>


# Install Oracle JDK
RUN mkdir /opt/Oracle_Java && \
    cd /opt/Oracle_Java && \
    wget --header=""Cookie:s_cc=true; s_nr=1412060362634; gpw_e24=http%3A%2F%2Fwww.oracle.com%2Ftechnetwork%2Fjava%2Fjavase%2Fdownloads%2Fjdk8-downloads-2133151.html; s_sq=%5B%5BB%5D%5D; notice_preferences=2:cb8350a2759273dccf1e483791e6f8fd; oraclelicense=accept-securebackup-cookie"" http://download.oracle.com/otn-pub/java/jdk/8u20-b26/jdk-8u20-linux-x64.tar.gz && \
    tar xfz jdk-8u20-linux-x64.tar.gz && \
    chmod -R 755 /opt/Oracle_Java && \
    rm /opt/Oracle_Java/jdk-8u20-linux-x64.tar.gz && \
    ln -s /opt/Oracle_Java/jdk1.8.0_20 /opt/Oracle_Java/current_jdk && \
    update-alternatives --install ""/usr/bin/java"" ""java"" ""/opt/Oracle_Java/current_jdk/bin/java"" 1 && \
    update-alternatives --install ""/usr/bin/javac"" ""javac"" ""/opt/Oracle_Java/current_jdk/bin/javac"" 1 && \
    update-alternatives --install ""/usr/bin/javaws"" ""javaws"" ""/opt/Oracle_Java/current_jdk/bin/javaws"" 1 && \
    update-alternatives --install ""/usr/bin/jar"" ""jar"" ""/opt/Oracle_Java/current_jdk/bin/jar"" 1 && \
    rm -rf /tmp/*




","Shell
100.0%",2014-09-30 09:03:50,2014-09-30 09:25:26,https://github.com/mirkosertic/Docker
28,mirkosertic/Docker,,"FROM mirkosertic/basejava7
MAINTAINER Mirko Sertic <mirko.sertic@web.de>


# Install Apache Tomcat
RUN mkdir /opt/Tomcat6 && \
    cd /opt/Tomcat6 && \
    wget ""http://ftp.halifax.rwth-aachen.de/apache/tomcat/tomcat-6/v6.0.41/bin/apache-tomcat-6.0.41.tar.gz"" && \
    tar xfz apache-tomcat-6.0.41.tar.gz && \
    ln -s /opt/Tomcat6/apache-tomcat-6.0.41 /opt/Tomcat6/current_tomcat && \
    rm /opt/Tomcat6/apache-tomcat-6.0.41.tar.gz


COPY tomcat-start.sh /opt/Tomcat6/tomcat-start.sh


RUN chmod -R 755 /opt/Tomcat6


# Finally run it
EXPOSE 8080
ENTRYPOINT [""/opt/Tomcat6/tomcat-start.sh""]


","Shell
100.0%",2014-09-30 09:03:50,2014-09-30 09:25:26,https://github.com/mirkosertic/Docker
29,mirkosertic/Docker,,"FROM mirkosertic/basejava8
MAINTAINER Mirko Sertic <mirko.sertic@web.de>


# Install Apache Tomcat
RUN mkdir /opt/Tomcat8 && \
    cd /opt/Tomcat8 && \
    wget ""http://mirror.serversupportforum.de/apache/tomcat/tomcat-8/v8.0.12/bin/apache-tomcat-8.0.12.tar.gz"" && \
    tar xfz apache-tomcat-8.0.12.tar.gz && \
    ln -s /opt/Tomcat8/current_tomcat /opt/Tomcat8/apache-tomcat-8.0.12 && \
    rm /opt/Tomcat8/apache-tomcat-8.0.12.tar.gz


COPY tomcat-start.sh /opt/Tomcat8/tomcat-start.sh


RUN chmod -R 755 /opt/Tomcat8


# Finally run it
EXPOSE 8080
ENTRYPOINT [""/opt/Tomcat8/tomcat-start.sh""]


","Shell
100.0%",2014-09-30 09:03:50,2014-09-30 09:25:26,https://github.com/mirkosertic/Docker
0,deis/mock-http-server,"Organization(name=None, id=6117407)","FROM deis/go:latest


WORKDIR /go/src/github.com/deis/mock-http-server
ADD . /go/src/github.com/deis/mock-http-server
RUN CGO_ENABLED=0 go get -a -ldflags '-s' github.com/deis/mock-http-server
","Go
66.8%





Makefile
33.2%",2014-10-04 19:54:21,2017-05-10 21:16:06,https://github.com/deis/mock-http-server
1,deis/mock-http-server,"Organization(name=None, id=6117407)","FROM scratch


ADD mock-http-server /usr/local/bin/mock-http-server
ENTRYPOINT [""/usr/local/bin/mock-http-server""]
","Go
66.8%





Makefile
33.2%",2014-10-04 19:54:21,2017-05-10 21:16:06,https://github.com/deis/mock-http-server
2,Abdulrahman-Alshaghdali/dt211-3-abdul,,"############################################################
# Dockerfile to build Python WSGI Application Containers
# Based on Ubuntu
############################################################


# Set the base image to Ubuntu
FROM ubuntu:trusty


# File Author / Maintainer
MAINTAINER Abdulrahman Alshaghdali


# Add the application resources URL
RUN echo ""deb http://ie.archive.ubuntu.com/ubuntu/ trusty main universe"" >> /etc/apt/sources.list


# Update the sources list
RUN apt-get update


# Install basic applications
RUN apt-get install -y tar git curl nano wget dialog net-tools build-essential


# Install Python and Basic Python Tools
RUN apt-get install -y python python-dev python-distribute python-pip


# Copy the application folder inside the container
ADD /my_application /my_application


# Get pip to download and install requirements:
RUN pip install -r /my_application/requirements.txt


# Expose ports
#EXPOSE 80
EXPOSE 5000 
RUN mkdir /my_application/uploads


# Set the default directory where CMD will execute
WORKDIR /my_application


# Set the default command to execute    
# when creating a new container
# i.e. using CherryPy to serve the application
CMD python server.py


","Python
73.5%





Shell
26.5%",2014-10-02 14:49:44,2014-10-09 16:24:03,https://github.com/Abdulrahman-Alshaghdali/dt211-3-abdul
3,pauldoran/cloud-comparison-ninja-app,,"FROM ubuntu
RUN apt-get update -y && apt-get install -y sysbench curl wget unzip
RUN curl -L get.rvm.io | bash -s stable
RUN /bin/bash -l -c ""source /etc/profile.d/rvm.sh""
RUN /bin/bash -l -c ""rvm install 2.1.2""
RUN /bin/bash -l -c ""rvm 2.1.2 do gem install json mechanize --no-ri --no-rdoc""
ADD perftest.rb /perftest.rb
RUN wget https://github.com/lacostej/speedtest.rb/archive/master.zip && unzip master.zip


CMD /bin/bash -l -c ""source /etc/profile.d/rvm.sh && rvm 2.1.2 do ruby /perftest.rb""
","JavaScript
92.2%





CSS
4.6%





Ruby
2.5%





Shell
0.7%",2014-10-07 20:36:25,2014-10-07 20:46:09,https://github.com/pauldoran/cloud-comparison-ninja-app
4,ask4prasath/brimirclone,,"FROM ubuntu:precise


RUN echo 'deb http://nl3.archive.ubuntu.com/ubuntu precise main universe' > /etc/apt/sources.list


RUN apt-get update


# install required dependencies for everything below
RUN apt-get install -y git curl build-essential autoconf libssl-dev libyaml-dev libreadline6-dev zlib1g-dev libpq-dev nodejs postgresql pwgen libcurl4-openssl-dev imagemagick postfix postfix-pcre


# install ruby-build
RUN git clone https://github.com/sstephenson/ruby-build.git /tmp/ruby-build
RUN /tmp/ruby-build/install.sh
RUN rm -r /tmp/ruby-build


# install ruby in /usr/local
RUN ruby-build 2.0.0-p353 /usr/local


# install bundler
RUN gem install bundle


# add brimir user
RUN useradd -s /bin/bash brimir


# clone the repo
RUN git clone https://github.com/ivaldi/brimir /home/brimir/


# add a javascript runtime
RUN echo 'gem ""therubyracer""' >> /home/brimir/Gemfile


# install all gems needed for production
RUN cd /home/brimir && bundle install --without development:test


# install passenger & nginx
RUN gem install passenger
RUN passenger-install-nginx-module --auto --auto-download --prefix=/usr/local
RUN head -n `grep -n server /usr/local/conf/nginx.conf | head -n 1 | awk -F: '{print $1}'` /usr/local/conf/nginx.conf > /tmp/nginx.conf
RUN echo '\nserver_name localhost;\nroot /home/brimir/public;\npassenger_enabled on;\n}\n}\ndaemon off;' >> /tmp/nginx.conf
RUN mv /tmp/nginx.conf /usr/local/conf/nginx.conf


# setup database using our local script
RUN /home/brimir/script/setup-database /home/brimir/


ENV RAILS_ENV production
# precompile assets
RUN cd /home/brimir && rake assets:precompile
# load database schema and fill with default seed data
RUN service postgresql start && cd /home/brimir && rake db:migrate && rake db:seed


# make everything owned by brimir, so passenger will run as brimir
RUN chown -R brimir:brimir /home/brimir


# setup incoming mail
RUN echo 'brimir: ""|/bin/bash /home/brimir/script/post-mail http://localhost/tickets""' >> /etc/aliases
RUN newaliases
# accept any domain
RUN sed -i 's|mydestination.*|mydestination = pcre:/etc/postfix/mydestinations|g' /etc/postfix/main.cf
RUN echo '/.*/ ACCEPT' >> /etc/postfix/mydestinations
RUN postmap /etc/postfix/mydestinations


CMD service postgresql start && /usr/local/sbin/nginx
EXPOSE 80
EXPOSE 25
","Ruby
85.5%





JavaScript
7.5%





CSS
4.9%





Shell
2.1%",2014-09-15 18:59:31,2014-09-15 19:00:39,https://github.com/ask4prasath/brimirclone
5,Stockflare/sitemapper,"Organization(name=None, id=7127426)","# This file creates the Docker image for the current working version of the Bilcas
# api. It is a self-contained image, requiring all of the application dependencies
# and gems.


# Start with a base Ubuntu 14:04 image
FROM ubuntu:trusty


MAINTAINER Mark Stratmann <mark@stratmann.me.uk>


# Add all base dependencies
RUN apt-get update
RUN apt-get -y install python-software-properties wget openssl libreadline6 libreadline6-dev curl git zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion zlib1g-dev build-essential libreadline-dev libsqlite3-dev libxml2-dev libxslt1-dev
RUN apt-get install -y vim


# Install RVM
RUN curl -L get.rvm.io | bash -s stable
ENV PATH /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin




# Install Ruby
RUN /bin/bash -l -c ""rvm install 2.1.2""
RUN /bin/bash -l -c ""rvm use 2.1.2""


# Setup the working directory
WORKDIR /project


# Add the application to the container (cwd)
ADD ./ /project




# Create Gemset
RUN /bin/bash -l -c ""rvm gemset create sitemapper""
RUN /bin/bash -l -c ""rvm use 2.1.2@sitemapper --default""


# You will need your github ssh key
ADD ./ssh/ /root/.ssh
RUN chmod 700 /root/.ssh/id_rsa
RUN echo ""Host github.com\n\tStrictHostKeyChecking no\n"" >> /root/.ssh/config


# Install the bundle
RUN /bin/bash -l -c ""bundle install""




VOLUME [""/project""]


# Setup the entrypoint
ENTRYPOINT [""/bin/bash"", ""-l"", ""-c""]
CMD [""./sitemapper""]
","Shell
59.2%





Ruby
40.8%",2014-09-21 15:56:19,2014-11-20 00:13:42,https://github.com/Stockflare/sitemapper
6,Stockflare/sitemapper,"Organization(name=None, id=7127426)","#
# ElasticSearch Dockerfile
#
# https://github.com/dockerfile/elasticsearch
#


# Pull base image.
FROM dockerfile/java


# Install ElasticSearch.
RUN \
  cd /tmp && \
  wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.1.tar.gz && \
  tar xvzf elasticsearch-1.3.1.tar.gz && \
  rm -f elasticsearch-1.3.1.tar.gz && \
  mv /tmp/elasticsearch-1.3.1 /elasticsearch


# Define mountable directories.
VOLUME [""/elasticsearch/logs""]
VOLUME [""/elasticsearch/data""]


# Define working directory.
WORKDIR /data


RUN \
  /elasticsearch/bin/plugin -install elasticsearch/elasticsearch-cloud-aws/2.3.0


RUN \
  /elasticsearch/bin/plugin -install mobz/elasticsearch-head


# Define default command.
CMD [""/elasticsearch/bin/elasticsearch""]


# Expose ports.
#   - 9200: HTTP
#   - 9300: transport
EXPOSE 9200
EXPOSE 9300
","Shell
59.2%





Ruby
40.8%",2014-09-21 15:56:19,2014-11-20 00:13:42,https://github.com/Stockflare/sitemapper
7,saxxi/testapp,,"FROM phusion/passenger-full:0.9.14


# RUN apt-get update && apt-get install -y openssh-server
# RUN mkdir -p /var/run/sshd
# RUN echo 'root:screencast' | chpasswd
# RUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config


# # SSH login fix. Otherwise user is kicked off after login
# RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd


# ENV NOTVISIBLE ""in users profile""
# RUN echo ""export VISIBLE=now"" >> /etc/profile




ENV HOME /root


CMD [""/sbin/my_init""]


RUN rm -f /etc/service/nginx/down
RUN rm /etc/nginx/sites-enabled/default
ADD webapp.conf /etc/nginx/sites-enabled/webapp.conf


RUN mkdir -p /home/app/webapp


WORKDIR /tmp
ADD Gemfile /tmp/
ADD Gemfile.lock /tmp/
RUN bundle install


RUN mkdir -p /home/app/webapp
ADD . /home/app/webapp


RUN cd /home/app/webapp && RAILS_ENV=production rake assets:precompile


RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# RUN adduser --home /home/deployer --disabled-password --gecos '' deployer
# RUN adduser deployer sudo
# RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
# USER deployer


EXPOSE 80 22
","Ruby
82.1%





Shell
8.1%





CSS
4.9%





JavaScript
3.7%





CoffeeScript
1.2%",2014-09-21 12:53:56,2014-09-21 12:54:24,https://github.com/saxxi/testapp
8,IvanMalison/okcupyd,,"FROM debian:latest


RUN apt-get update && apt-get install -y python python-dev python-pip zlib1g-dev \
     libxml2-dev libxslt1-dev python-dev libncurses5-dev
ADD . /okcupyd
RUN cd /okcupyd && python setup.py install
","Python
99.6%





Other
0.4%",2014-09-23 03:11:31,2017-11-28 02:50:43,https://github.com/IvanMalison/okcupyd
9,twa16/docker-observium,,"FROM ubuntu:16.04


ENV WAITFORIT_VERSION=""v1.3.1""


# Install necessary packages
RUN apt-get update
RUN apt-get upgrade -y


RUN apt-get install -y --no-install-recommends libapache2-mod-php7.0 php7.0-cli php7.0-mysql php7.0-mysqli php7.0-gd php7.0-mcrypt php7.0-json \
php-pear snmp fping mysql-client python-mysqldb rrdtool subversion whois mtr-tiny ipmitool \
graphviz imagemagick apache2 libvirt-bin wget tar


# Install SSL Certificates
RUN apt-get install -y ca-certificates


#Copy in wait-for-it
RUN wget -q -O /bin/waitforit https://github.com/maxcnunes/waitforit/releases/download/$WAITFORIT_VERSION/waitforit-linux_amd64 
RUN chmod +x /bin/waitforit    


#Copy Install File
COPY install-observium.sh /bin/
RUN chmod +x /bin/install-observium.sh


#Download Observium Latest
RUN cd /root
RUN wget http://www.observium.org/observium-community-latest.tar.gz
RUN tar zxvf observium-community-latest.tar.gz -C /root


#Create necessary folders
RUN mkdir /root/observium/logs
RUN mkdir /root/observium/rrd
RUN chown www-data:www-data /root/observium/rrd


#Add Apache Config
RUN rm /etc/apache2/sites-available/000-default.conf
COPY observium-apache-conf /etc/apache2/sites-available/000-default.conf
RUN phpenmod mcrypt
RUN a2dismod mpm_event
RUN a2enmod mpm_prefork
RUN a2enmod php7.0
RUN a2enmod rewrite


#Add cron
COPY observium-cron  /etc/cron.d/observium


#COPY start.sh
COPY start.sh /start.sh
RUN chmod +x /start.sh


ENTRYPOINT [""/start.sh""]
","Shell
100.0%",2017-02-09 20:50:10,2017-02-09 20:51:40,https://github.com/twa16/docker-observium
10,InfraBox/examples,"Organization(name=None, id=25438321)","FROM node:6.9.4-alpine


COPY . project


EXPOSE 3000


CMD [""/project/infrabox/server/entrypoint.sh""]


","C++
41.9%





Shell
32.7%





CMake
13.7%





JavaScript
7.4%





Python
4.3%",2017-02-09 19:17:54,2017-02-09 19:21:09,https://github.com/InfraBox/examples
11,InfraBox/examples,"Organization(name=None, id=25438321)","FROM alpine:3.4


RUN apk add --no-cache gtest gtest-dev g++ cmake make


RUN cd /usr/src/gtest/ && \
    cmake . && \
    make && \
    cp *.a /usr/lib


COPY . job_dependencies


# just to make sure we can also run it with docker on windows
RUN dos2unix job_dependencies/infrabox/build/entrypoint.sh
RUN chmod +x job_dependencies/infrabox/build/entrypoint.sh


CMD [""job_dependencies/infrabox/build/entrypoint.sh""]
","C++
41.9%





Shell
32.7%





CMake
13.7%





JavaScript
7.4%





Python
4.3%",2017-02-09 19:17:54,2017-02-09 19:21:09,https://github.com/InfraBox/examples
12,InfraBox/examples,"Organization(name=None, id=25438321)","FROM alpine:3.4


RUN apk add --no-cache gtest g++


COPY . job_dependencies


# just to make sure we can also run it with docker on windows
RUN dos2unix job_dependencies/infrabox/test/entrypoint.sh
RUN chmod +x job_dependencies/infrabox/test/entrypoint.sh


CMD [""/job_dependencies/infrabox/test/entrypoint.sh""]
","C++
41.9%





Shell
32.7%





CMake
13.7%





JavaScript
7.4%





Python
4.3%",2017-02-09 19:17:54,2017-02-09 19:21:09,https://github.com/InfraBox/examples
13,InfraBox/examples,"Organization(name=None, id=25438321)","FROM alpine:3.4


RUN apk add --no-cache gtest gtest-dev g++ cmake make


# Compile gtest, used for out c++ tests
RUN cd /usr/src/gtest/ && \
    cmake . && \
    make && \
    cp *.a /usr/lib


COPY . simple_project


# just to make sure we can also run it with docker on windows
RUN dos2unix /simple_project/infrabox/build-and-test/entrypoint.sh
RUN chmod +x /simple_project/infrabox/build-and-test/entrypoint.sh


CMD [""simple_project/infrabox/build-and-test/entrypoint.sh""]
","C++
41.9%





Shell
32.7%





CMake
13.7%





JavaScript
7.4%





Python
4.3%",2017-02-09 19:17:54,2017-02-09 19:21:09,https://github.com/InfraBox/examples
14,nfeld9807/ubuntu,,"FROM ubuntu
MAINTAINER Nathan Feldsien <nfeld9807@gmail.com>


# Install packages
RUN apt-get update -y && apt-get upgrade -y


RUN DEBIAN_FRONTEND=noninteractive apt-get -y install software-properties-common


# NeoVim Repository
RUN  add-apt-repository ppa:neovim-ppa/unstable


RUN apt-get update -y


RUN apt-get install -y \
    build-essential \
    git \
    neovim \
    vim \
    zsh \
    curl \
    tree \
    ack-grep \
    tmux \
    python-dev \
    python3-dev \
    python-pip \
    python3-pip \
    cmake \
    automake \
    gcc \
    npm


# Node
RUN curl -sL https://deb.nodesource.com/setup_6.x | bash
RUN apt-get install -y nodejs


# Create Empty SSH Profile to pass build
RUN mkdir /root/.ssh
RUN touch /root/.ssh/id_rsa


# Home
ADD home /root/


# Oh-My-ZSH
RUN git clone git://github.com/robbyrussell/oh-my-zsh.git /root/.oh-my-zsh
RUN cp /root/.oh-my-zsh/templates/zshrc.zsh-template /root/.zshrc
RUN chsh -s /bin/zsh


# NeoVim
RUN curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim


# Change Permissions for default keys
RUN chmod 600 /root/.ssh/id_rsa*


VOLUME [""/data"", ""/projects""]


WORKDIR /root


CMD /bin/zsh
",,2016-06-28 16:12:43,2017-02-09 20:15:17,https://github.com/nfeld9807/ubuntu
15,stupendous-man/twitter-stream-consumer,,"FROM ubuntu:14.04


MAINTAINER stupendous-man


RUN mkdir -p /data/db \
	&& apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv EA312927 \
	&& echo ""deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse"" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.2.list \
	&& apt-get update \
	&& apt-get install -y mongodb-org


EXPOSE 27017


CMD [""mongod""]
","Go
100.0%",2017-01-17 01:37:07,2017-02-15 03:09:06,https://github.com/stupendous-man/twitter-stream-consumer
16,xzdbd/dockerfiles,,"FROM golang:1.8


MAINTAINER xzdbd <xzdbd@sina.com>


VOLUME /go/bin/conf


RUN set -ex \
	&& echo ""Asia/Shanghai"" > /etc/timezone \
	&& dpkg-reconfigure -f noninteractive tzdata \
	&& apt-get update \
	&& apt-get install -y git-all \
	&& go get -u github.com/xzdbd/squeak


RUN cp -rf /go/src/github.com/xzdbd/squeak/conf /go/bin/ \
	&& cp -rf /go/src/github.com/xzdbd/squeak/static /go/bin/ \
	&& cp -rf /go/src/github.com/xzdbd/squeak/views /go/bin/


EXPOSE 8094


WORKDIR /go/bin


CMD /go/bin/squeak
","Shell
100.0%",2016-07-29 18:00:10,2017-11-07 08:12:59,https://github.com/xzdbd/dockerfiles
17,swapnalipingale/NewRepo,,"FROM tomcat:8-jre8
MAINTAINER ""Swapnali""
ADD sample.war /usr/local/tomcat/webapps/
",,2017-02-10 05:23:04,2017-02-10 05:23:04,https://github.com/swapnalipingale/NewRepo
18,liliil/mini-dev,,"# Set nginx base image
FROM nginx


# Copy custom configuration file from the current directory
COPY nginx.conf /etc/nginx/nginx.conf
","JavaScript
92.8%





Nginx
3.6%





HTML
1.9%





Other
1.7%",2017-01-09 05:42:01,2017-01-22 08:28:00,https://github.com/liliil/mini-dev
19,echeadle/CIDemo,,"FROM centos:centos6


MAINTAINER contact@btreepress.com


# Enable EPEL for Node.js
RUN rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm


# Install Node...
RUN yum install -y npm


# Copy app to /src
COPY . /src


# Install app and dependencies into /src
RUN cd /src; npm install


EXPOSE 8080


CMD cd /src && node ./app.js
","HTML
92.9%





JavaScript
7.1%",2017-02-09 01:43:38,2017-02-09 01:49:09,https://github.com/echeadle/CIDemo
20,sreedharbabu/DockerComposeDemo,,"# Set nginx base image
FROM nginx


# File Author / Maintainer
MAINTAINER Sreedhar Babu Kurapati


# Copy custom configuration file from the current directory
COPY nginx.conf /etc/nginx/nginx.conf
","JavaScript
62.2%





Nginx
37.8%",2017-02-10 09:24:25,2017-02-10 11:19:47,https://github.com/sreedharbabu/DockerComposeDemo
21,sreedharbabu/DockerComposeDemo,,"# Set the base image to Ubuntu
FROM    ubuntu:trusty


# File Author / Maintainer
MAINTAINER Sreedhar Babu Kurapati


# Install Node.js and other dependencies
RUN apt-get update && \
    apt-get -y install curl && \
    curl -sL https://deb.nodesource.com/setup | sudo bash - && \
    apt-get -y install python build-essential nodejs


# Install nodemon
RUN npm install -g nodemon


# Provides cached layer for node_modules
ADD package.json /tmp/package.json
RUN cd /tmp && npm install
RUN mkdir -p /src && cp -a /tmp/node_modules /src/


# Define working directory
WORKDIR /src
ADD . /src


# Expose port
EXPOSE  8080


# Run app using nodemon
CMD [""nodemon"", ""/src/index.js""]
","JavaScript
62.2%





Nginx
37.8%",2017-02-10 09:24:25,2017-02-10 11:19:47,https://github.com/sreedharbabu/DockerComposeDemo
22,sreedharbabu/DockerComposeDemo,,"# Set the base image to Ubuntu
FROM        ubuntu


# File Author / Maintainer
MAINTAINER Sreedhar Babu Kurapati


# Update the repository and install Redis Server
RUN         apt-get update && apt-get install -y redis-server


# Expose Redis port 6379
EXPOSE      6379


# Run Redis Server
ENTRYPOINT  [""/usr/bin/redis-server""]
","JavaScript
62.2%





Nginx
37.8%",2017-02-10 09:24:25,2017-02-10 11:19:47,https://github.com/sreedharbabu/DockerComposeDemo
23,docker-rubygem/dockerize,"Organization(name=None, id=24866894)","FROM ruby:2.4


MAINTAINER thinkbot@outlook.de


ENV VERSION=0.1.4


RUN gem install dockerize --version ${VERSION} --no-format-exec


WORKDIR /tmp


ENTRYPOINT [""dockerize""]
CMD [""--help""]
",,2017-01-15 02:54:33,2017-01-15 02:54:33,https://github.com/docker-rubygem/dockerize
24,bhavikmshah/NodeNewRelicDemo,,"FROM node:6.9
# replace this with your application's default port
EXPOSE 3000


RUN mkdir /opt/app
RUN mkdir /opt/app/NodeNewRelicDemo
WORKDIR /opt/app/NodeNewRelicDemo


COPY . /opt/app/NodeNewRelicDemo


RUN apt-get -qq update
RUN apt-get -qq -y  install curl
RUN curl -s https://download.dataloop.io/pubkey.gpg | apt-key add -


RUN apt-get install apt-transport-https ca-certificates -y
RUN echo 'deb https://download.dataloop.io/deb/ stable main' > /etc/apt/sources.list.d/dataloop.list


RUN apt-get update && apt-get install dataloop-agent -y
RUN npm install
COPY agent.yaml /etc/dataloop/agent.yaml
CMD service dataloop-agent start && npm run start
","JavaScript
91.3%





HTML
6.2%





CSS
2.5%",2017-02-02 05:39:51,2017-02-02 06:01:46,https://github.com/bhavikmshah/NodeNewRelicDemo
25,Nosykaa/energyBlockchain,,"FROM jtblin/debian-node-graphicsmagick:stretch-node-v4.4.7-gm-v1.3.24
WORKDIR /src
ADD . ./
RUN chown -R node:node /src
USER node
RUN npm install
CMD [""npm"", ""test""]
","CSS
62.5%





JavaScript
35.3%





HTML
2.2%",2017-02-06 10:43:19,2017-02-11 14:56:57,https://github.com/Nosykaa/energyBlockchain
26,GolfenGuo/maven-tomcat7,,"FROM maven:3-jdk-7


MAINTAINER Golfen Guo ""guo@tianjiancloud.com""


ENV CATALINA_HOME /usr/local/tomcat
ENV PATH $CATALINA_HOME/bin:$PATH
RUN mkdir -p ""$CATALINA_HOME"" 
ENV TOMCAT_MAJOR 7
ENV TOMCAT_VERSION 7.0.57
ENV TOMCAT_TGZ_URL https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz


# Install Tomcat
WORKDIR $CATALINA_HOME
RUN curl -SL ""$TOMCAT_TGZ_URL"" -o tomcat.tar.gz \
        && curl -SL ""$TOMCAT_TGZ_URL.asc"" -o tomcat.tar.gz.asc \
        && tar -xvf tomcat.tar.gz --strip-components=1 \
        && rm bin/*.bat \
        && rm tomcat.tar.gz*


# Prepare by downloading dependencies
WORKDIR /code
ADD pom.xml /code/pom.xml
RUN [""mvn"", ""dependency:resolve""]


# Adding source, compile and package into a WAR
ADD src /code/src
RUN [""mvn"", ""-DskipTests=true"", ""package""]
RUN [""rm"", ""-rf"", ""/usr/local/tomcat/webapps/ROOT""]
RUN [""cp"", ""/code/target/ROOT.war"", ""/usr/local/tomcat/webapps/""]


# Expose port
EXPOSE 8080


# Start Tomcat
WORKDIR $CATALINA_HOME
CMD [""catalina.sh"", ""run""]
",,2014-12-01 01:43:22,2014-12-01 01:43:22,https://github.com/GolfenGuo/maven-tomcat7
27,Guilhem30/docker-updatengine,,"FROM        phusion/baseimage:0.9.15
MAINTAINER  <guilhem.berna@gmail.com>


RUN apt-get update && apt-get -yq install apache2 libapache2-mod-wsgi python-pip \
libxml2-dev libxslt-dev python-dev libmysqlclient-dev git-core pwgen


ENV autoconf true
ENV autostart true
ENV SERVER_IP 10.1.1.127
ENV ADMIN_USERNAME admin
ENV ADMIN_MAIL admin@example.com
ENV DATABASE_NAME updatengine
ENV DATABASE_USER updatengine
ENV DATABASE_PASSWORD updatengine


RUN mkdir /var/www/UE-environment
WORKDIR /var/www/UE-environment
RUN git clone https://github.com/updatengine/updatengine-server.git


RUN pip install --upgrade distribute
RUN pip install --upgrade setuptools
RUN pip install -r updatengine-server/requirements/pip-packages.txt


RUN mkdir -p /etc/my_init.d
COPY start.sh /etc/my_init.d/setup.sh
RUN mkdir /etc/service/apache2
COPY run_apache.sh /etc/service/apache2/run


RUN cp /var/www/UE-environment/updatengine-server/requirements/apache-updatengine.conf /etc/apache2/sites-available/apache-updatengine.conf
RUN a2ensite apache-updatengine.conf


# Add my public keys
ADD pubkeys /tmp/pubkeys
RUN cat /tmp/pubkeys/*.pub >> /root/.ssh/authorized_keys && rm -rf /tmp/pubkeys/
EXPOSE 22


ENTRYPOINT [""/sbin/my_init""]
EXPOSE 1979






","Shell
100.0%",2014-12-01 13:51:49,2014-12-02 12:10:19,https://github.com/Guilhem30/docker-updatengine
28,MatsumotoHiroko/mijs_docker,,"FROM centos


MAINTAINER Matsumoto Hiroko <h.matsumoto@sint.co.jp>
",,2015-01-16 05:45:18,2015-01-16 05:45:18,https://github.com/MatsumotoHiroko/mijs_docker
29,Matvey-Kuk/DekanatDzen,,"FROM ubuntu:14.04
RUN apt-get -qq update


RUN apt-get install -y python3-dev python3-setuptools supervisor python3.4 python3-pip


EXPOSE 80
","CSS
36.9%





Python
33.9%





JavaScript
16.1%





HTML
12.5%





Shell
0.6%",2015-01-16 12:43:25,2016-11-07 23:11:54,https://github.com/Matvey-Kuk/DekanatDzen
0,ezhaar/docker-dnsmasq,,"FROM ubuntu:14.04.1


MAINTAINER Izhar ul Hassan ""ezhaar@gmail.com""


RUN apt-get update && apt-get install -y \
    dnsmasq 


COPY conf_files/dnsmasq.conf /etc/dnsmasq.conf
COPY conf_files/dnsmasq_sighup.sh /root/
COPY conf_files/initialize.sh /root/
COPY conf_files/resolv.dnsmasq.conf /etc/resolv.dnsmasq.conf
ENV TERM xterm
RUN touch /etc/hosts.localdomain
CMD [""/root/initialize.sh""]
","Shell
100.0%",2015-01-14 19:37:55,2015-01-15 11:37:26,https://github.com/ezhaar/docker-dnsmasq
1,azenk/graylog2-web,,"FROM dockerfile/java


ENV GRAYLOG2_VERSION 0.92.4


RUN curl -L ""http://packages.graylog2.org/releases/graylog2-web-interface/graylog2-web-interface-${GRAYLOG2_VERSION}.tgz"" | tar -zx -C /opt/


WORKDIR /opt/graylog2-web-interface-${GRAYLOG2_VERSION}/


RUN ln -sf /opt/graylog2-web-interface-${GRAYLOG2_VERSION}/ /opt/graylog2-web


COPY graylog2-web-interface.conf /opt/graylog2-web/conf/graylog2-web-interface.conf
COPY config_manifest /etc/config_manifest
COPY allowed_variables /etc/allowed_variables
COPY config_template_processor.sh /usr/bin/config_template_processor.sh


EXPOSE 9000


ENTRYPOINT [""/usr/bin/config_template_processor.sh""]


WORKDIR /opt/graylog2-web
CMD [""bin/graylog2-web-interface""]


","Shell
100.0%",2015-01-13 19:25:09,2015-01-23 06:40:11,https://github.com/azenk/graylog2-web
2,t86jp/webrtc-sample-textchat,,"FROM ubuntu:14.04


ENV HOME /root


ADD build /tmp/build/
VOLUME [""/var/log/nginx"", ""/var/www""]
RUN \
  sed -i 's/# \(.*multiverse$\)/\1/g' /etc/apt/sources.list && \
  apt-get update && \
  apt-get -y upgrade && \
  curl -sL https://deb.nodesource.com/setup | bash - && \
  apt-get install -y build-essential nodejs nginx && \
  rm -f /etc/nginx/conf.d/* /etc/nginx/sites-enabled/* && \
  cp /tmp/build/nginx/app.conf /etc/nginx/sites-enabled/app && \
  cp /tmp/build/entrypoint.sh /root/ && \
  chmod 755 /root/entrypoint.sh


EXPOSE 80


WORKDIR /var/www/server
ENTRYPOINT [""/root/entrypoint.sh""]
","JavaScript
87.1%





Shell
12.9%",2014-12-13 16:00:54,2014-12-15 23:32:27,https://github.com/t86jp/webrtc-sample-textchat
3,gawbul/docker-ensembl,,"# Dockerfile to build Bio-Linux 8
#
# VERSION 0.1


# use vanilla ubuntu base image
FROM ubuntu


# maintained by me
MAINTAINER Steve Moss <gawbul@gmail.com>


# update aptitude and install some required packages
RUN apt-get update && apt-get -y install build-essential cpanminus curl emacs git manpages perl perl-base perlbrew tmux vim wget


# create ensembl user
RUN useradd -r -m -U -d /home/ensembl -s /bin/bash -c ""EnsEMBL User"" -p '' ensembl
RUN usermod -a -G sudo ensembl


# turn off password requirement for sudo groups users
RUN sed -i ""s/^\%sudo\tALL=(ALL:ALL)\sALL/%sudo ALL=(ALL) NOPASSWD:ALL/"" /etc/sudoers


# change user to ensembl
USER ensembl


# set HOME environment variable
ENV HOME /home/ensembl


# change working directory
WORKDIR $HOME


# install ensembl dependencies
RUN sudo apt-get -y install mysql-client libmysqlclient-dev libssl-dev
RUN sudo cpanm DBI DBD::mysql
RUN sudo chown -R ensembl:ensembl $HOME/.cpanm


# clone git repositories
RUN mkdir -p src
WORKDIR $HOME/src
RUN git clone https://github.com/bioperl/bioperl-live.git
WORKDIR $HOME/src/bioperl-live
RUN git checkout bioperl-release-1-6-901
WORKDIR $HOME/src
RUN git clone https://github.com/Ensembl/ensembl-git-tools.git
ENV PATH $HOME/src/ensembl-git-tools/bin:$PATH
RUN git ensembl --clone api
RUN git clone https://github.com/Ensembl/ensembl-tools.git


# update bash profile
RUN echo >> $HOME/.profile && \
echo '# set ensembl perl libraries' >> $HOME/.profile && \
echo PERL5LIB=\$PERL5LIB:$HOME/src/bioperl-live >> $HOME/.profile && \
echo PERL5LIB=\$PERL5LIB:$HOME/src/ensembl/modules >> $HOME/.profile && \
echo PERL5LIB=\$PERL5LIB:$HOME/src/ensembl-compara/modules >> $HOME/.profile && \
echo PERL5LIB=\$PERL5LIB:$HOME/src/ensembl-variation/modules >> $HOME/.profile && \
echo PERL5LIB=\$PERL5LIB:$HOME/src/ensembl-funcgen/modules >> $HOME/.profile && \
echo export PERL5LIB >> $HOME/.profile && \
echo >> $HOME/.profile && \
echo '# set ensembl tools in path' >> $HOME/.profile && \
echo PATH=$HOME/src/ensembl-git-tools/bin:\$PATH && \
echo PATH=$HOME/src/ensembl-tools/scripts/assembly_converter:\$PATH >> $HOME/.profile && \
echo PATH=$HOME/src/ensembl-tools/scripts/id_history_converter:\$PATH >> $HOME/.profile && \
echo PATH=$HOME/src/ensembl-tools/scripts/region_reporter:\$PATH >> $HOME/.profile && \
echo PATH=$HOME/src/ensembl-tools/scripts/variant_effect_predictor:\$PATH >> $HOME/.profile && \
echo export PATH >> $HOME/.profile


# setup environment
ENV PERL5LIB $PERL5LIB:$HOME/src/bioperl-live:$HOME/src/ensembl/modules:$HOME/src/ensembl-compara/modules:$HOME/src/ensembl-variation/modules:$HOME/src/ensembl-funcgen/modules
ENV PATH $HOME/src/ensembl-tools/scripts/assembly_converter:$HOME/src/ensembl-tools/scripts/id_history_converter:$HOME/src/ensembl-tools/scripts/region_reporter:$HOME/src/ensembl-tools/scripts/variant_effect_predictor:$PATH


# change working directory
WORKDIR $HOME


# create script to test connection to database
RUN echo '#!/usr/bin/env perl' > ensembl_test_db_conn.pl && \
echo ""use strict; use warnings; use Bio::EnsEMBL::Registry; my \$registry = 'Bio::EnsEMBL::Registry'; \$registry->load_registry_from_db(-host => 'ensembldb.ensembl.org', -user => 'anonymous', -verbose => '1');"" >> ensembl_test_db_conn.pl
RUN chmod a+x ensembl_test_db_conn.pl
",,2014-12-16 19:31:02,2016-09-09 20:49:48,https://github.com/gawbul/docker-ensembl
4,tribou/docker-changeip-updater,,"FROM ubuntu
MAINTAINER tribou


ENV TZ America/Chicago
RUN apt-get update && apt-get install -y wget dnsutils && apt-get autoclean -y
ADD assets /usr/src/myapp
RUN chmod +x /usr/src/myapp/update-script.sh
WORKDIR /usr/src/myapp
CMD [""bash"", ""update-script.sh""]
","Shell
100.0%",2014-12-31 02:07:57,2017-05-26 21:36:13,https://github.com/tribou/docker-changeip-updater
5,manishrajkarnikar/kubernetes,,"FROM golang:1.3
RUN mkdir -p /go/src/github.com/cpuguy83
RUN mkdir -p /go/src/github.com/cpuguy83 \
    && git clone -b v1 https://github.com/cpuguy83/go-md2man.git /go/src/github.com/cpuguy83/go-md2man \
    && cd /go/src/github.com/cpuguy83/go-md2man \
    && go get -v ./...
CMD [""/go/bin/go-md2man"", ""--help""]
","Shell
100.0%",2014-12-22 22:36:43,2014-12-22 22:38:12,https://github.com/manishrajkarnikar/kubernetes
6,JerryHuang2015/BMWX,,"FROM dockerfile/nodejs


MAINTAINER Matthias Luebken, matthias@catalyst-zero.com


WORKDIR /home/mean


# Install Mean.JS Prerequisites
RUN npm install -g grunt-cli
RUN npm install -g bower


# Install Mean.JS packages
ADD package.json /home/mean/package.json
RUN npm install


# Manually trigger bower. Why doesnt this work via npm install?
ADD .bowerrc /home/mean/.bowerrc
ADD bower.json /home/mean/bower.json
RUN bower install --config.interactive=false --allow-root


# Make everything available for start
ADD . /home/mean


# currently only works for development
ENV NODE_ENV development


# Port 3000 for server
# Port 35729 for livereload
EXPOSE 3000 35729
CMD [""grunt""]
","JavaScript
80.3%





HTML
19.0%





Other
0.7%",2014-12-12 22:46:10,2017-10-01 21:04:15,https://github.com/JerryHuang2015/BMWX
7,Libresfera/oldwebsite,"Organization(name=None, id=9164814)","FROM ruby:latest
MAINTAINER Vicente Pons <simpons@gmail.com>


RUN apt-get update -qq && apt-get install -y build-essential libpq-dev nodejs
RUN adduser --disabled-password --gecos """" rails


WORKDIR /home/rails/app
ADD Gemfile /home/rails/Gemfile


RUN bundle install
ADD . /home/rails/app


","Ruby
97.0%





CSS
1.5%





JavaScript
1.5%",2014-12-18 10:31:35,2015-12-18 13:07:24,https://github.com/Libresfera/oldwebsite
8,NoumanSaleem/consul-aws-automatic,,"FROM ubuntu


RUN apt-get update
RUN apt-get install -y curl python-pip
RUN pip install awscli


ADD ./configure /opt/configure
CMD /opt/configure
",,2015-01-06 22:21:30,2015-01-06 22:21:30,https://github.com/NoumanSaleem/consul-aws-automatic
9,baseboxorg/basebox-ubuntu,,"FROM ubuntu:latest


MAINTAINER BaseBoxOrg <open@basebox.org>


# Install packages
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install git openssh-server pwgen locales


RUN mkdir -p /var/run/sshd && sed -i ""s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g"" /etc/ssh/sshd_config && sed -i ""s/UsePAM.*/UsePAM no/g"" /etc/ssh/sshd_config && sed -i ""s/PermitRootLogin.*/PermitRootLogin yes/g"" /etc/ssh/sshd_config


ADD set_root_pw.sh /set_root_pw.sh


ADD run.sh /run.sh


RUN chmod +x /*.sh


RUN dpkg-reconfigure locales && \
    locale-gen C.UTF-8 && \
    /usr/sbin/update-locale LANG=C.UTF-8


ENV LC_ALL C.UTF-8




ENV AUTHORIZED_KEYS **None**


EXPOSE 22


CMD [""/run.sh""]
","Shell
100.0%",2015-01-06 16:16:47,2015-01-06 16:20:02,https://github.com/baseboxorg/basebox-ubuntu
10,baseboxorg/basebox-ubuntu,,"FROM ubuntu:lucid
MAINTAINER Honglin Feng <hfeng@tutum.co> 


# Install packages
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install openssh-server pwgen
RUN mkdir -p /var/run/sshd && sed -i ""s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g"" /etc/ssh/sshd_config && sed -i ""s/UsePAM.*/UsePAM no/g"" /etc/ssh/sshd_config && sed -i ""s/PermitRootLogin.*/PermitRootLogin yes/g"" /etc/ssh/sshd_config


ADD set_root_pw.sh /set_root_pw.sh
ADD run.sh /run.sh
RUN chmod +x /*.sh


ENV AUTHORIZED_KEYS **None**


EXPOSE 22
CMD [""/run.sh""]
","Shell
100.0%",2015-01-06 16:16:47,2015-01-06 16:20:02,https://github.com/baseboxorg/basebox-ubuntu
11,baseboxorg/basebox-ubuntu,,"FROM ubuntu:precise
MAINTAINER Honglin Feng <hfeng@tutum.co> 


# Install packages
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install openssh-server pwgen
RUN mkdir -p /var/run/sshd && sed -i ""s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g"" /etc/ssh/sshd_config && sed -i ""s/UsePAM.*/UsePAM no/g"" /etc/ssh/sshd_config && sed -i ""s/PermitRootLogin.*/PermitRootLogin yes/g"" /etc/ssh/sshd_config


ADD set_root_pw.sh /set_root_pw.sh
ADD run.sh /run.sh
RUN chmod +x /*.sh


ENV AUTHORIZED_KEYS **None**


EXPOSE 22
CMD [""/run.sh""]
","Shell
100.0%",2015-01-06 16:16:47,2015-01-06 16:20:02,https://github.com/baseboxorg/basebox-ubuntu
12,baseboxorg/basebox-ubuntu,,"FROM ubuntu:quantal
MAINTAINER Fernando Mayo <fernando@tutum.co>


# Install packages
RUN sed -i ""s/archive.ubuntu.com/old-releases.ubuntu.com/g"" /etc/apt/sources.list
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install openssh-server pwgen
RUN mkdir -p /var/run/sshd && sed -i ""s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g"" /etc/ssh/sshd_config && sed -i ""s/UsePAM.*/UsePAM no/g"" /etc/ssh/sshd_config


ADD set_root_pw.sh /set_root_pw.sh
ADD run.sh /run.sh
RUN chmod +x /*.sh


ENV AUTHORIZED_KEYS **None**


EXPOSE 22
CMD [""/run.sh""]
","Shell
100.0%",2015-01-06 16:16:47,2015-01-06 16:20:02,https://github.com/baseboxorg/basebox-ubuntu
13,baseboxorg/basebox-ubuntu,,"FROM ubuntu:raring
MAINTAINER Fernando Mayo <fernando@tutum.co>


# Install packages
RUN sed -i ""s/archive.ubuntu.com/old-releases.ubuntu.com/g"" /etc/apt/sources.list
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install openssh-server pwgen
RUN mkdir -p /var/run/sshd && sed -i ""s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g"" /etc/ssh/sshd_config && sed -i ""s/UsePAM.*/UsePAM no/g"" /etc/ssh/sshd_config


ADD set_root_pw.sh /set_root_pw.sh
ADD run.sh /run.sh
RUN chmod +x /*.sh


ENV AUTHORIZED_KEYS **None**


EXPOSE 22
CMD [""/run.sh""]
","Shell
100.0%",2015-01-06 16:16:47,2015-01-06 16:20:02,https://github.com/baseboxorg/basebox-ubuntu
14,baseboxorg/basebox-ubuntu,,"FROM ubuntu:saucy
MAINTAINER Honglin Feng <hfeng@tutum.co> 


# Install packages
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install openssh-server pwgen
RUN mkdir -p /var/run/sshd && sed -i ""s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g"" /etc/ssh/sshd_config && sed -i ""s/UsePAM.*/UsePAM no/g"" /etc/ssh/sshd_config && sed -i ""s/PermitRootLogin.*/PermitRootLogin yes/g"" /etc/ssh/sshd_config


ADD set_root_pw.sh /set_root_pw.sh
ADD run.sh /run.sh
RUN chmod +x /*.sh


ENV AUTHORIZED_KEYS **None**


EXPOSE 22
CMD [""/run.sh""]
","Shell
100.0%",2015-01-06 16:16:47,2015-01-06 16:20:02,https://github.com/baseboxorg/basebox-ubuntu
15,baseboxorg/basebox-ubuntu,,"FROM ubuntu:trusty
MAINTAINER Honglin Feng <hfeng@tutum.co> 


# Install packages
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y install openssh-server pwgen
RUN mkdir -p /var/run/sshd && sed -i ""s/UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g"" /etc/ssh/sshd_config && sed -i ""s/UsePAM.*/UsePAM no/g"" /etc/ssh/sshd_config && sed -i ""s/PermitRootLogin.*/PermitRootLogin yes/g"" /etc/ssh/sshd_config


ADD set_root_pw.sh /set_root_pw.sh
ADD run.sh /run.sh
RUN chmod +x /*.sh


ENV AUTHORIZED_KEYS **None**


EXPOSE 22
CMD [""/run.sh""]
","Shell
100.0%",2015-01-06 16:16:47,2015-01-06 16:20:02,https://github.com/baseboxorg/basebox-ubuntu
16,ajenkul/meanapp,,"FROM dockerfile/nodejs


MAINTAINER Matthias Luebken, matthias@catalyst-zero.com


WORKDIR /home/mean


# Install Mean.JS Prerequisites
RUN npm install -g grunt-cli
RUN npm install -g bower


# Install Mean.JS packages
ADD package.json /home/mean/package.json
RUN npm install


# Manually trigger bower. Why doesnt this work via npm install?
ADD .bowerrc /home/mean/.bowerrc
ADD bower.json /home/mean/bower.json
RUN bower install --config.interactive=false --allow-root


# Make everything available for start
ADD . /home/mean


# currently only works for development
ENV NODE_ENV development


# Port 3000 for server
# Port 35729 for livereload
EXPOSE 3000 35729
CMD [""grunt""]
","JavaScript
98.8%





Other
1.2%",2015-01-07 13:33:20,2015-01-10 08:34:20,https://github.com/ajenkul/meanapp
17,zedtux/docker-postfix-dovecot-mysql,,"# Postfix + Dovecot + MySQL docker image
#
# Build based on http://oskarhane.com/setup-your-own-mail-hosting-with-linux-postfix-dovecot-and-mysql/


FROM ubuntu:14.04
MAINTAINER Guillaume Hain zedtux@zedroot.org


ENV MYSQL_USERNAME mail_admin
ENV MYSQL_PASSWORD ""i3fY9o0Pq2@zD""
ENV MYSQL_DBNAME   mail


RUN apt-get update && \
  apt-get upgrade -y && \
  apt-get install -y postfix \
    postfix-mysql \
    mysql-client \
    mysql-server \
    dovecot-common \
    dovecot-imapd \
    libsasl2-2 \
    libsasl2-modules \
    libsasl2-modules-sql \
    sasl2-bin \
    libpam-mysql \
    openssl \
    mailutils \
    supervisor


ADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf


RUN service mysql start && \
  mysql -u root -e 'CREATE DATABASE '$MYSQL_DBNAME'; \
    USE '$MYSQL_DBNAME'; \
    GRANT SELECT, INSERT, UPDATE, DELETE ON '$MYSQL_DBNAME'.* TO '$MYSQL_USERNAME'@'localhost' IDENTIFIED BY '$MYSQL_PASSWORD'; \
    GRANT SELECT, INSERT, UPDATE, DELETE ON '$MYSQL_DBNAME'.* TO '$MYSQL_USERNAME'@'localhost.localdomain' IDENTIFIED BY '$MYSQL_PASSWORD'; \
    FLUSH PRIVILEGES; \
    CREATE TABLE domains (DOMAIN VARCHAR(50) NOT NULL, PRIMARY KEY (DOMAIN)); \
    CREATE TABLE forwardings (SOURCE VARCHAR(80) NOT NULL, destination TEXT NOT NULL, PRIMARY KEY (SOURCE)); \
    CREATE TABLE users (email VARCHAR(80) NOT NULL, password VARCHAR(20) NOT NULL, PRIMARY KEY (email)); \
    CREATE TABLE transport (DOMAIN VARCHAR(128) NOT NULL, transport VARCHAR(128) NOT NULL, UNIQUE KEY DOMAIN (DOMAIN));'


ADD cf_files/mysql-virtual_domains.cf /etc/postfix/
ADD cf_files/mysql-virtual_forwardings.cf /etc/postfix/
ADD cf_files/mysql-virtual_mailboxes.cf /etc/postfix/
ADD cf_files/mysql-virtual_email2email.cf /etc/postfix/


RUN chmod o= /etc/postfix/mysql-virtual_*.cf && \
  chgrp postfix /etc/postfix/mysql-virtual_*.cf && \
  groupadd -g 5000 vmail && \
  useradd -g vmail -u 5000 vmail -d /home/vmail -m


RUN postconf -e 'myhostname = server.example.com' && \
  postconf -e 'mydestination = server.example.com, localhost, localhost.localdomain' && \
  postconf -e 'mynetworks = 127.0.0.0/8' && \
  postconf -e 'message_size_limit = 30720000' && \
  postconf -e 'virtual_alias_domains =' && \
  postconf -e 'virtual_alias_maps = proxy:mysql:/etc/postfix/mysql-virtual_forwardings.cf, mysql:/etc/postfix/mysql-virtual_email2email.cf' && \
  postconf -e 'virtual_mailbox_domains = proxy:mysql:/etc/postfix/mysql-virtual_domains.cf' && \
  postconf -e 'virtual_mailbox_maps = proxy:mysql:/etc/postfix/mysql-virtual_mailboxes.cf' && \
  postconf -e 'virtual_mailbox_base = /home/vmail' && \
  postconf -e 'virtual_uid_maps = static:5000' && \
  postconf -e 'virtual_gid_maps = static:5000' && \
  postconf -e 'smtpd_sasl_auth_enable = yes' && \
  postconf -e 'broken_sasl_auth_clients = yes' && \
  postconf -e 'smtpd_sasl_authenticated_header = yes' && \
  postconf -e 'smtpd_recipient_restrictions = permit_mynetworks, permit_sasl_authenticated, reject_unauth_destination' && \
  postconf -e 'smtpd_use_tls = yes' && \
  postconf -e 'smtpd_tls_cert_file = /etc/postfix/smtpd.cert' && \
  postconf -e 'smtpd_tls_key_file = /etc/postfix/smtpd.key' && \
  postconf -e 'virtual_create_maildirsize = yes' && \
  postconf -e 'virtual_maildir_extended = yes' && \
  postconf -e 'proxy_read_maps = $local_recipient_maps $mydestination $virtual_alias_maps $virtual_alias_domains $virtual_mailbox_maps $virtual_mailbox_domains $relay_recipient_maps $relay_domains $canonical_maps $sender_canonical_maps $recipient_canonical_maps $relocated_maps $transport_maps $mynetworks $virtual_mailbox_limit_maps' && \
  postconf -e virtual_transport=dovecot && \
  postconf -e dovecot_destination_recipient_limit=1


WORKDIR /etc/postfix
RUN openssl req -new -outform PEM -out smtpd.cert -newkey rsa:2048 -nodes \
  -keyout smtpd.key -keyform PEM -days 365 -x509 \
  -subj ""/C=LU/ST=Luxembourg/L=Luxembourg/O=ZedR00t.0rg/OU=IT Department/CN=example.com""
RUN chmod o= /etc/postfix/smtpd.key


RUN mkdir -p /var/spool/postfix/var/run/saslauthd
RUN cp -a /etc/default/saslauthd /etc/default/saslauthd.bak


RUN sed -i 's/START=no/START=yes/' /etc/default/saslauthd
RUN sed -i 's#OPTIONS="".*""#OPTIONS=""-c -m /var/spool/postfix/var/run/saslauthd -r""#' /etc/default/saslauthd


ADD pam.d/smtp /etc/pam.d/
ADD sasl/smtpd.conf /etc/postfix/sasl/


RUN chmod o= /etc/pam.d/smtp && \
  chmod o= /etc/postfix/sasl/smtpd.conf && \
  adduser postfix sasl


RUN echo ""dovecot   unix  -       n       n       -       -       pipe \
    flags=DRhu user=vmail:vmail argv=/usr/lib/dovecot/deliver -d ${recipient}"" >> /etc/postfix/master.cf


ADD dovecot/dovecot.conf /etc/dovecot/


RUN sed -i 's/#driver =/driver = mysql/' /etc/dovecot/dovecot-sql.conf.ext
RUN sed -i 's/#connect =/connect = host=127.0.0.1 dbname='$MYSQL_DBNAME' user='$MYSQL_USERNAME' password='$MYSQL_PASSWORD'/' /etc/dovecot/dovecot-sql.conf.ext
RUN sed -i 's/#default_pass_scheme = MD5/default_pass_scheme = CRYPT/' /etc/dovecot/dovecot-sql.conf.ext
RUN sed -i 's/#password_query = \\/password_query = SELECT email as user, password FROM users WHERE email='%u';/' /etc/dovecot/dovecot-sql.conf.ext


RUN chgrp vmail /etc/dovecot/dovecot.conf && \
  chmod g+r /etc/dovecot/dovecot.conf


RUN service mysql start && \
  mysql -u root -e ""USE mail; \
    INSERT INTO domains (domain) VALUES ('example.com'); \
    INSERT INTO users (email, password) VALUES ('mynewmail@example.com', ENCRYPT('password'));""


EXPOSE 25
EXPOSE 143
EXPOSE 993


CMD [""/usr/bin/supervisord""]
","Shell
100.0%",2014-09-21 19:44:02,2017-11-04 09:14:59,https://github.com/zedtux/docker-postfix-dovecot-mysql
18,jdelacasa/docker_zmap,,"FROM ubuntu:12.04
MAINTAINER Jose Miguel de la Casa <nacicansao@gmail.com>


RUN apt-get update
RUN apt-get -y install git gcc make libpcap-dev build-essential cmake libgmp3-dev gengetopt libpcap-dev flex byacc
RUN mkdir /home/workspace
RUN cd /home/workspace/ ; git clone https://github.com/zmap/zmap.git
RUN cd /home/workspace/zmap ; cmake ./; make; make install




","Shell
100.0%",2014-09-27 10:55:09,2014-09-27 10:56:11,https://github.com/jdelacasa/docker_zmap
19,cbkiyanda/cspl,,"



from ubuntu:14.04.1


maintainer Brian Larsen <balarsen@lanl.gov>


run apt-get update
run apt-get upgrade -y


run apt-get install -y build-essential
run apt-get install -y cmake
run apt-get install -y git
#run apt-get install -y doxygen
run apt-get install -y valgrind 


WORKDIR /cspl
run git clone https://github.com/cbkiyanda/cspl.git
run cd cspl


run [""cmake"", ""cspl"", ""-DBUILD_SHARED_LIBS=ON"", ""-DBUILD_TESTS=ON"", ""-DBUILD_EXAMPLES=ON""]
run make -j2
run make install


#entrypoint [ ""ctest"" ]
CMD [ ""ctest"" ]


","C
91.9%





C++
6.5%





Python
1.1%





Shell
0.5%",2014-09-26 16:52:23,2014-10-22 17:42:14,https://github.com/cbkiyanda/cspl
20,snapforbeginners/basic,"Organization(name=None, id=10145765)","FROM haskell:7.10


RUN apt-get update


RUN cabal update
RUN cabal install snap


# Add .ghci file for interpreter imports
ADD ./.ghci /.ghci


# Add Application Code
ADD ./Site.hs /opt/server/Site.hs


# run application 
CMD [""ghci"", ""/opt/server/Site.hs""]
","Haskell
100.0%",2014-12-10 19:03:44,2015-04-18 06:29:50,https://github.com/snapforbeginners/basic
21,navy-project/commodore,"Organization(name=None, id=8312779)","FROM ruby:2.1


RUN gem install thor
RUN gem install etcd


RUN apt-get update
RUN apt-get -y install apt-transport-https
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9
RUN sh -c ""echo deb https://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list""
RUN apt-get update
RUN apt-get -y install lxc-docker-1.0.0


RUN mkdir /var/dev
WORKDIR /var/dev


ADD Gemfile /var/dev/Gemfile
ADD Gemfile.lock /var/dev/Gemfile.lock


RUN gem install navyrb


ADD . /var/dev/


RUN bundle install




CMD [""bundle"", ""exec"", ""bin/commodore""]
","Ruby
100.0%",2014-12-02 13:53:49,2015-01-21 16:04:05,https://github.com/navy-project/commodore
22,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/3.0.1


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
23,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/3.0.1


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
24,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.0.8.1


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
25,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.0.8


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
26,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.1.0


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
27,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.2.0


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
28,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.2.1


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
29,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.3.1


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
0,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.4.0


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
1,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.5.1


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
2,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.5.2


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
3,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.6.0


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
4,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.6.1


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
5,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.6.2


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
6,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/2.6.3


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
7,StudioEtrange/docker-couchpotato,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>


# COUCHPOTATO install -------------
ENV ITEM_VERSION build/3.0.0


WORKDIR /opt/couchpotato
RUN curl -k -SL ""https://github.com/RuudBurger/CouchPotatoServer/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/couchpotato --strip-components=1


# SUPERVISOR -------------
COPY supervisord-couchpotato.conf /etc/supervisor/conf.d/supervisord-couchpotato.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# couchpotato http port
EXPOSE 5050


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-04 03:50:13,2016-02-02 01:19:01,https://github.com/StudioEtrange/docker-couchpotato
8,StudioEtrange/docker-sickbeard,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>




# DEBIAN packages : SICKBEARD dependencies install ----------
RUN apt-get update \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
						python-cheetah \
	&& rm -rf /var/lib/apt/lists/*
 


# SICKBEARD install -------------
ENV ITEM_VERSION build-507


WORKDIR /opt/sickbeard


RUN curl -k -SL ""https://github.com/midgetspy/Sick-Beard/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/sickbeard --strip-components=1




# SUPERVISOR -------------
COPY supervisord-sickbeard.conf /etc/supervisor/conf.d/supervisord-sickbeard.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# sickbeard http port
EXPOSE 8081


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-03 02:07:21,2016-02-02 01:20:51,https://github.com/StudioEtrange/docker-sickbeard
9,StudioEtrange/docker-sickbeard,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>




# DEBIAN packages : SICKBEARD dependencies install ----------
RUN apt-get update \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
						python-cheetah \
	&& rm -rf /var/lib/apt/lists/*
 


# SICKBEARD install -------------
ENV ITEM_VERSION build-507


WORKDIR /opt/sickbeard


RUN curl -k -SL ""https://github.com/midgetspy/Sick-Beard/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/sickbeard --strip-components=1




# SUPERVISOR -------------
COPY supervisord-sickbeard.conf /etc/supervisor/conf.d/supervisord-sickbeard.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# sickbeard http port
EXPOSE 8081


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-03 02:07:21,2016-02-02 01:20:51,https://github.com/StudioEtrange/docker-sickbeard
10,StudioEtrange/docker-sickbeard,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>




# DEBIAN packages : SICKBEARD dependencies install ----------
RUN apt-get update \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
						python-cheetah \
	&& rm -rf /var/lib/apt/lists/*
 


# SICKBEARD install -------------
ENV ITEM_VERSION build-504


WORKDIR /opt/sickbeard


RUN curl -k -SL ""https://github.com/midgetspy/Sick-Beard/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/sickbeard --strip-components=1




# SUPERVISOR -------------
COPY supervisord-sickbeard.conf /etc/supervisor/conf.d/supervisord-sickbeard.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# sickbeard http port
EXPOSE 8081


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-03 02:07:21,2016-02-02 01:20:51,https://github.com/StudioEtrange/docker-sickbeard
11,StudioEtrange/docker-sickbeard,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>




# DEBIAN packages : SICKBEARD dependencies install ----------
RUN apt-get update \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
						python-cheetah \
	&& rm -rf /var/lib/apt/lists/*
 


# SICKBEARD install -------------
ENV ITEM_VERSION build-505


WORKDIR /opt/sickbeard


RUN curl -k -SL ""https://github.com/midgetspy/Sick-Beard/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/sickbeard --strip-components=1




# SUPERVISOR -------------
COPY supervisord-sickbeard.conf /etc/supervisor/conf.d/supervisord-sickbeard.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# sickbeard http port
EXPOSE 8081


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-03 02:07:21,2016-02-02 01:20:51,https://github.com/StudioEtrange/docker-sickbeard
12,StudioEtrange/docker-sickbeard,,"FROM studioetrange/docker-debian:wheezy
MAINTAINER StudioEtrange <nomorgan@gmail.com>




# DEBIAN packages : SICKBEARD dependencies install ----------
RUN apt-get update \
	&& DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
						python-cheetah \
	&& rm -rf /var/lib/apt/lists/*
 


# SICKBEARD install -------------
ENV ITEM_VERSION build-506


WORKDIR /opt/sickbeard


RUN curl -k -SL ""https://github.com/midgetspy/Sick-Beard/archive/$ITEM_VERSION.tar.gz"" \
	| tar -xzf - -C /opt/sickbeard --strip-components=1




# SUPERVISOR -------------
COPY supervisord-sickbeard.conf /etc/supervisor/conf.d/supervisord-sickbeard.conf


# DOCKER -------------
VOLUME /data


# Supervisord web interface -------
EXPOSE 9999
# sickbeard http port
EXPOSE 8081


# run command by default
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf"", ""-n""]
","Shell
100.0%",2014-12-03 02:07:21,2016-02-02 01:20:51,https://github.com/StudioEtrange/docker-sickbeard
13,niels-s/docker-skicka,,"FROM golang:1.3.3


RUN go get github.com/google/skicka && go build github.com/google/skicka


ADD skicka.config /root/.skicka.config


# Add script to replace placeholders in skicka file with environment vars!
",,2015-01-04 16:03:53,2015-10-15 03:03:44,https://github.com/niels-s/docker-skicka
14,takumakanari/python-docker,,"FROM tutum/centos:centos6
MAINTAINER Takuma kanari <chemtrails.t@gmail.com>


RUN yum update -y && yum install -y python-devel gcc-c++ make wget tar sqlite-devel readline-devel zlib-devel ncurses-devel gdbm-devel openssl-devel bzip2-devel tk-devel db4-devel && yum clean all


RUN rm -rf Python-2.7 && wget -O - https://www.python.org/ftp/python/2.7/Python-2.7.tgz | tar zxf - && cd Python-2.7 && ./configure --enable-ipv6 --with-threads && make && make install && cd ../ && rm -rf Python-2.7


ADD python.conf /etc/ld.so.conf.d/python.conf
RUN ldconfig


ADD sitecustomize.py /usr/local/lib/python2.7/site-packages/sitecustomize.py
ADD distribute_setup.py /distribute_setup.py


RUN python /distribute_setup.py
RUN easy_install pip


","Python
100.0%",2014-12-28 02:09:31,2014-12-31 02:44:00,https://github.com/takumakanari/python-docker
15,Mixpo/docker-mysql-client,"Organization(name=None, id=415069)","

FROM ubuntu:14.04


MAINTAINER Jared Markell (jaredm4@gmail.com)


# Set the locale
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8


ENV HOME /root
ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update\
    && apt-get -y install mysql-client-5.5\
    && apt-get clean\
    && rm -rf /var/lib/apt/lists/*


ENTRYPOINT [""/usr/bin/mysql""]
",,2015-01-22 19:18:46,2016-02-29 13:48:33,https://github.com/Mixpo/docker-mysql-client
16,attm2x/node-red-m2x,"Organization(name=None, id=5272295)","FROM node:4.2


RUN npm install -g node-red


WORKDIR ""/root/.node-red""


ADD [""package.json"", ""/root/.node-red/""]


RUN npm install


VOLUME /root/.node-red/node_modules/node-red-m2x/


EXPOSE 1880


ENTRYPOINT [""/usr/local/bin/node-red""]
","JavaScript
88.4%





HTML
11.0%





Makefile
0.6%",2015-01-28 17:59:21,2017-11-28 19:26:26,https://github.com/attm2x/node-red-m2x
17,web-education/docker-java,"Organization(name=None, id=6348016)","FROM debian:wheezy


MAINTAINER Damien BOISSIN, damien.boissin@web-education.net


# Install aptitude.
RUN \
  sed -i 's/main/main contrib/' /etc/apt/sources.list && \
  apt-get update && \
  apt-get install apt-utils -y


# Install Java.
RUN \
  echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \
  echo ""deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" | tee /etc/apt/sources.list.d/webupd8team-java.list && \
  echo ""deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" | tee -a /etc/apt/sources.list.d/webupd8team-java.list && \
  apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 && \
  apt-get update && \
  apt-get install -y oracle-java7-installer oracle-java7-set-default && \
  apt-get clean && \
  apt-get autoclean && \
  rm -rf /var/lib/apt/lists/* && \
  rm -rf /var/cache/oracle-jdk7-installer


# Define working directory.
WORKDIR /data


# Define commonly used JAVA_HOME variable
ENV JAVA_HOME /usr/lib/jvm/java-7-oracle


# Define default command.
CMD [""/bin/bash""]
",,2015-01-28 10:29:12,2015-01-28 10:29:12,https://github.com/web-education/docker-java
18,jiasir/docker-fetcher,,"FROM ubuntu:14.04
MAINTAINER Taio Jia <jiasir@icloud.com>
ENV REFRESHED_AT 2015-01-26
RUN apt-get -yqq update
RUN apt-get -yqq install wget
VOLUME [ ""/var/lib/tomcat7/webapps/"" ]
WORKDIR /var/lib/tomcat7/webapps/
ENTRYPOINT [ ""wget"" ]
CMD [ ""-?"" ]
",,2015-01-26 16:05:30,2015-03-25 04:58:20,https://github.com/jiasir/docker-fetcher
19,siomiz/tutum-agent,,"FROM tutum/ubuntu:trusty


MAINTAINER Tomohisa Kusano <siomiz@gmail.com>


RUN apt-get update \
	&& DEBIAN_FRONTEND=noninteractive \
	apt-get install -y \
	apt-transport-https \
	cgroup-bin \
	curl \
	linux-image-generic \
	supervisor


COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf


COPY cgroupfs_mount.sh /cgroupfs_mount.sh
RUN chmod +x /cgroupfs_mount.sh


COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh


COPY cmd.sh /cmd.sh
RUN chmod +x /cmd.sh


VOLUME [""/var/lib/docker""]


ENTRYPOINT [""/entrypoint.sh""]


# TODO: serve linked web service containers via reverse proxy
EXPOSE 22 80 2375


CMD [""/cmd.sh""]
","Shell
100.0%",2014-12-09 23:11:22,2014-12-10 00:40:05,https://github.com/siomiz/tutum-agent
20,philliprower/docker-ubuntu-utils,,"FROM ubuntu:14.04.1
MAINTAINER Phillip Rower <philliprower@gmail.com>
RUN apt-get update \
	&& apt-get install -y --no-install-recommends subversion dnsutils git
",,2014-12-09 23:23:43,2014-12-09 23:23:43,https://github.com/philliprower/docker-ubuntu-utils
21,artschwagerb/nginx-docker,,"FROM ubuntu
MAINTAINER Brian Artschwager brian@artschwager.com


RUN apt-get update
#RUN apt-get -y upgrade
 
RUN apt-get install -y nginx git


# create/modify files
RUN mkdir /app
RUN mkdir /app/logs
RUN touch /app/logs/nginx-access.log
WORKDIR /app


# code repository
CMD git clone https://github.com/artschwagerb/nginx-docker.git /app


# copy configuration files
RUN echo ""\ndaemon off;"" >> /etc/nginx/nginx.conf
CMD cp /app/nginx/. /etc/nginx/sites-enabled/


# expose HTTP
EXPOSE 80


# Run
CMD /usr/sbin/nginx -c /etc/nginx/nginx.conf
",,2014-12-10 15:50:07,2014-12-10 15:50:07,https://github.com/artschwagerb/nginx-docker
22,tubesandlube/blimp,"Organization(name=None, id=5672630)","FROM docker-dev


#FROM ubuntu:latest
MAINTAINER George Lewis <schvin@schvin.net>


# XXX incomplete


ENV REFRESHED_AT 2014-11-01


RUN apt-get update -y && apt-get install -y libjson-perl perl 


RUN curl -sSL https://get.docker.com/ubuntu/ | sh


#ADD dockerfile
#volume of local to get ~/.docker


RUN mkdir /blimp
RUN cd /blimp && git clone https://github.com/bfirsh/docker.git
RUN cd /blimp/docker && git checkout host-management
#RUN mv /go/src/github.com/docker/docker/ /go/src/github.com/docker/docker.old/
#RUN mv /blimp/docker/ /go/src/github.com/docker/
#RUN hack/make.sh


","Perl
99.9%





HTML
0.1%",2014-10-30 19:19:21,2017-10-13 06:48:40,https://github.com/tubesandlube/blimp
23,tubesandlube/blimp,"Organization(name=None, id=5672630)","FROM ubuntu:14.04.1
MAINTAINER defermat <defermat@gmail.com>


RUN apt-get -y update && \
    apt-get -y install g++ \
                       make \
                       wget


RUN wget http://nginx.org/download/nginx-1.4.4.tar.gz
RUN wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.34.tar.gz
RUN wget http://zlib.net/zlib-1.2.8.tar.gz
RUN tar -zxvf nginx-1.4.4.tar.gz
RUN tar -zxvf pcre-8.34.tar.gz
RUN tar -zxvf zlib-1.2.8.tar.gz
WORKDIR nginx-1.4.4
RUN ./configure --with-pcre=../pcre-8.34 --with-zlib=../zlib-1.2.8
RUN make && make install


RUN echo 'daemon off;' >> /usr/local/nginx/conf/nginx.conf
ADD index.html /usr/local/nginx/html/index.html


EXPOSE 80
CMD [""/usr/local/nginx/sbin/nginx""]
","Perl
99.9%





HTML
0.1%",2014-10-30 19:19:21,2017-10-13 06:48:40,https://github.com/tubesandlube/blimp
24,tubesandlube/blimp,"Organization(name=None, id=5672630)","FROM ubuntu:14.04.1
MAINTAINER defermat <defermat@gmail.com>


RUN apt-get -y update && \
    apt-get -y install wget


RUN wget http://repo.varnish-cache.org/debian/GPG-key.txt
RUN apt-key add GPG-key.txt
RUN echo ""deb http://repo.varnish-cache.org/ubuntu/ precise varnish-3.0"" | sudo tee -a /etc/apt/sources.list


RUN apt-get -y update && \
    apt-get -y install varnish
","Perl
99.9%





HTML
0.1%",2014-10-30 19:19:21,2017-10-13 06:48:40,https://github.com/tubesandlube/blimp
25,lazywei/cm_docker,,"FROM ubuntu:14.10
MAINTAINER Bert Chang ""https://github.com/lazywei""


# We use bash
RUN rm /bin/sh && ln -s /bin/bash /bin/sh


RUN apt-get update
RUN apt-get install -y git curl wget zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties autoconf ruby bison


RUN git clone https://github.com/sstephenson/rbenv.git /root/.rbenv
RUN git clone https://github.com/sstephenson/ruby-build.git /root/.rbenv/plugins/ruby-build
RUN /root/.rbenv/plugins/ruby-build/install.sh
ENV PATH /root/.rbenv/bin:$PATH
RUN echo 'eval ""$(rbenv init -)""' >> /etc/profile.d/rbenv.sh # or /etc/profile
RUN echo 'eval ""$(rbenv init -)""' >> .bashrc


ENV CONFIGURE_OPTS --disable-install-doc


RUN echo 'gem: --no-rdoc --no-ri' >> /.gemrc


# Prepare source folders


RUN mkdir -p /root/src


# Install postgresql tools


# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8


# Add PostgreSQL's repository. It contains the most recent stable release
#     of PostgreSQL, ``9.3``.
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y python-software-properties software-properties-common postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3 postgresql-server-dev-9.3 libpq-dev
","Shell
100.0%",2014-10-17 09:41:23,2014-10-17 09:41:37,https://github.com/lazywei/cm_docker
26,lazywei/cm_docker,,"FROM lazywei/cm_base:latest
MAINTAINER Bert Chang ""https://github.com/lazywei""


# Workaround: https://github.com/docker/docker/issues/783#issuecomment-56013588


RUN mkdir /etc/ssl/private-copy; mv /etc/ssl/private/* /etc/ssl/private-copy/; rm -r /etc/ssl/private; mv /etc/ssl/private-copy /etc/ssl/private; chmod -R 0700 /etc/ssl/private; chown -R postgres /etc/ssl/private


# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres


# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER codementor WITH SUPERUSER PASSWORD 'codementor';"" &&\
    createdb -O codementor codementor


# Adjust PostgreSQL configuration so that remote connections to the
# database are possible.
RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf


# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


# Expose the PostgreSQL port
EXPOSE 5432


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME  [""/etc/postgresql"", ""/var/log/postgresql"", ""/var/lib/postgresql"", ""/pg_data""]


# Set the default command to run when starting the container
CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/pg_data"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","Shell
100.0%",2014-10-17 09:41:23,2014-10-17 09:41:37,https://github.com/lazywei/cm_docker
27,lazywei/cm_docker,,"FROM lazywei/cm_base:latest
MAINTAINER Bert Chang ""https://github.com/lazywei""


RUN apt-get install -y nodejs npm
RUN apt-get install -y memcached
RUN apt-get install -y ruby-dev libqtwebkit-dev


RUN rbenv install 2.1.2 &&\
        rbenv global 2.1.2


ENV GEM_HOME /ruby_gems/2.1


VOLUME [""/root/src/codementor""]


ENTRYPOINT memcached -u root -d && bash
","Shell
100.0%",2014-10-17 09:41:23,2014-10-17 09:41:37,https://github.com/lazywei/cm_docker
28,jojow/clartigr,,"FROM node:0.10


RUN apt-get -y update && apt-get -y install sudo 


RUN npm install forever -g


ADD . /impl/
WORKDIR /impl
RUN npm run prepare-runtime




EXPOSE 3000




#CMD npm start
CMD forever -c ""npm start"" -l ./forever.log -o ./out.log -e ./err.log .
","JavaScript
91.3%





CSS
6.2%





Ruby
2.5%",2014-12-08 17:02:49,2015-02-09 20:47:54,https://github.com/jojow/clartigr
29,rverton/golang-webkit,,"FROM ubuntu


# Install go deps + xvfb (x session)
RUN apt-get update -y && apt-get install --no-install-recommends -y -q \
	curl \
	build-essential \
	ca-certificates \
	git \
	mercurial \
	bzr \
	dbus \
	xvfb


# Download and install go
RUN mkdir /goroot && curl https://storage.googleapis.com/golang/go1.3.1.linux-amd64.tar.gz | tar xvzf - -C /goroot --strip-components=1
RUN mkdir /gopath


ENV GOROOT /goroot
ENV GOPATH /gopath
ENV PATH $PATH:$GOROOT/bin:$GOPATH/bin


# Install libwebkit, gtk, and gotk3
RUN apt-get update -y && apt-get install --no-install-recommends -y -q libwebkit2gtk-3.0-dev libgtk-3-dev libcairo2-dev libglib2.0-dev
RUN go get -u -tags gtk_3_10 github.com/sourcegraph/webloop/...


COPY ./init.sh /opt/init.sh
RUN chmod +x /opt/init.sh


ONBUILD WORKDIR /gopath/src/app
ONBUILD ADD . /gopath/src/app/
ONBUILD RUN go get app


ONBUILD CMD [""/opt/init.sh""]




","Shell
100.0%",2014-12-07 16:51:01,2017-05-24 20:22:49,https://github.com/rverton/golang-webkit
0,umurkontaci/docker-plex-server,,"FROM ubuntu:14.04


RUN apt-get update -qq 


RUN DEBIAN_FRONTEND=noninteractive apt-get -qq -y install curl


ADD https://plex.tv/downloads/latest/1?channel=8&build=linux-ubuntu-x86_64&distro=ubuntu&X-Plex-Token= /var/plex.deb


RUN DEBIAN_FRONTEND=noninteractive dpkg -i /var/plex.deb 2>/dev/null || true


RUN DEBIAN_FRONTEND=noninteractive apt-get install -f -qq -y


RUN DEBIAN_FRONTEND=noninteractive apt-get install -qq -y simpleproxy


COPY start.sh /start.sh


EXPOSE 32400 50000 
CMD [""/bin/sh"", ""start.sh""]


","Shell
100.0%",2014-11-29 01:57:19,2015-04-23 16:45:34,https://github.com/umurkontaci/docker-plex-server
1,x684867/ubuntuCowboy,,"# Docker Container for ubuntuElixir
# (c) 2014 EdgeCase, Inc.  sam@edgecase.io
# 
FROM x684867/ubuntucore14.04
MAINTAINER Sam Caldwell <mail@samcaldwell.net>


ENV DEBIAN_FRONTEND noninteractive


RUN \
   URL=http://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb && \
   echo ""URL: $URL"" && \
   wget $URL && \
   dpkg -i erlang-solutions_1.0_all.deb && \
   echo ""erlang-solutions installed.""


RUN apt-get update --fix-missing -y && \
    apt-get install erlang-base \
                    erlang-dev \
                    build-essential \
                    git-core -y






RUN \
   cd /opt/ && \
   mkdir -p /opt/src && \
   git clone https://github.com/clutchanalytics/cowboy && \
   cd cowboy && \
   make clean && \
   make all








CMD [""/bin/bash""]
","Shell
100.0%",2014-11-17 00:57:38,2014-11-17 00:57:49,https://github.com/x684867/ubuntuCowboy
2,iamfat/dockerfile-selenium-phantomjs,,"FROM debian:7.6
MAINTAINER jia.huang@geneegroup.com


ENV DEBIAN_FRONTEND noninteractive


# Install cURL
RUN apt-get update && apt-get install -y curl apt-utils


# Install NodeJS
RUN (curl -sL https://deb.nodesource.com/setup | bash -) && \
    apt-get install -y nodejs && npm install -g phantomjs


ENV WEBDRIVER 172.17.42.1:5555
ENV HUB http://172.17.42.1:4444


EXPOSE 5555


CMD phantomjs --webdriver=$WEBDRIVER --webdriver-selenium-grid-hub=$HUB
","Shell
100.0%",2014-11-19 09:46:02,2014-11-19 09:47:33,https://github.com/iamfat/dockerfile-selenium-phantomjs
3,amosov-f/hypernavi,,"FROM java:8-jre
EXPOSE 80
ADD server/target/hypernavi-server-jar-with-dependencies.jar /root/hypernavi-server-jar-with-dependencies.jar
ENTRYPOINT [""java"", ""-jar"", ""-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"", ""-jar"", ""/root/hypernavi-server-jar-with-dependencies.jar"", ""-port"", ""80"", ""-cfg"", ""classpath:/properties/common.properties"", ""classpath:/properties/prod.properties"", ""-logcfg"", ""classpath:/logging/log4j-dev.xml"", ""-logdir"", ""/root/log"", ""-bot""]
# sudo docker exec -i -t hypernavi bash
","Java
81.9%





HTML
6.3%





FreeMarker
6.1%





JavaScript
3.7%





CSS
1.2%





Shell
0.8%",2014-11-23 22:21:55,2017-10-03 09:05:07,https://github.com/amosov-f/hypernavi
4,rushcut/docker-jira,,"FROM ugoarangino/atlassian:latest
MAINTAINER Ugo Arangino <dev@ugoarangino.de>


RUN wget http://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-6.3.4-x64.bin
RUN chmod +x atlassian-jira-6.3.4-x64.bin
RUN echo -e ""\n \n \n \n \n \n \n \n"" | sudo ./atlassian-jira-6.3.4-x64.bin
RUN rm atlassian-jira-6.3.4-x64.bin


WORKDIR /opt/atlassian/jira/
VOLUME /opt/atlassian/jira/
VOLUME /var/atlassian/application-data/jira/
EXPOSE 8080
USER jira
CMD /opt/atlassian/jira/bin/start-jira.sh -fg
","Shell
100.0%",2014-11-27 08:15:33,2016-06-03 12:43:44,https://github.com/rushcut/docker-jira
5,yaelleUWS/engage_platform,,"FROM williamyeh/ansible:alpine3
WORKDIR /opt/platform
ADD . /opt/platform
",,2014-11-10 12:43:47,2014-11-10 12:43:47,https://github.com/yaelleUWS/engage_platform
6,eloycoto/docker-polo,,"FROM golang
MAINTAINER Eloy Coto <eloy.coto@gmail.com>


RUN go get github.com/agonzalezro/polo
RUN mkdir /source/
RUN mkdir /web/


ADD config.json .
ADD source /source/


WORKDIR /


VOLUME [""/web/""]


CMD [""polo"", ""/source/"", ""/web/""]
","Shell
100.0%",2014-11-10 19:05:58,2014-11-10 19:07:03,https://github.com/eloycoto/docker-polo
7,bortels/rubydev,,"# See https://blog.codeship.com/build-minimal-docker-container-ruby-apps/
FROM alpine:3.3
MAINTAINER Thomas.Bortels@digitalinsight.com
ENV BUILD_PACKAGES bash curl-dev ruby-dev build-base libxml2-dev
ENV RUBY_PACKAGES ruby ruby-io-console ruby-bundler ruby-nokogiri
ENV UTIL_PACKAGES ca-certificates wget git vim redis jq grep rsync openssh
RUN apk update && \
    apk upgrade && \
    apk add --update --repository http://dl-cdn.alpinelinux.org/alpine/edge/community/ tini && \
    apk add $BUILD_PACKAGES && \
    apk add $RUBY_PACKAGES && \
    apk add $UTIL_PACKAGES && \
    rm -rf /var/cache/apk/*
RUN mkdir /app
ENV HOME /app
WORKDIR /app
COPY Gemfile /app/
COPY Gemfile.lock /app/
RUN bundle config build.nokogiri --use-system-libraries
RUN bundle install
CMD bash
","Ruby
95.4%





Shell
4.6%",2014-11-05 17:58:00,2016-05-19 21:07:39,https://github.com/bortels/rubydev
8,Cinqcent5/docker-archlinux-pentest-lxde,,"FROM base/archlinux:latest
MAINTAINER UserTaken <elysian@live.com>
ENV SHELL /bin/bash
ENV HOME /root
WORKDIR /root
RUN curl -O http://blackarch.org/keyring/blackarch-keyring.pkg.tar.xz && \
	curl -O http://blackarch.org/keyring/blackarch-keyring.pkg.tar.xz.sig && \
	gpg --keyserver hkp://pgp.mit.edu --recv 4345771566D76038C7FEB43863EC0ADBEA87E4E3 && \
	gpg --keyserver-o no-auto-key-retrieve --with-f blackarch-keyring.pkg.tar.xz.sig && \
	rm blackarch-keyring.pkg.tar.xz.sig && \
	pacman-key --init && \
	pacman-key -r CC1D2606 && \
	pacman-key --lsign-key CC1D2606 && \
	pacman --noc -U blackarch-keyring.pkg.tar.xz && \
	rm blackarch-keyring.pkg.tar.xz


RUN echo ""[multilib]"" >> /etc/pacman.conf && \
	echo ""Include = /etc/pacman.d/mirrorlist""  >> /etc/pacman.conf && \
	echo ""[blackarch]"" >> /etc/pacman.conf && \
	echo ""Server = http://blackarch.org/blackarch/\$repo/os/\$arch"" >> /etc/pacman.conf && \
	echo ""[archassault]"" >> /etc/pacman.conf && \
	echo ""Server = http://repo.archassault.org/archassault/\$repo/os/\$arch"" >> /etc/pacman.conf


RUN pacman -Syu base-devel archassault-keyring firefox firefox-adblock-plus flashplugin screen yaourt nload  \
	net-tools openssh aria2 leafpad htop man tigervnc lxde ttf-dejavu --noc --needed --ignore filesystem && \
	rm -rf /var/cache/pacman/pkg/*


RUN cp /etc/skel/.bashrc /root/ && \
	echo ""alias blackarch='pacman -Sgg | sort -u | grep --color ""archassault\|blackarch""'"" >> /root/.bashrc && \
	echo ""alias pacman='pacman --noc'"" >> /root/.bashrc && \
	echo ""alias yaourt='yaourt --noconfirm'"" >> /root/.bashrc


RUN mkdir /root/.vnc && \
	echo ""startlxde"" > /root/.vnc/xstartup && \
	echo ""killall Xvnc 2> /dev/null"" > /usr/bin/startx && \
	echo ""rm -rf /tmp/.* 2> /dev/null"" >> /usr/bin/startx && \	
	echo ""vncserver :0 -depth 16 -name Blackarch -SecurityTypes None"" >> /usr/bin/startx && \
	echo ""sed -n 8,11p ~/.vnc/*.log"" >> /usr/bin/startx


ADD README.md armitage-setup /root/
RUN chmod +x /root/armitage-setup /root/.vnc/xstartup /usr/bin/startx
EXPOSE 5900
CMD [""/bin/bash""]
","Shell
100.0%",2014-11-14 00:26:33,2017-10-21 05:24:42,https://github.com/Cinqcent5/docker-archlinux-pentest-lxde
9,slspeek/camlistore_tls_test,,"FROM scratch
MAINTAINER Brad Fitzpatrick <brad@danga.com>
ADD camlistored /camlistored
EXPOSE 80 443
ENTRYPOINT [""/camlistored""]
","Go
75.1%





JavaScript
10.5%





Python
6.6%





Java
3.1%





Objective-C
2.2%





CSS
1.5%





Other
1.0%",2014-11-17 22:14:51,2014-11-17 22:19:18,https://github.com/slspeek/camlistore_tls_test
10,slspeek/camlistore_tls_test,,"FROM debian


ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update
RUN apt-get -y upgrade
RUN apt-get -y install mysql-server-core-5.5 mysql-server-5.5


ADD run-mysqld /run-mysqld


EXPOSE 3306


VOLUME [""/mysql""]


CMD [""/run-mysqld""]
","Go
75.1%





JavaScript
10.5%





Python
6.6%





Java
3.1%





Objective-C
2.2%





CSS
1.5%





Other
1.0%",2014-11-17 22:14:51,2014-11-17 22:19:18,https://github.com/slspeek/camlistore_tls_test
11,slspeek/camlistore_tls_test,,"# Build everything at least. This is a work in progress.
#
# Useful for testing things before a release.
#
# Will also be used for running the camlistore.org website and public
# read-only blobserver.


FROM ubuntu:12.04


MAINTAINER camlistore <camlistore@googlegroups.com>


ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update && apt-get upgrade -y
RUN apt-get install -y curl make git


RUN curl -o /tmp/go.tar.gz https://storage.googleapis.com/golang/go1.3.1.linux-amd64.tar.gz
RUN tar -C /usr/local -zxvf /tmp/go.tar.gz
RUN rm /tmp/go.tar.gz
RUN /usr/local/go/bin/go version


ENV GOROOT /usr/local/go
ENV PATH $GOROOT/bin:/gopath/bin:$PATH


RUN mkdir -p /gopath/src
ADD pkg /gopath/src/camlistore.org/pkg
ADD cmd /gopath/src/camlistore.org/cmd
ADD website /gopath/src/camlistore.org/website
ADD third_party /gopath/src/camlistore.org/third_party
ADD server /gopath/src/camlistore.org/server
ADD dev /gopath/src/camlistore.org/dev
ADD depcheck /gopath/src/camlistore.org/depcheck


RUN adduser --disabled-password --quiet --gecos Camli camli
RUN mkdir -p /gopath/bin
RUN chown camli.camli /gopath/bin
RUN mkdir -p /gopath/pkg
RUN chown camli.camli /gopath/pkg
USER camli


ENV GOPATH /gopath


RUN go install --tags=purego \
    camlistore.org/server/camlistored \
    camlistore.org/cmd/camput \
    camlistore.org/cmd/camget \
    camlistore.org/cmd/camtool \
    camlistore.org/website \
    camlistore.org/dev/devcam


ENV USER camli
ENV HOME /home/camli
WORKDIR /home/camli


EXPOSE 80 443 3179 8080


CMD /bin/bash
","Go
75.1%





JavaScript
10.5%





Python
6.6%





Java
3.1%





Objective-C
2.2%





CSS
1.5%





Other
1.0%",2014-11-17 22:14:51,2014-11-17 22:19:18,https://github.com/slspeek/camlistore_tls_test
12,slspeek/camlistore_tls_test,,"# Build environment in which to build the Camlistore Android app.
#
# This extends the Dockerfile from https://index.docker.io/u/wasabeef/android/


FROM wasabeef/android
MAINTAINER bradfitz <brad@danga.com>


# Found these from: android list sdk -u -e
RUN android list sdk -u -e | grep build-tools- | perl -npe 's/.+""(.+)""/$1/' > /tmp/build-tools-version
RUN perl -e 'die ""No Android build tools version found."" unless -s ""/tmp/build-tools-version""'
RUN echo y | android update sdk -u -t $(cat /tmp/build-tools-version)
RUN echo y | android update sdk -u -t android-17


# Don't need mercurial yet, since we're just using the archive URL to fetch Go.
# But it's possible we may want to switch to using hg, in which case:
# RUN yum -y install mercurial


# Update the GOVERS to depend on a new version of Go.
#
# The 073fc578434b version is Go 1.3.1 (2014-02-21),
# to satisfy the dependency for Go 1.3 in the Docker build of
# camput.
ENV GOVERS 073fc578434b


RUN cd /usr/local && curl -O http://go.googlecode.com/archive/$GOVERS.zip
RUN cd /usr/local && unzip -q $GOVERS.zip
RUN cd /usr/local && mv go-$GOVERS go
RUN chmod 0755 /usr/local/go/src/make.bash
RUN echo $GOVERS > /usr/local/go/VERSION
RUN GOROOT=/usr/local/go GOARCH=arm bash -c ""cd /usr/local/go/src && ./make.bash""




ENV ANDROID_HOME /usr/local/android-sdk-linux
ENV ANT_HOME /usr/local/apache-ant-1.9.2
ENV PATH $PATH:$ANDROID_HOME/tools
ENV PATH $PATH:$ANDROID_HOME/platform-tools
ENV PATH $PATH:$ANT_HOME/bin
ENV IN_DOCKER 1
","Go
75.1%





JavaScript
10.5%





Python
6.6%





Java
3.1%





Objective-C
2.2%





CSS
1.5%





Other
1.0%",2014-11-17 22:14:51,2014-11-17 22:19:18,https://github.com/slspeek/camlistore_tls_test
13,PatrickHeneise/oneshot-docker-demo,,"FROM centos:centos7
MAINTAINER Patrick Heneise <patrick@blended.io>


# Enable EPEL for Node.js
RUN rpm -Uvh http://mirror.uv.es/mirror/fedora-epel/7/x86_64/e/epel-release-7-2.noarch.rpm


# Install Node.js and npm
RUN yum update -y
RUN yum install -y make GraphicsMagick npm


# Bundle app source
COPY . /src


# Install app dependencies
RUN cd /src; npm install


CMD [""node"", ""/src/app.js""]
","JavaScript
100.0%",2014-11-18 08:02:09,2014-11-28 14:30:25,https://github.com/PatrickHeneise/oneshot-docker-demo
14,franek/docker-hubot,,"FROM node:latest


RUN adduser hubot


RUN npm install -g yo generator-hubot


ENV HOME /home/hubot
WORKDIR /home/hubot
USER hubot


CMD bin/hubot -a hipchat
","Shell
100.0%",2014-11-09 20:11:17,2014-11-09 20:14:04,https://github.com/franek/docker-hubot
15,janehyt/DockerMng,,"FROM python:2.7


RUN mkdir /code
RUN mkdir /code/mysite
WORKDIR /code/mysite


RUN apt-get update && apt-get install -y \
		gcc \
		gettext \
		mysql-client \
	--no-install-recommends && rm -rf /var/lib/apt/lists/*


COPY ./mysite /code/mysite
RUN pip install --no-cache-dir -r requirements.txt
EXPOSE 8000
CMD [""python"", ""manage.py"", ""runserver"", ""0.0.0.0:8000""]
","CSS
62.2%





JavaScript
15.9%





Python
12.3%





HTML
9.6%",2014-11-07 15:05:07,2016-07-02 12:50:42,https://github.com/janehyt/DockerMng
16,DanClassic/docker-nginx,,"FROM nginx
RUN rm /etc/nginx/conf.d/default.conf
RUN rm /etc/nginx/conf.d/example_ssl.conf
RUN rm /var/log/nginx/error.log
RUN rm /var/log/nginx/access.log
COPY content /usr/nginx/share/html
COPY conf /etc/nginx


RUN apt-get update && apt-get install -y \
	php5-fpm


RUN sed -i -e ""s/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g"" /etc/php5/fpm/php.ini


VOLUME [""/etc/nginx"",""/var/log/nginx/"",""/etc/php5/fpm/pool.d/"",""/var/run/""]


CMD service php5-fpm restart && nginx -g ""daemon off;""
#CMD [""service"", ""php5-fpm"", ""restart"", ""&&"", ""nginx"", ""-g"", ""daemon off;""]
","Shell
96.5%





PHP
3.5%",2014-11-07 01:38:44,2014-11-07 01:39:43,https://github.com/DanClassic/docker-nginx
17,Sanji-IO/docker-mosquitto-old,"Organization(name=None, id=8855714)","FROM debian:wheezy


MAINTAINER Zack YL Shih <zackyl.shih@moxa.com>


# Add mosquitto key and apt-get install
RUN apt-get update && apt-get install -y wget


RUN wget -O - http://repo.mosquitto.org/debian/mosquitto-repo.gpg.key | \
    apt-key add - &&\
    wget -O /etc/apt/sources.list.d/mosquitto-repo.list \
    http://repo.mosquitto.org/debian/mosquitto-wheezy.list


RUN apt-get update && \
    apt-get install -y mosquitto && \
    rm -rf /var/lib/apt/lists/*


# Copy configs
COPY config /mqtt/config


VOLUME [""/mqtt/config"", ""/mqtt/data"", ""/mqtt/log""]


# Expose default mqtt port
EXPOSE 1883


CMD /usr/sbin/mosquitto -c /mqtt/config/mosquitto.conf
","Shell
100.0%",2014-11-07 09:56:22,2016-08-16 15:09:58,https://github.com/Sanji-IO/docker-mosquitto-old
18,varsy/docker-logfaces,,"FROM sergeyzh/centos6-java
MAINTAINER Andrey Sizov, andrey.sizov@jetbrains.com




RUN wget -O /root/lfs.tar.gz http://www.moonlit-software.com/logfaces/downloads/lfs.4.1.2.linux.x86-64.tar.gz
RUN cd /root ; tar zxf /root/lfs.tar.gz


VOLUME [ ""/root/logFacesServer/conf"" ]


RUN ln -s /root/logFacesServer/bin/lfs /etc/init.d/lfs


RUN sed -i '1 a JAVA_HOME=/usr/java64/current' /etc/init.d/lfs
RUN sed -i '2 a APP_BIN=/root/logFacesServer/bin' /etc/init.d/lfs
RUN sed -i 's/WRAPPER_CMD=\""\./WRAPPER_CMD=\""\$\{APP_BIN\}/' /etc/init.d/lfs
RUN sed -i 's/WRAPPER_CONF=\""\./WRAPPER_CONF=\""\$\{APP_BIN\}/' /etc/init.d/lfs


ENV JAVA_HOME /usr/java64/current
ENV PATH $PATH:$JAVA_HOME/bin


ADD run-services.sh /
RUN chmod +x /run-services.sh


CMD /run-services.sh


EXPOSE 8050 55200 1468 55201 514
","Shell
100.0%",2014-11-07 15:25:53,2014-11-07 15:26:34,https://github.com/varsy/docker-logfaces
19,libADS/docker-islandora-backend,,"FROM ubuntu:latest


ENV ADMIN admin
ENV ADMIN_PASSWORD admin
ENV FEDORA_DB fedora
ENV FEDORA_USER fedora
ENV FEDORA_PASSWORD fedora
ENV DRUPAL_DB drupal
ENV DRUPAL_USER drupal
ENV DRUPAL_PASSWORD drupal
ENV SOLR_PREFIX solr
ENV SOLR_VERSION 4.2.0
ENV ISL_TRANSFORMS https://github.com/lyrasis/islandora_transforms


RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends openjdk-7-jdk
RUN DEBIAN_FRONTEND=noninteractive apt-get -y install ant git mysql-client tomcat7 tomcat7-admin unzip


ADD configuration/tomcat/tomcat-users.xml /etc/tomcat7/tomcat-users.xml
RUN mkdir /var/lib/tomcat7/temp


# FEDORA
RUN mkdir -p /opt/fedora
ADD bin/fcrepo-installer-3.7.0.jar /fcrepo-installer-3.7.0.jar
ADD configuration/fedora/install.properties /install.properties
RUN jar xf /fcrepo-installer-3.7.0.jar resources/truststore
RUN cp resources/truststore /opt


# GSEARCH
RUN mkdir -p /opt/gsearch
ADD bin/gsearch_extensions-0.1.0.jar /gsearch_extensions-0.1.0.jar
ADD bin/gsearch_extensions-0.1.0-jar-with-dependencies.jar /gsearch_extensions-0.1.0-jar-with-dependencies.jar
ADD configuration/gsearch/fedora-users.xml /fedora-users.xml
ADD configuration/gsearch/fgsconfig-basic-for-islandora.properties /fgsconfig-basic-for-islandora.properties
ADD configuration/gsearch/foxmlToSolr.xslt /foxmlToSolr.xslt
ADD configuration/gsearch/slurp_all_MODS_to_solr.xslt /slurp_all_MODS_to_solr.xslt
ADD bin/fedoragsearch-2.6.zip /fedoragsearch-2.6.zip
RUN unzip fedoragsearch-2.6.zip
RUN cp /fedoragsearch-2.6/fedoragsearch.war /var/lib/tomcat7/webapps/gsearch.war


# SOLR
RUN mkdir -p /opt/solr
RUN mkdir -p /opt/data/solr
ADD bin/solr-4.2.0.tgz /solr-4.2.0
ADD bin/solr-iso639-filter-4.2.0-r20131208.jar /solr-iso639-filter-4.2.0.jar
ADD configuration/solr/schema-4.2.0.xml /schema-4.2.0.xml
ADD configuration/solr/solrconfig-4.2.0.xml /solrconfig-4.2.0.xml
ADD configuration/solr/solr-context.xml /solr-context.xml
RUN cp /solr-context.xml /var/lib/tomcat7/conf/Catalina/localhost/solr.xml


# DRUPAL FILTER
ADD bin/fcrepo-drupalauthfilter-3.7.0.jar /fcrepo-drupalauthfilter-3.7.0.jar
ADD configuration/drupal-filter/jaas.conf /jaas.conf
ADD configuration/drupal-filter/filter-drupal.xml /filter-drupal.xml


# SETUP
RUN chown root:tomcat7 /etc/tomcat7/tomcat-users.xml
RUN chown -R tomcat7:tomcat7 /var/lib/tomcat7


RUN chown -R tomcat7:tomcat7 /opt/fedora
RUN chown -R tomcat7:tomcat7 /opt/gsearch
RUN chown -R tomcat7:tomcat7 /opt/solr
RUN chown -R tomcat7:tomcat7 /opt/data/solr


ADD setup.sh /setup.sh
RUN chmod u+x /setup.sh


EXPOSE 8080


CMD [""/setup.sh""]
",,2014-11-11 22:49:18,2015-11-16 05:03:46,https://github.com/libADS/docker-islandora-backend
20,zendtech/php-zendserver,"Organization(name=None, id=1488179)","# Zend Server
#
# Version 0.1


# TODO:
# - version as a variable (both php and ZS)


FROM ubuntu:14.04


COPY ./run /usr/local/bin/run
COPY ./nothing /usr/local/bin/nothing
COPY ./libmysqlclient.so.18 /usr/lib/x86_64-linux-gnu/


RUN apt-key adv --keyserver pgp.mit.edu --recv-key 799058698E65316A2E7A4FF42EAE1437F7D2C623
RUN echo ""deb http://repos.zend.com/zend-server/7.0/deb_apache2.4 server non-free"" >> /etc/apt/sources.list.d/zend-server.list
RUN apt-get update && apt-get install -y zend-server-php-5.4 && /usr/local/zend/bin/zendctl.sh stop


EXPOSE 80
EXPOSE 443
EXPOSE 10081
EXPOSE 10082
EXPOSE 10060
EXPOSE 10061
EXPOSE 10062


CMD [""/usr/local/bin/run""]
","Shell
50.2%





C
49.8%",2014-10-19 14:18:03,2015-09-28 23:03:23,https://github.com/zendtech/php-zendserver
21,zendtech/php-zendserver,"Organization(name=None, id=1488179)","# Zend Server
#
# Version 0.1


# TODO:
# - version as a variable (both php and ZS)


FROM ubuntu:14.04


COPY ./run /usr/local/bin/run
COPY ./nothing /usr/local/bin/nothing
COPY ./libmysqlclient.so.18 /usr/lib/x86_64-linux-gnu/


RUN apt-key adv --keyserver pgp.mit.edu --recv-key 799058698E65316A2E7A4FF42EAE1437F7D2C623
RUN echo ""deb http://repos.zend.com/zend-server/7.0/deb_apache2.4 server non-free"" >> /etc/apt/sources.list.d/zend-server.list
RUN apt-get update && apt-get install -y zend-server-php-5.5 && /usr/local/zend/bin/zendctl.sh stop


EXPOSE 80
EXPOSE 443
EXPOSE 10081
EXPOSE 10082
EXPOSE 10060
EXPOSE 10061
EXPOSE 10062


CMD [""/usr/local/bin/run""]
","Shell
50.2%





C
49.8%",2014-10-19 14:18:03,2015-09-28 23:03:23,https://github.com/zendtech/php-zendserver
22,jerng/dev-julia,,"FROM ubuntu:latest 
 # 14.04.1 tested 


MAINTAINER Yang Jerng HWA
ENV PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/


RUN apt-get update &&\
    apt-get install -y software-properties-common


RUN add-apt-repository ppa:staticfloat/juliareleases && \
    add-apt-repository ppa:staticfloat/julia-deps && \
    apt-get update && \
    apt-get install -y julia
","Shell
100.0%",2014-10-26 13:22:16,2014-10-26 13:22:50,https://github.com/jerng/dev-julia
23,Jiig/schema-org-editor-docker,,"FROM tutum/tomcat:7.0
MAINTAINER Lucas Vandenbergh <luktut@gmail.com>


#install dependencies
RUN apt-get update
RUN apt-get install -y wget python-pip git
RUN pip install rdflib flask
RUN git clone https://github.com/jermnelson/flask-fedora-commons.git


#install fedora4
RUN wget https://oss.sonatype.org/service/local/repositories/releases/content/org/fcrepo/fcrepo-webapp/4.0.0-beta-03/fcrepo-webapp-4.0.0-beta-03.war -O /tomcat/webapps/fedora.war


#install the schema.org editor
RUN git clone https://github.com/jermnelson/schema-org-editor.git


#Set up secret key for editor and the pyhton path for flask_fedora_commons
ADD key.py key.py
RUN python key.py
ENV PYTHONPATH /flask-fedora-commons


#Expose ports and set default command
expose 8100
CMD cd /schema-org-editor/ && python editor.py
","Shell
86.0%





Python
14.0%",2014-11-03 20:50:02,2014-11-03 20:53:23,https://github.com/Jiig/schema-org-editor-docker
24,nicholasvmoore/docker-influxdb,,"# Couchpotato
#
# Version 0.0.1


FROM fedora:20
MAINTAINER Nicholas Moore


VOLUME /config
VOLUME /data


RUN rpm -Uvh http://s3.amazonaws.com/influxdb/influxdb-latest-1.x86_64.rpm


EXPOSE 8083 8084 8086


ENTRYPOINT [""/opt/influxdb/current/influxdb"", ""-config=/config/config.toml""]
","Shell
100.0%",2014-10-11 04:38:16,2014-10-11 06:14:27,https://github.com/nicholasvmoore/docker-influxdb
25,brazilianbytes/java,,"oracle-java-8-server-jre/Dockerfile
","Shell
100.0%",2014-11-01 00:30:19,2014-11-01 02:04:44,https://github.com/brazilianbytes/java
26,brazilianbytes/java,,"#
# Oracle Java 8 JRE Server Dockerfile, by BrazilianBytes
#
# https://github.com/brazilianbytes/java
# https://github.com/brazilianbytes/java/tree/master/oracle-java-8-server-jre
#


# Pull base image.
FROM ubuntu:latest
MAINTAINER Luciano Jesus Lima <developer@brazilianbytes.com>


# Install Java.
RUN apt-get update
RUN apt-get -y install wget tar 
RUN wget --no-check-certificate --no-cookies --header ""Cookie: oraclelicense=accept-securebackup-cookie"" http://download.oracle.com/otn-pub/java/jdk/8u25-b17/server-jre-8u25-linux-x64.tar.gz
RUN mkdir -p /env/jdk
RUN tar -xzf server-jre-8u25-linux-x64.tar.gz -C /env/jdk jdk1.8.0_25 --strip 1
RUN apt-get clean
RUN rm server-jre-8u25-linux-x64.tar.gz


# Define working directory.
WORKDIR /env/jdk


# Define commonly used JAVA_HOME variable
ENV JAVA_HOME /env/jdk
ENV PATH $JAVA_HOME/bin:$PATH


# Define default command.
CMD [""bash""]
","Shell
100.0%",2014-11-01 00:30:19,2014-11-01 02:04:44,https://github.com/brazilianbytes/java
27,brazilianbytes/java,,"8u25/Dockerfile
","Shell
100.0%",2014-11-01 00:30:19,2014-11-01 02:04:44,https://github.com/brazilianbytes/java
28,ezmac/docker-chromium-pepper-pulseaudio,,"FROM ubuntu:latest
MAINTAINER Joshua Lund


# Tell debconf to run in non-interactive mode
ENV DEBIAN_FRONTEND noninteractive


# Make sure the repository information is up to date
RUN apt-get update


# Install Chrome
ADD sources.list /etc/apt/
RUN apt-get -y update
RUN apt-get install -y -q python-software-properties software-properties-common
RUN add-apt-repository ppa:saiarcot895/chromium-beta 
RUN apt-get update 
RUN apt-get install -y chromium-browser pepperflashplugin-nonfree




# Install OpenSSH
RUN apt-get install -y openssh-server


# Create OpenSSH privilege separation directory
RUN mkdir /var/run/sshd


# Install Pulseaudio
RUN apt-get install -y pulseaudio 




# Replace 1000 with your user / group id
RUN export uid=1000 gid=1000 && \
  mkdir -p /home/chrome && \
  echo ""chrome:x:${uid}:${gid}:chrome,,,:/home/chrome:/bin/bash"" >> /etc/passwd && \
  echo ""chrome:x:${uid}:"" >> /etc/group && \
  echo ""chrome ALL=(ALL) NOPASSWD: ALL"" > /etc/sudoers.d/chrome && \
  chmod 0441 /etc/sudoers.d/chrome && \
  chown ${uid}:${gid} -R /home/chrome &&\
  adduser chrome audio


RUN chown -R chrome:chrome /home/chrome/


RUN echo ""load-module module-native-protocol-tcp"">>/etc/pulse/default.pa


USER chrome
ENV HOME /home/chrome
ENV PULSE_SERVER 172.17.42.1
ENTRYPOINT [""/usr/bin/chromium-browser""]
#http://grooveshark.com/#!/emmagician/broadcast
# Expose the SSH port
EXPOSE 22
ADD asoundrc /home/chrome/.asoundrc
","Shell
100.0%",2014-11-01 16:28:50,2014-11-01 16:36:33,https://github.com/ezmac/docker-chromium-pepper-pulseaudio
29,Casear/docker-node-express,,"FROM dockerfile/python


# Install Node.js
RUN \
  add-apt-repository ppa:chris-lea/node.js && \
  apt-get update && \
  apt-get install nodejs -y




RUN \
  npm install -g express-generator -g && \
  express /data/website && \
  cd /data/website && \
  npm install




WORKDIR /data/website


# Define default command.
CMD [""bash""]
CMD [""npm"",""start""]
","Shell
100.0%",2014-11-01 06:51:40,2014-11-01 06:52:05,https://github.com/Casear/docker-node-express
0,milafrerichs/offenesparlament-solr,,"FROM makuk66/docker-solr
RUN rm -R /opt/solr/example/solr
COPY solr /opt/solr/example/solr
","Shell
100.0%",2014-11-03 22:07:08,2014-11-04 07:52:49,https://github.com/milafrerichs/offenesparlament-solr
1,enricostano/docker-cozy,,"FROM ubuntu:trusty
MAINTAINER Michiel de Jong
RUN echo ""deb http://archive.ubuntu.com/ubuntu precise universe"" >> /etc/apt/sources.list
RUN apt-get -y update
RUN apt-get install -y python python-pip python-dev software-properties-common
RUN pip install fabric fabtools
RUN apt-get install -y wget
RUN wget https://raw.githubusercontent.com/cozy/cozy-setup/master/fabfile.py
RUN apt-get install -y openssh-server
RUN useradd sudoer
RUN echo ""sudoer	ALL=(ALL:ALL) ALL"" >> /etc/sudoers
RUN echo ""sudoer:hi"" | chpasswd
RUN mkdir /home/sudoer
RUN chown sudoer /home/sudoer
RUN echo ""env={'password': 'hi'}"" >> ./fabfile2.py
RUN cat ./fabfile.py >> ./fabfile2.py
RUN /etc/init.d/ssh start && fab -H sudoer@localhost install -f ./fabfile2.py --password=hi
RUN userdel sudoer


EXPOSE 9104
CMD supervisord -n -c /etc/supervisor/supervisord.conf
","Python
84.3%





Ruby
6.3%





Shell
6.1%





CoffeeScript
3.3%",2014-11-04 05:19:03,2014-11-04 05:20:09,https://github.com/enricostano/docker-cozy
2,Master244/Maps,,"# Set the base image to Ubuntu
FROM    ubuntu


# File Author / Maintainer
MAINTAINER Mitchell Tieleman / ServiceBook


# Install Node.js and other dependencies
RUN apt-get update && \
    apt-get -y install curl && \
    curl -sL https://deb.nodesource.com/setup | sudo bash - && \
    apt-get -y install python build-essential nodejs


# Install nodemon
RUN npm install -g nodemon


# Provides cached layer for node_modules
ADD package.json /tmp/package.json
RUN cd /tmp && npm install
RUN npm install redis --save
RUN mkdir -p /src && cp -a /tmp/node_modules /src/


# Define working directory
WORKDIR /src
ADD . /src


# Expose port
#EXPOSE  80


# Run app using nodemon
#CMD [""node"", ""/src/server.js""]
","Python
97.4%





JavaScript
2.0%





Other
0.6%",2014-10-28 14:26:06,2014-12-16 16:40:11,https://github.com/Master244/Maps
3,garretraziel/qubie,,"FROM node:0.12
MAINTAINER Jan Sedlak <admin@getqubie.com>
RUN mkdir -p /srv/qubie/ /var/log/qubie
COPY . /src
WORKDIR /src
RUN npm install
ENV PATH /src/node_modules/.bin:$PATH
RUN bower --allow-root install


ENV NODE_ENV production
ENV POSTGRES_SERVER db
ENV POSTGRES_DB postgres
ENV REDIS_URI redis://memdb:6379
ENV LEVEL_DB /srv/qubie/level.db
ENV LINK_URL https://www.getqubie.com


EXPOSE 5102
CMD [""npm"", ""start""]
","JavaScript
79.7%





HTML
12.1%





CSS
5.8%





Nginx
2.4%",2014-10-23 21:21:35,2017-02-01 10:34:21,https://github.com/garretraziel/qubie
4,garretraziel/qubie,,"FROM nginx
MAINTAINER Jan Sedlak <admin@getqubie.com>
COPY nginx_docker.conf /etc/nginx/nginx.conf
COPY server.crt /etc/nginx/ssl/getqubie_com.pem
COPY server.key /etc/nginx/ssl/getqubie_com.key
","JavaScript
79.7%





HTML
12.1%





CSS
5.8%





Nginx
2.4%",2014-10-23 21:21:35,2017-02-01 10:34:21,https://github.com/garretraziel/qubie
5,kdelfour/btsync-docker,,"# ------------------------------------------------------------------------------
# Based on a work at https://github.com/docker/docker.
# ------------------------------------------------------------------------------
# Pull base image.
FROM kdelfour/supervisor-docker
MAINTAINER Kevin Delfour <kevin@delfour.eu>


# ------------------------------------------------------------------------------
# Install base
RUN apt-get update
RUN apt-get install -y curl


# ------------------------------------------------------------------------------
# Install btsync
RUN curl -o /usr/bin/btsync.tar.gz http://download-lb.utorrent.com/endpoint/btsync/os/linux-x64/track/stable
RUN cd /usr/bin && tar -xzvf btsync.tar.gz && rm btsync.tar.gz


RUN mkdir -p /btsync/.sync
RUN ln -s /btsync/.sync /data 
RUN mkdir -p /var/run/btsync


ADD conf/btsync.conf /btsync/
# ------------------------------------------------------------------------------
# Expose ports.
EXPOSE 80
EXPOSE 3369


# ------------------------------------------------------------------------------
# Expose volumes
VOLUME /data


# ------------------------------------------------------------------------------
# Add supervisord conf
ADD conf/startup.conf /etc/supervisor/conf.d/


# Start supervisor, define default command.
CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf""]
",,2014-10-06 08:53:19,2015-07-07 18:54:25,https://github.com/kdelfour/btsync-docker
6,Zookal/DocHarris,"Organization(name=None, id=3445992)","FROM dockerfile/ubuntu


MAINTAINER Cyrill Schumacher <cyrill@zookal.com>


RUN export DEBIAN_FRONTEND=noninteractive
RUN apt-get update
RUN apt-get install -y apt-transport-https
RUN curl https://repo.varnish-cache.org/ubuntu/GPG-key.txt | apt-key add -
RUN echo ""deb https://repo.varnish-cache.org/ubuntu/ trusty varnish-4.0"" >> /etc/apt/sources.list.d/varnish-cache.list
RUN apt-get update
RUN apt-get install -y varnish




# Keep upstart from complaining
RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -sf /bin/true /sbin/initctl


# git is not needed here but included in the base docker image.
RUN apt-get remove -y git


RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Make our custom VCLs available on the container
ADD config/default.vcl /etc/varnish/default.vcl
ADD config/vcl/default.vcl /etc/varnish/vcl/default.vcl


RUN mkdir -p /var/cache/varnish


ENV LISTEN_ADDR 0.0.0.0
ENV LISTEN_PORT 80
ENV TELNET_ADDR 0.0.0.0
ENV TELNET_PORT 6083
ENV CACHE_SIZE 500MB


EXPOSE 80


# allow full custom config instead of default ones
VOLUME  [""/etc/varnish"", ""/var/cache/varnish""]


ADD boot.sh /boot.sh
RUN chmod 0700 /boot.sh
CMD [""/boot.sh""]
","Shell
100.0%",2014-10-03 04:37:22,2017-08-11 02:51:54,https://github.com/Zookal/DocHarris
7,Zookal/DocHarris,"Organization(name=None, id=3445992)","FROM phusion/baseimage:0.9.15
MAINTAINER Cyrill Schumacher <cyrill@zookal.com>
ENV HOME /root
RUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh
# Use baseimage-docker's init system.
CMD [""/sbin/my_init""]


RUN apt-get install -y python-setuptools nano mysql-client-5.5


# git is not needed here but included in the base docker image.
# RUN apt-get remove -y git


# forwards mail to mailcatcher or any other SMTP service
RUN apt-get install -y exim4


RUN echo ""deb http://dl.hhvm.com/ubuntu trusty main"" > /etc/apt/sources.list.d/hhvm.list && \
        apt-get update && \
        DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes hhvm-fastcgi


RUN mkdir /etc/service/hhvm
ADD boot.sh /etc/service/hhvm/run
RUN chmod 700 /etc/service/hhvm/run


ADD . /configs


ADD cp /configs/config.hdf /etc/hhvm/config.hdf


RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


RUN mkdir -p /var/log/hhvm


# Add VOLUMEs to allow backup of config
VOLUME  [""/etc/exim4/"", ""/var/log/hhvm""]


EXPOSE 9000
","Shell
100.0%",2014-10-03 04:37:22,2017-08-11 02:51:54,https://github.com/Zookal/DocHarris
8,Zookal/DocHarris,"Organization(name=None, id=3445992)","FROM dockerfile/ubuntu


MAINTAINER Cyrill Schumacher <cyrill@zookal.com>


# Do not try to prompt for config
ENV DEBIAN_FRONTEND noninteractive


# Install Ruby2.1
RUN apt-get update && apt-get install -y software-properties-common
RUN apt-add-repository -y ppa:brightbox/ruby-ng
RUN apt-get update && apt-get install -y build-essential ruby2.1 ruby2.1-dev libxml2-dev libxslt-dev
RUN apt-get clean


# Install bundler
RUN gem install bundler --no-rdoc --no-ri


RUN apt-get install -y libsqlite3-dev
RUN gem install mailcatcher --no-ri --no-rdoc


# https://github.com/sj26/mailcatcher/issues/155
# mailcatcher failed to start #155
# @todo check later if there is a cool solution
RUN gem install i18n -v 0.6.11
RUN gem uninstall i18n -Ix --version '>0.6.11'


EXPOSE 1080
EXPOSE 25
CMD mailcatcher --smtp-port 25 --ip `ip addr show dev eth0 scope global | grep inet | awk '{print $2;}' | cut -d/ -f1` -f
","Shell
100.0%",2014-10-03 04:37:22,2017-08-11 02:51:54,https://github.com/Zookal/DocHarris
9,Zookal/DocHarris,"Organization(name=None, id=3445992)","FROM dockerfile/ubuntu
MAINTAINER Fernando Mayo <fernando@tutum.co>, Feng Honglin <hfeng@tutum.co>, Cyrill Schumacher <cyrill@zookal.com>


# Install packages
ENV DEBIAN_FRONTEND noninteractive


# git is not needed here but included in the base docker image.
RUN apt-get remove -y git


RUN apt-get update && \
  apt-get -yq install mysql-server-5.5 pwgen && \
  rm -rf /var/lib/apt/lists/*


# Remove pre-installed database
RUN rm -rf /var/lib/mysql/*


# Add MySQL configuration
ADD my.cnf /etc/mysql/conf.d/my.cnf
ADD mysqld_charset.cnf /etc/mysql/conf.d/mysqld_charset.cnf


# Add MySQL scripts
ADD create_mysql_admin_user.sh /create_mysql_admin_user.sh
ADD import_sql.sh /import_sql.sh
ADD run.sh /run.sh
RUN chmod 755 /*.sh


# due do shared folders in the boot2docker vm
# 102 is the old mysql uid
# 33 is the old uid of www-data which is here not needed
RUN userdel -r www-data
RUN usermod -u 33 mysql && \
  find /var -uid 33 -exec chown -R mysql {} \; && \
  find /usr -uid 33 -exec chown -R mysql {} \;


RUN chown -R mysql /var/run/mysqld
RUN chown -R mysql /var/lib/mysql


# Exposed ENV
ENV MYSQL_USER admin
ENV MYSQL_PASS **Random**


# Replication ENV
ENV REPLICATION_MASTER **False**
ENV REPLICATION_SLAVE **False**
ENV REPLICATION_USER replica
ENV REPLICATION_PASS replica


# Add VOLUMEs to allow backup of config and databases
VOLUME  [""/etc/mysql"", ""/var/lib/mysql""]


EXPOSE 3306
CMD [""/run.sh""]
","Shell
100.0%",2014-10-03 04:37:22,2017-08-11 02:51:54,https://github.com/Zookal/DocHarris
10,Zookal/DocHarris,"Organization(name=None, id=3445992)","FROM dockerfile/ubuntu


MAINTAINER Cyrill Schumacher <cyrill@zookal.com>


# for http://ppa.launchpad.net trusty Release
# RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C


# Keep upstart from complaining
RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -sf /bin/true /sbin/initctl


# git is not needed here but included in the base docker image.
RUN apt-get remove -y git


# add php5.5 repository
RUN add-apt-repository -y ppa:nginx/stable
RUN apt-get update -y


# Basic Requirements
RUN apt-get install -y nginx nano


ADD . /configs


RUN cp -f /configs/nginx/nginx.conf /etc/nginx/nginx.conf
RUN rm -f /etc/nginx/sites-enabled/*
RUN cp -f /configs/nginx/magento.conf /etc/nginx/sites-enabled/


RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Add VOLUMEs to allow backup of config
VOLUME [""/etc/nginx/sites-enabled"", ""/etc/nginx/certs"", ""/etc/nginx/conf.d""]


# Define working directory.
WORKDIR /etc/nginx


# Define default command.
CMD [""nginx""]


EXPOSE 80
EXPOSE 443
","Shell
100.0%",2014-10-03 04:37:22,2017-08-11 02:51:54,https://github.com/Zookal/DocHarris
11,Zookal/DocHarris,"Organization(name=None, id=3445992)","FROM phusion/baseimage:0.9.15
MAINTAINER Cyrill Schumacher <cyrill@zookal.com>
ENV HOME /root
RUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh
# Use baseimage-docker's init system.
CMD [""/sbin/my_init""]


# npStorage Container n=nginx p=php Storage


RUN mkdir /etc/service/bootstorage
ADD boot.sh /etc/service/bootstorage/run
RUN chmod 700 /etc/service/bootstorage/run


RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


VOLUME [""/var/www/site"", ""/var/www/data/php"", ""/var/www/data/nginx"", ""/var/www/data/media"", ""/var/www/data/sitemap"", ""/var/www/data/var""]
","Shell
100.0%",2014-10-03 04:37:22,2017-08-11 02:51:54,https://github.com/Zookal/DocHarris
12,Zookal/DocHarris,"Organization(name=None, id=3445992)","FROM phusion/baseimage:0.9.15
MAINTAINER Cyrill Schumacher <cyrill@zookal.com>
ENV HOME /root
RUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh
# Use baseimage-docker's init system.
CMD [""/sbin/my_init""]


# for http://ppa.launchpad.net trusty Release
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C


# add php5.5 repository
RUN add-apt-repository -y ppa:ondrej/php5 > /dev/null 2>&1 # dirty fix for ""invalid UTF-8 in string""
RUN apt-get update -y


# Basic Requirements
RUN apt-get install -y php5-fpm php5-mysql php5-curl php5-mcrypt php5-gd php5-oauth php5-redis php5-xdebug
RUN apt-get install -y php5-apcu
RUN apt-get install -y python-setuptools nano mysql-client-5.5


# git is not needed here but included in the base docker image.
# RUN apt-get remove -y git


# forwards mail to mailcatcher or any other SMTP service
RUN apt-get install -y exim4


RUN mkdir /etc/service/php5
ADD boot.sh /etc/service/php5/run
RUN chmod 700 /etc/service/php5/run


ADD . /configs


RUN cp -f /configs/php5/php-fpm.conf /etc/php5/fpm/php-fpm.conf
RUN cp -f /configs/php5/pool.d/www.conf /etc/php5/fpm/pool.d/www.conf
RUN cp -f /configs/php5/php.ini /etc/php5/fpm/php.ini
RUN cp -f /configs/php5/mods-available/* /etc/php5/mods-available/


RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Add VOLUMEs to allow backup of config
VOLUME  [""/etc/php5/fpm/"", ""/etc/exim4/""]


EXPOSE 9000
","Shell
100.0%",2014-10-03 04:37:22,2017-08-11 02:51:54,https://github.com/Zookal/DocHarris
13,Zookal/DocHarris,"Organization(name=None, id=3445992)","FROM phusion/baseimage:0.9.15
MAINTAINER Cyrill Schumacher <cyrill@zookal.com>
ENV HOME /root
RUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh
# Use baseimage-docker's init system.
CMD [""/sbin/my_init""]


RUN \
  sed -i 's/# \(.*multiverse$\)/\1/g' /etc/apt/sources.list && \
  apt-get update && \
  apt-get install -y build-essential && \
  apt-get install -y software-properties-common


# Install Redis.
RUN \
  cd /tmp && \
  curl -LO http://download.redis.io/redis-stable.tar.gz && \
  tar xvzf redis-stable.tar.gz && \
  cd redis-stable && \
  make && \
  make install && \
  cp -f src/redis-sentinel /usr/local/bin && \
  mkdir -p /etc/redis && \
  rm -rf /tmp/redis-stable*


ADD redis-base.conf /etc/redis/
ADD redis-obj.conf /etc/redis/


RUN mkdir /etc/service/redis
ADD redis.sh /etc/service/redis/run
RUN chmod 700 /etc/service/redis/run
RUN useradd -s /usr/sbin/nologin -r -M -d /nonexistent -g users redis


# Define mountable directories.
VOLUME [""/data""]


# Define working directory.
WORKDIR /data


# Expose ports.
EXPOSE 6379


# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
","Shell
100.0%",2014-10-03 04:37:22,2017-08-11 02:51:54,https://github.com/Zookal/DocHarris
14,Zookal/DocHarris,"Organization(name=None, id=3445992)","FROM phusion/baseimage:0.9.15
MAINTAINER Cyrill Schumacher <cyrill@zookal.com>
ENV HOME /root
RUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh
# Use baseimage-docker's init system.
CMD [""/sbin/my_init""]


RUN \
  sed -i 's/# \(.*multiverse$\)/\1/g' /etc/apt/sources.list && \
  apt-get update && \
  apt-get install -y build-essential && \
  apt-get install -y software-properties-common


# Install Redis.
RUN \
  cd /tmp && \
  curl -LO http://download.redis.io/redis-stable.tar.gz && \
  tar xvzf redis-stable.tar.gz && \
  cd redis-stable && \
  make && \
  make install && \
  cp -f src/redis-sentinel /usr/local/bin && \
  mkdir -p /etc/redis && \
  rm -rf /tmp/redis-stable*


ADD redis-base.conf /etc/redis/
ADD redis-ses.conf /etc/redis/


RUN mkdir /etc/service/redis
ADD redis.sh /etc/service/redis/run
RUN chmod 700 /etc/service/redis/run
RUN useradd -s /usr/sbin/nologin -r -M -d /nonexistent -g users redis


# Define mountable directories.
VOLUME [""/data""]


# Define working directory.
WORKDIR /data


# Expose ports.
EXPOSE 6380


# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
","Shell
100.0%",2014-10-03 04:37:22,2017-08-11 02:51:54,https://github.com/Zookal/DocHarris
15,Zookal/DocHarris,"Organization(name=None, id=3445992)","FROM phusion/baseimage:0.9.15
MAINTAINER Cyrill Schumacher <cyrill@zookal.com>
ENV HOME /root
RUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh
# Use baseimage-docker's init system.
CMD [""/sbin/my_init""]


# npStorage Container n=nginx p=php Storage


RUN mkdir /etc/service/bootstorage
ADD boot.sh /etc/service/bootstorage/run
RUN chmod 700 /etc/service/bootstorage/run


RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Define mountable directories.
VOLUME [""/data""]


# Define working directory.
WORKDIR /data
","Shell
100.0%",2014-10-03 04:37:22,2017-08-11 02:51:54,https://github.com/Zookal/DocHarris
16,bgabor666/go-jobserver,,"FROM golang:onbuild
EXPOSE 8060


","Go
100.0%",2014-12-07 08:28:38,2014-12-07 18:03:29,https://github.com/bgabor666/go-jobserver
17,hyper0x/mydockerfiles,,"#
# My Dockerfile - Golang project
#
# https://github.com/hyper-carrot/mydockerfiles/golang
#
FROM ubuntu:14.04.2
MAINTAINER Robert Hao <hypermind.cn@gmail.com>


# Set timestamp
ENV REFRESHED_AT 2015-07-02


# Install base tools
RUN \
  apt-get install -yqq software-properties-common && \
  apt-get update -yqq && \
  apt-get install -yqq git mercurial curl tar gzip vim


# Install Golang
ENV GOROOT /usr/local/go 
#ENV DOWNLOAD_URL https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz
ENV DOWNLOAD_URL http://golangtc.com/static/go/go1.4.2.linux-amd64.tar.gz


RUN \
  mkdir -p /usr/local/go && \
  curl `echo $DOWNLOAD_URL` | tar xvzf - -C `echo $GOROOT` --strip-components=1


# Set enviroment for Golang
ENV WORK_BASE /opt
ENV LIB_DIR $WORK_BASE/golib
ENV PROJECT_DIR $WORK_BASE/goproject
ENV GOPATH $LIB_DIR:$PROJECT_DIR
ENV GOBIN  $WORK_BASE/gobin 
ENV PATH   $GOROOT/bin:$GOBIN:$PATH


RUN \
  mkdir -p $LIB_DIR/src && \
  mkdir -p $PROJECT_DIR/src && \
  mkdir $GOBIN


VOLUME [""$PROJECT_DIR""]


# Download & set golang tools
RUN \
  mkdir $LIB_DIR/src/golang.org && \
  curl http://golangtc.com/static/download/packages/golang.org.x.tools.tar.gz | tar xvzf - -C $LIB_DIR/src/golang.org --strip-components=1


# Set localtime
RUN \
  mkdir /etc/sysconfig && \
  echo -e ""ZONE=Asia/Shanghai\nUTC=false\nARC=false"" >> /etc/sysconfig/clock && \ 
  rm /etc/localtime && \
  ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime


# Set work dir 
WORKDIR $WORK_BASE


# Set command:
CMD [""go"", ""version""]
",,2014-12-08 06:53:16,2014-12-08 07:34:38,https://github.com/hyper0x/mydockerfiles
18,hyper0x/mydockerfiles,,"#
# My Dockerfile - Java7(JDK7)
#
# https://github.com/hyper-carrot/mydockerfiles/java
#
FROM centos:latest
MAINTAINER Robert Hao <hypermind.cn@gmail.com>


# Set timestamp
ENV REFRESHED_AT 2015-01-23


# Update them
RUN  yum -q -y upgrade


# Install base tools
RUN yum -q -y install wget
RUN yum -q -y install tar
RUN yum -q -y install gzip


# Install Java7
ENV JAVA_HOME /jdk1.7.0
RUN \
  mkdir -p $JAVA_HOME && \
  wget -qO- --no-check-certificate --no-cookies --header ""Cookie: oraclelicense=accept-securebackup-cookie"" http://download.oracle.com/otn-pub/java/jdk/8u40-b26/jdk-8u40-linux-x64.tar.gz | tar xvzf - -C $JAVA_HOME --strip-components=1


# Set environment
ENV CLASSPATH .:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
ENV PATH $JAVA_HOME/bin:$PATH
ENV PROJECT_DIR /projects
RUN mkdir -p $PROJECT_DIR 
VOLUME [""$PROJECT_DIR""]


# Define work dir 
WORKDIR $PROJECT_DIR


# Define command
ENTRYPOINT  [""""]
CMD [""java"", ""-version""]


",,2014-12-08 06:53:16,2014-12-08 07:34:38,https://github.com/hyper0x/mydockerfiles
19,hyper0x/mydockerfiles,,"#
# My Dockerfile - Redis server
#
# https://github.com/hyper-carrot/mydockerfiles/redis
#
FROM centos:latest
MAINTAINER Robert Hao <hypermind.cn@gmail.com>


# Set timestamp
ENV REFRESHED_AT 2015-01-21


# Yum update
RUN yum -q -y upgrade


# Install base tools
RUN yum -q -y install tar
RUN yum -q -y install gzip
RUN yum -q -y install vim


# Install Redis
RUN yum -y update; yum clean all
RUN yum -y install epel-release; yum clean all
RUN yum -y install redis; yum clean all


# Set environment
RUN \ 
  mkdir -p /opt/logs/ && \
  mkdir -p /opt/backup/redis
VOLUME [""/opt/conf""]
EXPOSE 6379


# Set command
ENTRYPOINT  [""/usr/bin/redis-server""]
CMD [""--help""]








",,2014-12-08 06:53:16,2014-12-08 07:34:38,https://github.com/hyper0x/mydockerfiles
20,hyper0x/mydockerfiles,,"#
# My Dockerfile - Java7(JDK7)+Tomcat7
#
# https://github.com/hyper-carrot/mydockerfiles/java/tomcat
#
FROM centos:latest
MAINTAINER Robert Hao <hypermind.cn@gmail.com>


# Set timestamp
ENV REFRESHED_AT 2015-01-23


# Update them
RUN  yum -q -y upgrade


# Install base tools
RUN yum -q -y install wget
RUN yum -q -y install tar
RUN yum -q -y install gzip


# Install Java7
ENV JAVA_HOME /jdk1.7.0
RUN \
  mkdir -p $JAVA_HOME && \
  wget -qO- --no-check-certificate --no-cookies --header ""Cookie: oraclelicense=accept-securebackup-cookie"" http://download.oracle.com/otn-pub/java/jdk/7u72-b14/jdk-7u72-linux-x64.tar.gz | tar xvzf - -C $JAVA_HOME --strip-components=1


# Install Tomcat7
ENV CATALINA_HOME /apache-tomcat-7.0 
RUN \
  mkdir -p ${CATALINA_HOME} && \
  wget -qO- http://mirrors.hust.edu.cn/apache/tomcat/tomcat-7/v7.0.57/bin/apache-tomcat-7.0.57.tar.gz | tar xvzf - -C $CATALINA_HOME --strip-components=1


# Set environment
ENV CLASSPATH .:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
ENV PATH ${JAVA_HOME}/bin:$PATH
ENV CATALINA_OPTS -Xms512m -Xmx2048m -XX:PermSize=256m -XX:MaxPermSize=512m 


# Define work dir
WORKDIR ${CATALINA_HOME}


# Define command.
ENTRYPOINT [""bin/catalina.sh"", ""run""]


",,2014-12-08 06:53:16,2014-12-08 07:34:38,https://github.com/hyper0x/mydockerfiles
21,fernandoacorreia/docker-github-pages,,"FROM ruby:2.1
MAINTAINER Fernando de Alcântara Correia <fernando@fernandocorreia.info>


RUN gem install \
  github-pages \
  therubyracer


RUN github-pages versions


EXPOSE 4000
VOLUME /src
WORKDIR /src
CMD jekyll serve --drafts --baseurl ''
",,2014-12-05 11:13:00,2014-12-05 13:18:17,https://github.com/fernandoacorreia/docker-github-pages
22,fspc/bikeshed,,"############
# BikeShed #
############
# login for test users on website 


FROM bikebike/bikebike
MAINTAINER Jonathan Rosenbaum <gnuser@gmail.com>


RUN git clone git://github.com/spacemunkay/BikeShed.git 
RUN gem install bundler
RUN apt-get update && apt-get -y install libpq-dev postgresql-9.3 g++ unzip 
RUN bundle install --gemfile=/BikeShed/Gemfile; \
	 cd /BikeShed; gem install rake -v '10.1.1'; \
	 gem install therubyracer -v '0.10.2' 
COPY pg_hba.conf /etc/postgresql/9.3/main/pg_hba.conf


#  Because of an undefined constant SeedBike 
COPY  seeds.rb /BikeShed/db/seeds.rb
RUN cp /BikeShed/config/database.yml.example /BikeShed/config/database.yml; \
	service postgresql start; \
	cd /BikeShed; \
	sudo -u postgres -i createuser -d -w velocipede; \
	adduser --disabled-password --gecos """" velocipede; \
	sudo -u velocipede -i createdb -U velocipede --owner=velocipede velocipede; \
	sudo -u velocipede -i createdb -U velocipede --owner=velocipede velocipede_test; \


	bundle exec rake db:create db:migrate; \
	bundle exec rake db:seed




COPY  postgresql.conf bikeshed.conf /etc/supervisor/conf.d/
#COPY  bikeshed.conf /etc/supervisor/conf.d/
COPY  extjs-4.1.1.zip /BikeShed/


RUN cd /BikeShed; \
	unzip extjs-4.1.1.zip; \
	ln -s /BikeShed/ext-4.1.1a /BikeShed/public/extjs


CMD [""supervisord"", ""-c"", ""/etc/supervisor/supervisord.conf""]


# docker run -d -p 3000:3000 --name=""freehub"" bikebike/freehub 


","Ruby
100.0%",2014-12-11 15:37:21,2014-12-11 17:04:26,https://github.com/fspc/bikeshed
23,maikelvl/docker-nginx-php-centos6,,"FROM centos:centos6
ENV HOME /root
# RUN /etc/my_init.d/00_regen_ssh_host_keys.sh
CMD [""/sbin/my_init""]


MAINTAINER Crobays <crobays@userex.nl>
ENV DOCKER_NAME nginx-php-centos


ADD /conf/nginx.repo /etc/yum.repos.d/nginx.repo
RUN rpm -Uvh http://mirror.webtatic.com/yum/el6/latest.rpm


RUN yum -y update && \
	yum clean all
RUN yum -y install epel-release && \
	yum clean all
RUN yum -y install nginx && \
	yum clean all
RUN yum install -y \
	php-gd \
	php-cli \
	php-fpm \
	php-mysql \
	php-pgsql \
	php-sqlite \
	php-curl \
	php-mcrypt \
	php-memcache \
	php-intl \
	php-imap \
	php-redis \
	php-tidy \
	php-xml \
	pwgen \
	supervisor \
	bash-completion \
	openssh-server \
	psmisc tar


RUN yum clean all


# Exposed ENV
ENV TIMEZONE Etc/UTC
ENV ENVIRONMENT prod
ENV PUBLIC_PATH /project/public
ENV NGINX_CONF nginx-virtual.conf


VOLUME  [""/project""]
WORKDIR /project


# HTTP ports
EXPOSE 80 443


RUN echo '/sbin/my_init' > /root/.bash_history


RUN mkdir -p /etc/service/nginx && echo -e ""#!/bin/bash\nnginx"" > /etc/service/nginx/run
RUN mkdir -p /etc/service/php && echo -e ""#!/bin/bash\nphp-fpm -c /etc/php.ini"" > /etc/service/php/run


RUN mkdir -p /etc/my_init.d && \
	echo -e ""#!/bin/bash\nln -sf \""/usr/share/zoneinfo/$TIMEZONE\"" /etc/localtime"" > /etc/my_init.d/01-timezone.sh


ADD /scripts/nginx-config.sh /etc/my_init.d/02-nginx-config.sh
ADD /scripts/php-config.sh /etc/my_init.d/03-php-config.sh
ADD /scripts/my_init /sbin/my_init


RUN chmod +x /etc/my_init.d/* && chmod +x /etc/service/*/run && chmod +x /sbin/my_init


# Clean up APT when done.
RUN yum clean all && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


ADD /conf /conf




","Shell
69.3%





ApacheConf
30.7%",2015-02-20 12:35:40,2015-02-20 13:31:56,https://github.com/maikelvl/docker-nginx-php-centos6
24,bclyang/Serve,,"#
# example Dockerfile for http://docs.docker.io/en/latest/examples/postgresql_service/
#


FROM ubuntu
MAINTAINER SvenDowideit@docker.com


# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc 
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8


# Add PostgreSQL's repository. It contains the most recent stable release
#     of PostgreSQL, ``9.3``.
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Update the Ubuntu and PostgreSQL repository indexes
RUN apt-get update


# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get -y -q install python-software-properties software-properties-common
RUN apt-get -y -q install postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3


# Note: The official Debian and Ubuntu images automatically ``apt-get clean``
# after each ``apt-get`` 


# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres


# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER docker WITH SUPERUSER PASSWORD 'docker';"" &&\
    createdb -O docker docker


# Adjust PostgreSQL configuration so that remote connections to the
# database are possible. 
RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf


# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


# Expose the PostgreSQL port
EXPOSE 5432


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME	[""/etc/postgresql"", ""/var/log/postgresql"", ""/var/lib/postgresql""]


# Set the default command to run when starting the container
CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/var/lib/postgresql/9.3/main"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","JavaScript
88.6%





HTML
10.2%





CSS
1.1%





Python
0.1%





LiveScript
0.0%





Makefile
0.0%",2015-02-21 12:08:01,2015-03-22 14:29:10,https://github.com/bclyang/Serve
25,galal-hussein/collectd-docker,,"FROM ubuntu:14.04
MAINTAINER hussein.galal.ahmed.11@gmail.com
ENV DEBIAN_FRONTEND noninteractive


# Install nginx, collectd, and other dependencies 
RUN apt-get -qq update
RUN apt-get install -yqq nginx wget collectd perl libconfig-general-perl librrds-perl libregexp-common-perl collectd-core libhtml-parser-perl librrd2-dev libsnmp-dev spawn-fcgi fcgiwrap


# Add nginx configuration 
ADD conf/nginx-collectd.conf /etc/nginx/sites-available/
RUN rm /etc/nginx/sites-enabled/default
RUN ln -s /etc/nginx/sites-available/nginx-collectd.conf /etc/nginx/sites-enabled/nginx-collectd
ADD conf/nginx.conf /etc/nginx/nginx.conf


# Add the run script
ADD run.sh /tmp/run.sh




# Install Graphs Scripts
RUN cd /tmp/ && wget http://collectd.org/files/collectd-5.4.2.tar.gz
RUN cd /tmp/ && tar -xvf collectd-5.4.2.tar.gz
RUN mkdir -p /var/www/
RUN cp -r /tmp/collectd-5.4.2/contrib/collection3 /var/www/graphs
RUN chown -R www-data:www-data /var/www/graphs
WORKDIR /tmp/collectd-5.4.2


EXPOSE 80 
ENTRYPOINT [""/bin/bash"",""/tmp/run.sh""]
","ApacheConf
68.7%





Nginx
26.9%





Shell
4.4%",2015-03-06 17:49:19,2017-10-11 06:43:37,https://github.com/galal-hussein/collectd-docker
26,pyolle/docker-shinken,,"FROM ubuntu:14.04
MAINTAINER Renzo Meister <rm@jamotion.ch>


RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
RUN echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | sudo tee /etc/apt/sources.list.d/mongodb.list


# Update Package index
RUN apt-get update 


# Install needed packages
RUN apt-get install -y --force-yes --no-install-recommends curl python-pymongo wget gawk build-essential libperl-dev \
                    python-setuptools libsqlite3-dev python-dev pyro sqlite3 nmap unzip libmysqlclient-dev python-ldap \ 
					libevent-dev python-paste python-pycurl libsnmp-python snmpd supervisor mongodb-org


RUN easy_install paramiko 
RUN easy_install netifaces 
RUN easy_install simplejson 
RUN easy_install MySQL_python 
RUN easy_install kombu
 
RUN curl -L http://install.shinken-monitoring.org | /bin/bash
ADD supervisor.conf /etc/supervisor/conf.d/supervisor.conf
ADD shinken-specific.cfg /usr/local/shinken/etc/shinken-specific.cfg


EXPOSE 7767
CMD [""/usr/bin/supervisord""]
","ApacheConf
100.0%",2015-03-04 09:24:13,2016-01-20 20:45:31,https://github.com/pyolle/docker-shinken
27,kdeenanauth/docker-gcc,,"FROM kampka/arch-core:latest


MAINTAINER Kevin Deenanauth <kevin@deenanauth.com>


# TODO specify version
RUN pacman -Syu --noconfirm
RUN pacman -S gcc --noconfirm
",,2015-03-09 08:09:55,2015-03-30 07:27:37,https://github.com/kdeenanauth/docker-gcc
28,kdeenanauth/docker-gcc,,"FROM kdeenanauth/gcc:1.0


MAINTAINER Kevin Deenanauth <kevin@deenanauth.com>


RUN mkdir -p /usr/src/app/source /usr/src/app/build
WORKDIR /usr/src/app/source


ONBUILD COPY . /usr/src/app/source
ONBUILD RUN g++ *.cpp -o /usr/src/app/build/output
ONBUILD WORKDIR /usr/src/app/build
",,2015-03-09 08:09:55,2015-03-30 07:27:37,https://github.com/kdeenanauth/docker-gcc
29,gleclaire/docker-ionic-framework,,"FROM debian:wheezy


MAINTAINER garvin [dot] leclaire [at] gmail [dot] com


# Install basics 
RUN apt-get update &&  \
    apt-get install -y git wget curl && \
    apt-get clean


RUN curl -sL https://deb.nodesource.com/setup | bash -


RUN apt-get update &&  \
    apt-get install -y nodejs nodejs-legacy build-essential && \
    ln -s /usr/bin/nodejs /usr/local/bin/node && \ 
    apt-get clean




COPY tools /opt/tools


# Install npm packages
RUN npm install -g cordova ionic
RUN npm install -g grunt-cli
RUN npm install -g gulp
RUN npm install -g bower


RUN ionic start ionic-demo sidemenu


# Expose port: web (8100), livereload (35729)
EXPOSE 8100 35729




#ANDROID
#JAVA


# ENV DEBIAN_FRONTEND noninteractive
RUN dpkg-reconfigure debconf -f Noninteractive


# install python-software-properties (so you can do add-apt-repository)
RUN apt-get update && apt-get install -y -q python-software-properties software-properties-common && apt-get clean


# install oracle java from PPA
# RUN add-apt-repository ppa:webupd8team/java -y
RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
#echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections
# RUN apt-get update && apt-get -y install oracle-java7-installer && apt-get clean


RUN echo ""deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" | tee /etc/apt/sources.list.d/webupd8team-java.list
RUN echo ""deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"" | tee -a /etc/apt/sources.list.d/webupd8team-java.list
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886
RUN apt-get update &&  \
    apt-get install -y oracle-java8-installer && \
    apt-get clean


#ANDROID STUFF
RUN dpkg --add-architecture i386 && apt-get update && apt-get install -y --force-yes expect ant wget libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 qemu-kvm kmod && apt-get clean


# Install Android SDK
RUN cd /opt && wget --output-document=android-sdk.tgz --quiet http://dl.google.com/android/android-sdk_r24.0.2-linux.tgz && tar xzf android-sdk.tgz && rm -f android-sdk.tgz


# Setup environment
ENV ANDROID_HOME /opt/android-sdk-linux
ENV PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools


# Install sdk elements
ENV PATH ${PATH}:/opt/tools


RUN echo ANDROID_HOME=""${ANDROID_HOME}"" >> /etc/environment


RUN [""/opt/tools/android-accept-licenses.sh"", ""android update sdk --all --no-ui --filter platform-tools,tools,build-tools-21.1.2,android-19,addon-google_apis_x86-google-19,extra-android-support,extra-android-m2repository,extra-google-m2repository,sys-img-x86-android-21""]




WORKDIR ionic-demo
CMD [""ionic"", ""serve"", ""--all"", ""--port"", ""8100"", ""--livereload-port"", ""35729""]
",,2015-03-03 18:42:00,2017-11-06 16:56:35,https://github.com/gleclaire/docker-ionic-framework
0,denisdbell/foodierun,,"FROM dockerfile/nodejs


MAINTAINER Matthias Luebken, matthias@catalyst-zero.com


WORKDIR /home/mean


# Install Mean.JS Prerequisites
RUN npm install -g grunt-cli
RUN npm install -g bower


# Install Mean.JS packages
ADD package.json /home/mean/package.json
RUN npm install


# Manually trigger bower. Why doesnt this work via npm install?
ADD .bowerrc /home/mean/.bowerrc
ADD bower.json /home/mean/bower.json
RUN bower install --config.interactive=false --allow-root


# Make everything available for start
ADD . /home/mean


# currently only works for development
ENV NODE_ENV development


# Port 3000 for server
# Port 35729 for livereload
EXPOSE 3000 35729
CMD [""grunt""]
","JavaScript
76.7%





HTML
21.5%





CSS
1.2%





Other
0.6%",2015-03-12 04:25:46,2015-03-13 04:48:36,https://github.com/denisdbell/foodierun
1,mgmonteleone/crobanksFXREST,,"FROM ubuntu:latest
RUN apt-get update && apt-get upgrade -y && apt-get -y install python libffi-dev libssl-dev build-essential gunicorn python-dev python-pip && apt-get clean
ADD . /app
RUN pip install -r /app/requirements.txt
EXPOSE 5000
WORKDIR /app
CMD gunicorn --config unicorn.conf.py --log-file=-  run:app
","JavaScript
81.3%





CSS
10.9%





Python
6.8%





Other
1.0%",2015-03-11 01:38:08,2015-03-28 19:06:57,https://github.com/mgmonteleone/crobanksFXREST
2,jjworren/atlassian-jira,,"############################################################
# Dockerfile to run Atlassian Jira
# Based on phusion/baseimage image
############################################################


FROM jjworren/docker-base:jessie


MAINTAINER Jan Kubat ""jan.kubat@release.cz""


# Set environment 
ENV JIRA_VERSION 7.0.5
ENV JIRA_INSTALL /opt/atlassian/jira
ENV JIRA_HOME    /var/atlassian/jira


# Expose ports
EXPOSE 8080


# Update system
RUN apt-get update && apt-get upgrade --yes


# install wget for late use
RUN apt-get install --yes wget


# Install JDK 7 and VCS tools //thanks to hwuethrich/bamboo-server
#RUN apt-get install -yq software-properties-common && add-apt-repository ppa:webupd8team/java -y && apt-get update
RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
#RUN apt-get install -yq oracle-java7-installer git subversion


RUN echo ""deb http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main"" | tee /etc/apt/sources.list.d/webupd8team-java.list
RUN echo ""deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu trusty main"" | tee -a /etc/apt/sources.list.d/webupd8team-java.list
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886
RUN apt-get update
RUN apt-get install -y oracle-java8-installer


# download and extract jira
RUN mkdir -p ""${JIRA_INSTALL}""
RUN wget -qO- ""https://www.atlassian.com/software/jira/downloads/binary/atlassian-jira-software-7.0.0-jira-${JIRA_VERSION}.tar.gz"" | tar -xz --directory=""${JIRA_INSTALL}""
RUN mv ""${JIRA_INSTALL}/atlassian-jira-software-${JIRA_VERSION}-standalone"" ""${JIRA_INSTALL}/atlassian-jira-${JIRA_VERSION}""
RUN echo ""set jira.home = ${JIRA_HOME}"" > ""${JIRA_INSTALL}/atlassian-jira-${JIRA_VERSION}/atlassian-jira/WEB-INF/classes/jira-application.properties""


# Download and install mysql jdbc driver
RUN wget -qO- http://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.34.tar.gz | tar -xz --directory=""/tmp"" ""mysql-connector-java-5.1.34/mysql-connector-java-5.1.34-bin.jar""
RUN mv ""/tmp/mysql-connector-java-5.1.34/mysql-connector-java-5.1.34-bin.jar"" \
 ""${JIRA_INSTALL}/atlassian-jira-${JIRA_VERSION}/atlassian-jira/WEB-INF/lib/""


# Clean up
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Dirs
VOLUME [""/var/atlassian/jira""]


# Start jira
ENTRYPOINT ${JIRA_INSTALL}/atlassian-jira-${JIRA_VERSION}/bin/start-jira.sh -fg
",,2015-02-26 12:35:47,2015-02-26 12:35:47,https://github.com/jjworren/atlassian-jira
3,xforty/ruby-fips,"Organization(name=None, id=551881)","FROM phusion/baseimage
MAINTAINER Matt Edlefsen <matt@xforty.com>


CMD [""/sbin/my_init""]


RUN DEBIAN_FRONTEND=noninteractive apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get install -y python patch gawk g++ gcc make libc6-dev patch libreadline6-dev zlib1g-dev libyaml-dev libsqlite3-dev sqlite3 autoconf libgdbm-dev libncurses5-dev automake libtool bison pkg-config libffi-dev 


RUN cd /root && curl 'https://www.openssl.org/source/openssl-fips-2.0.7.tar.gz' | tar -xz
RUN cd /root/openssl-fips-2.0.7; ./config; make; make install


RUN cd /root && curl 'https://www.openssl.org/source/openssl-1.0.1h.tar.gz' | tar -xz
RUN cd /root/openssl-1.0.1h; ./config fips shared -fPIC; make depend; make; make install


RUN echo 'export PATH=""/usr/local/ssl/bin:$PATH""' > /etc/profile.d/usr-local-ssl.sh && chmod +x /etc/profile.d/usr-local-ssl.sh


RUN bash -c 'source /etc/profile.d/usr-local-ssl.sh && openssl version | grep fips'


RUN \curl -sSL https://get.rvm.io | bash -s stable


RUN bash -l -c 'rvm autolibs disable'


RUN bash -l -c 'rvm install --disable-binary ruby -C --with-openssl-dir=/usr/local/ssl --with-static-linked-ext'
","Shell
100.0%",2015-02-25 21:13:33,2015-02-25 21:13:58,https://github.com/xforty/ruby-fips
4,korczis/docker-conf2015,,"FROM    centos:centos6


# Enable EPEL for Node.js
RUN     rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
# Install Node.js and npm
RUN     yum install -y npm


# Bundle app source
COPY . /src
# Install app dependencies
RUN cd /src; npm install


EXPOSE  8080
CMD [""node"", ""/src/index.js""]
","JavaScript
100.0%",2015-02-27 09:21:19,2015-02-27 10:00:50,https://github.com/korczis/docker-conf2015
5,bghtrbb/Kurbenetes-Graphhopper,,"FROM google/cloud-sdk:latest
MAINTAINER bghtrbb, bghtrbb@sogetthis.com


ADD assets /tmp


RUN docker run -t -i --name gcloud-kurb-setup kurbenetes-graphhopper
RUN gcloud auth login
",,2015-02-24 00:47:47,2017-05-09 16:08:34,https://github.com/bghtrbb/Kurbenetes-Graphhopper
6,soupisawesome/docker-data,,"FROM ubuntu:14.04


MAINTAINER ""Philip Bower"" <pabower@gmail.com>


RUN mkdir -p /data/www && \
	mkdir -p /data/logs


VOLUME [""/data""]
CMD [""true""]
",,2015-02-09 21:48:41,2015-02-09 21:48:41,https://github.com/soupisawesome/docker-data
7,brendanmckenzie/flask-imageserver,,"FROM tiangolo/uwsgi-nginx-flask:flask


COPY ./ /app/


RUN [""pip"", ""install"", ""-r"", ""/app/requirements.txt""]
","Python
100.0%",2015-02-09 00:24:43,2016-11-18 10:06:56,https://github.com/brendanmckenzie/flask-imageserver
8,gpeegpee/algospot,,"FROM ubuntu:14.04
MAINTAINER GangHeok Kim ""gpeegpee@gmail.com""


RUN apt-get update && \
    apt-get --no-install-recommends install -q -y openjdk-7-jre-headless && \
    rm -rf /var/lib/apt/lists/*


RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 9B7D32F2D50582E6
RUN	echo ""deb http://pkg.jenkins-ci.org/debian binary/"" > /etc/apt/sources.list.d/jenkins.list && \
	apt-get update && apt-get install -q -y jenkins
ENV JENKINS_HOME /jenkins
RUN service jenkins start
#ENTRYPOINT [""java"", ""-jar"", ""/opt/jenkins.war""]
EXPOSE 8080
#CMD [""""]
","C
97.9%





C++
2.1%",2015-02-04 13:14:26,2016-03-01 05:30:26,https://github.com/gpeegpee/algospot
9,lee-dohm/endokken.info,,"FROM node:0.10-onbuild
EXPOSE 3000
","CSS
75.4%





CoffeeScript
24.3%





JavaScript
0.3%",2015-02-05 15:08:28,2015-02-12 01:40:38,https://github.com/lee-dohm/endokken.info
10,lee-dohm/atom-linguist,,"# This file describes the standard way to build Docker, using docker
docker-version 0.4.2
from	ubuntu:12.04
maintainer	Solomon Hykes <solomon@dotcloud.com>
# Build dependencies
run	apt-get install -y -q curl
run	apt-get install -y -q git
# Install Go
run	curl -s https://go.googlecode.com/files/go1.1.1.linux-amd64.tar.gz | tar -v -C /usr/local -xz
env	PATH	/usr/local/go/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
env	GOPATH	/go
env	CGO_ENABLED 0
run	cd /tmp && echo 'package main' > t.go && go test -a -i -v
# Download dependencies
run	PKG=github.com/kr/pty REV=27435c699;		 git clone http://$PKG /go/src/$PKG && cd /go/src/$PKG && git checkout -f $REV
run	PKG=github.com/gorilla/context/ REV=708054d61e5; git clone http://$PKG /go/src/$PKG && cd /go/src/$PKG && git checkout -f $REV
run	PKG=github.com/gorilla/mux/ REV=9b36453141c;	 git clone http://$PKG /go/src/$PKG && cd /go/src/$PKG && git checkout -f $REV
# Run dependencies
run	apt-get install -y iptables
# lxc requires updating ubuntu sources
run	echo 'deb http://archive.ubuntu.com/ubuntu precise main universe' > /etc/apt/sources.list
run	apt-get update
run	apt-get install -y lxc
run	apt-get install -y aufs-tools
# Upload docker source
add	.       /go/src/github.com/dotcloud/docker
# Build the binary
run	cd /go/src/github.com/dotcloud/docker/docker && go install -ldflags ""-X main.GITCOMMIT '??' -d -w""
env	PATH	/usr/local/go/bin:/go/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin
cmd	[""docker""]
","CoffeeScript
88.3%





C++
10.7%





Other
1.0%",2015-01-18 19:02:45,2016-04-22 06:16:08,https://github.com/lee-dohm/atom-linguist
11,nalai/docker-c6oracja8-tomcat7,,"FROM nalai/centos6-oraclejava8
MAINTAINER Nathaniel Lai ""nathaniel.lai@retrievercommunications.com""


#Install Tomcat 7


#Download the latest Tomcat 7 and copy to /usr/local
RUN yum -y install tar
RUN wget ""http://apache.mirror.uber.com.au/tomcat/tomcat-7/v7.0.57/bin/apache-tomcat-7.0.57.tar.gz"" \
		 -O /apache-tomcat-7.0.57.tar.gz && \
	    tar xvzf /apache-tomcat-7.0.57.tar.gz && \
    rm /apache-tomcat-7.0.57.tar.gz && \
    rm -rf /apache-tomcat-7.0.57/webapps/docs && \
    rm -rf /apache-tomcat-7.0.57/webapps/examples && \
    mv /apache-tomcat-7.0.57/ /usr/local/ && \	
    yum clean all
 
# Need this to avoid the following message:
# The APR based Apache Tomcat Native library which allows optimal performance in
# production environments was not found on the java.library.path
# This step will give warnings but they don't seem to cause any problems
RUN rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm && \
    yum -y install tomcat-native && \
    yum clean all


# Overwrite the default to set a user/password for Tomcat manager
ADD tomcat-users.xml /usr/local/apache-tomcat-7.0.57/conf/tomcat-users.xml


# TODO enable SSL by creating a key, moving it to right tomcat location and edit server.xml
# RUN keytool -genkey -alias tomcat -keyalg RSA
# RUN mv /root/.keystore /usr/share/tomcat6/
# <Connector port=""8443"" protocol=""HTTP/1.1"" SSLEnabled=""true""
#              maxThreads=""150"" scheme=""https"" secure=""true""
#              clientAuth=""false"" sslProtocol=""TLS"" />
#EXPOSE 8443


# Expose the standard Tomcat ports
EXPOSE 8080
",,2015-01-27 05:17:36,2016-10-12 05:02:38,https://github.com/nalai/docker-c6oracja8-tomcat7
12,maosanhioro/docker-phabricator,,"# VERSION   0.1
# DOCKER-VERSION  1.4.1
#


FROM centos:centos6
MAINTAINER maosanhioro <maosanhioro@gmail.com>


RUN yum update -y
RUN yum install -y wget git


# Repository (epel, remi)
RUN wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm;\
    wget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm;\
    rpm -ivh epel-release-6-8.noarch.rpm remi-release-6.rpm


# Apache, PHP, MySQL
RUN yum --enablerepo=remi,remi-php55 install -y httpd php php-cli php-common php-devel php-gd php-mbstring php-mcrypt php-opcache php-pecl-apcu php-pdo php-process php-mysqlnd mysql-server
ADD ./phabricator.conf /etc/httpd/conf.d/phabricator.conf


# Supervisor
RUN curl -kL https://raw.github.com/pypa/pip/master/contrib/get-pip.py | python
RUN pip install supervisor
RUN mkdir -p /var/log/supervisor
ADD ./supervisord.conf /etc/supervisord.conf


RUN mkdir /usr/share/phabricator
WORKDIR /usr/share/phabricator


# Phabricator
RUN git clone https://github.com/phacility/libphutil.git;\
    cd libphutil && git pull --rebase
RUN git clone https://github.com/phacility/arcanist.git;\
    cd arcanist && git pull --rebase
RUN git clone https://github.com/phacility/phabricator.git;\
    cd phabricator && git pull --rebase


ADD ./setup.sh /opt/setup.sh


EXPOSE 9000
CMD [""/usr/bin/supervisord""]
","Shell
100.0%",2015-02-01 06:09:14,2015-02-01 07:34:29,https://github.com/maosanhioro/docker-phabricator
13,yokogawa-k/docker-urlwatch,,"FROM python:2
MAINTAINER Kazuya Yokogawa ""yokogawa-k@klab.com""


ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update \
    && apt-get -y install \
    lynx \
    html2text \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists 


WORKDIR /work
RUN pip install futures \
    && git clone https://github.com/thp/urlwatch.git \
    && cd urlwatch \
    && python setup.py install \
    && rm -rvf /root/.cache/ /work/urlwatch


CMD urlwatch -v -c /work/cache/ --urls=/work/urls.txt --hooks=/work/hooks.py


","Python
100.0%",2015-01-25 15:24:57,2015-02-16 10:38:55,https://github.com/yokogawa-k/docker-urlwatch
14,smira/test1,,"FROM busybox:ubuntu-14.04


ADD ./test1 /usr/bin/


EXPOSE 3000


ENTRYPOINT [""test1""]
","Go
93.4%





Makefile
6.6%",2015-02-19 21:51:28,2015-02-22 14:21:26,https://github.com/smira/test1
15,AMileikis/play-scala-docker,,"FROM ubuntu:14.04


#Install common repositories, unzip and git
RUN apt-get -y install software-properties-common
RUN apt-get install unzip
RUN apt-get install -y wget git


#Install java
RUN \
  echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \
  add-apt-repository -y ppa:webupd8team/java && \
  apt-get update && \
  apt-get install -y oracle-java8-installer && \
  rm -rf /var/lib/apt/lists/* && \
  rm -rf /var/cache/oracle-jdk8-installer


#Install sbt
RUN \
  wget https://dl.bintray.com/sbt/debian/sbt-0.13.6.deb && \
  dpkg -i sbt-0.13.6.deb && \
  apt-get update && \
  sudo apt-get install -y sbt


ENV JAVA_HOME /usr/lib/jvm/java-8-oracle


EXPOSE 9217


#Clone my-app and build it
RUN \
  cd ../usr/src && \
  git clone https://github.com/AMileikis/play-scala-docker.git && \
  cd play-scala-docker/my-app && \
  sbt dist


RUN mkdir -p /usr/src/play-scala-docker/app


RUN mv /usr/src/play-scala-docker/my-app/target/universal/my-app-1.0.0-SNAPSHOT.zip /usr/src/play-scala-docker/app


#Unzip the build, remove the leftover zip file
RUN cd /usr/src/play-scala-docker/app && \
    unzip my-app-1.0.0-SNAPSHOT.zip && \
    rm *.zip


#At run-time, this command is executed - run the application on port 9217
CMD /usr/src/play-scala-docker/app/my-app-1.0.0-SNAPSHOT/bin/my-app -Dhttp.port=9217


","XSLT
80.1%





CSS
17.3%





Scala
2.3%





Other
0.3%",2015-03-02 12:12:02,2015-03-04 13:55:57,https://github.com/AMileikis/play-scala-docker
16,firstandthird/proxy-npm-bower,"Organization(name=None, id=4642413)","FROM nginx:1.7.9
MAINTAINER First+Third code@firstandthird.com


RUN echo ""daemon off;"" >> /etc/nginx/nginx.conf


RUN mkdir -p /var/cache/npm/data && mkdir -p /var/cache/bower/data
ADD npm.conf /etc/nginx/conf.d/npm.conf
ADD bower.conf /etc/nginx/conf.d/bower.conf


EXPOSE 8001
EXPOSE 8002


CMD [""/usr/sbin/nginx"", ""-c"", ""/etc/nginx/nginx.conf""]
",,2015-02-07 16:20:44,2016-06-07 14:03:20,https://github.com/firstandthird/proxy-npm-bower
17,sw360cab/java6-docker,,"FROM ubuntu:14.04


MAINTAINER Giuseppe Vavala
MAINTAINER Sergio Matone


# ADD JAVA repo
RUN apt-get update && apt-get install -y \
  python-software-properties \
  software-properties-common
RUN add-apt-repository ppa:webupd8team/java


# Install Java
RUN echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections
RUN echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections
RUN apt-get update && apt-get -y install oracle-java6-installer
",,2015-02-13 10:21:27,2015-03-06 10:18:13,https://github.com/sw360cab/java6-docker
18,nob13/teamcity_docker,,"FROM java:8-jre


MAINTAINER Norbert Schultz


VOLUME  [""/data/teamcity""]
ENV TEAMCITY_DATA_PATH /data/teamcity


RUN curl -L https://download.jetbrains.com/teamcity/TeamCity-9.1.7.tar.gz | tar xz -C /opt


# Note: we cannot download the Postgres (or other) database JDBC drivers so easily because
# Teamcity want's them inside the /data/teamcity/lib/jdbc directory.
# but dockerfiles cannot write into directories which are supposed to be exposed.
# If you are creating a fresh new server, then you have to add this by hand
# See: https://confluence.jetbrains.com/display/TCD9/Setting+up+an+External+Database


EXPOSE 8111
CMD [""/opt/TeamCity/bin/teamcity-server.sh"", ""run""]


",,2015-02-03 19:54:32,2016-08-08 14:01:20,https://github.com/nob13/teamcity_docker
19,freshjones/docker_saasafari_lemp,,"# Set the base image to debian
FROM freshjones/lemp:latest


# File Author / Maintainer
MAINTAINER William Jones <billy@freshjones.com>


#copy in the app
COPY app/ /app/


CMD [""/usr/bin/supervisord"", ""-c"", ""/etc/supervisor/conf.d/supervisord.conf""]
","PHP
100.0%",2015-02-01 20:48:10,2015-02-01 20:57:56,https://github.com/freshjones/docker_saasafari_lemp
20,tarpas/pytest-testmon,,"FROM python:3.4
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app


COPY requirements.txt /usr/src/app/
RUN pip install --no-cache-dir -r requirements.txt


COPY . /usr/src/app


RUN pip install -e .


RUN py.test -v --tb=native
","Python
100.0%",2015-02-02 14:21:10,2017-12-04 22:42:13,https://github.com/tarpas/pytest-testmon
21,dockerbase/devbase-kafka,"Organization(name=None, id=8687710)","# VERSION 1.0
# DOCKER-VERSION  1.2.0
# AUTHOR:         Richard Lee <lifuzu@gmail.com>
# DESCRIPTION:    Devbase-kafka Image Container


FROM dockerbase/devbase-scala


USER    root


# Run dockerbase script
ADD     kafka.sh /dockerbase/
RUN     /dockerbase/kafka.sh


ENV     KAFKA_HOME /usr/local/kafka
ENV     PATH $PATH:$KAFKA_HOME/bin


USER    devbase


# Set environment variables.
ENV     HOME /home/devbase


# Define working directory.
WORKDIR /home/devbase


","Makefile
60.1%





Shell
39.9%",2015-02-05 23:23:03,2015-02-05 23:23:33,https://github.com/dockerbase/devbase-kafka
22,krippendorf/docker-tomcat7,,"FROM ubuntu:trusty
MAINTAINER Frank Werner-Krippendorf (wkf   (/a/t)  kripp (/d/o/t) ch)


##### add python-sofware-properties to install add-apt-repository
RUN apt-get update
RUN apt-get -y install software-properties-common curl




##### webupd8team reposiotry
# details:  http://www.webupd8.org/2012/01/install-oracle-java-jdk-7-in-ubuntu-via.html
RUN add-apt-repository ppa:webupd8team/java


#####  update & upgrade
RUN apt-get update && apt-get -y upgrade


##### Install oracle Java


# http://askubuntu.com/questions/190582/installing-java-automatically-with-silent-option
RUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections


RUN apt-get -y install oracle-java7-installer


# set JAVA_HOME
ENV JAVA_HOME /usr/lib/jvm/java-7-oracle


#### install tomcat7


EXPOSE 8080


ENV CATALINA_HOME /tomcat7
RUN addgroup --gid 1600 tomcat7
RUN adduser --disabled-password --home=/tomcat7 --gecos """" --uid 10500 tomcat7 --gid 1600


WORKDIR /tomcat7


# see https://github.com/docker-library/tomcat/blob/278a10ace50c5e7addd879fae5c5332e57b2fe37/7-jre7/Dockerfile 
RUN gpg --keyserver pool.sks-keyservers.net --recv-keys \
	05AB33110949707C93A279E3D3EFE6B686867BA6 \
	07E48665A34DCAFAE522E5E6266191C37C037D42 \
	47309207D818FFD8DCD3F83F1931D684307A10A5 \
	541FBE7D8F78B25E055DDEE13C370389288584E7 \
	61B832AC2F1C5A90F0F9B00A1C506407564C17A3 \
	713DA88BE50911535FE716F5208B0AB1D63011C7 \
	79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED \
	9BA44C2621385CB966EBA586F72C284D731FABEE \
	A27677289986DB50844682F8ACB77FC2E86E29AC \
	A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 \
	DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 \
	F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE \
	F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23




ENV TOMCAT_MAJOR 7
ENV TOMCAT_VERSION 7.0.59
ENV TOMCAT_TGZ_URL https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz


RUN curl -SL ""$TOMCAT_TGZ_URL"" -o tomcat.tar.gz \
	&& curl -SL ""$TOMCAT_TGZ_URL.asc"" -o tomcat.tar.gz.asc \
	&& gpg --verify tomcat.tar.gz.asc \
	&& tar -xvf tomcat.tar.gz --strip-components=1 \
	&& rm bin/*.bat \
	&& rm tomcat.tar.gz*




add confs/catalina.policy /tomcat7/conf/catalina.policy
add confs/catalina.properties /tomcat7/conf/catalina.properties
add confs/context.xml /tomcat7/conf/context.xml
add confs/logging.properties /tomcat7/conf/logging.properties
add confs/server.xml /tomcat7/conf/server.xml
add confs/tomcat-users.xml /tomcat7/conf/tomcat-users.xml
add confs/web.xml /tomcat7/conf/web.xml
add run.sh /tomcat7/run.sh


RUN chown -R tomcat7:tomcat7 /tomcat7
RUN chmod +x /tomcat7/bin/catalina.sh
RUN chmod +x /tomcat7/run.sh


USER tomcat7


CMD /tomcat7/run.sh
","Shell
100.0%",2015-02-06 18:57:35,2015-02-07 12:26:00,https://github.com/krippendorf/docker-tomcat7
23,kiloe/arla10k,"Organization(name=None, id=11064052)","FROM arla/base
EXPOSE 80
COPY src/arla/querystore/conf/postgresql.conf /var/lib/postgresql/postgresql.conf
COPY src/arla/querystore/conf/pg_hba.conf /var/lib/postgresql/pg_hba.conf
COPY bin/arla /bin/
COPY bin/test /bin/
RUN mkdir -p /var/state \
	&& mkdir -p /app \
	&& chown -R postgres:postgres /var/lib/postgresql \
	&& mkdir -p /var/run/postgresql/stats \
	&& chown -R postgres:postgres /var/run/postgresql
WORKDIR /app
ENTRYPOINT [""/bin/arla""]
","Go
95.5%





HTML
2.1%





Assembly
1.2%





JavaScript
1.1%





C
0.1%





Makefile
0.0%",2015-02-18 18:19:03,2016-01-16 18:46:05,https://github.com/kiloe/arla10k
24,kiloe/arla10k,"Organization(name=None, id=11064052)","#
# This Dockerfile builds a recent curl with HTTP/2 client support, using
# a recent nghttp2 build.
#
# See the Makefile for how to tag it. If Docker and that image is found, the
# Go tests use this curl binary for integration tests.
#


FROM ubuntu:trusty


RUN apt-get update && \
    apt-get upgrade -y && \
    apt-get install -y git-core build-essential wget


RUN apt-get install -y --no-install-recommends \
       autotools-dev libtool pkg-config zlib1g-dev \
       libcunit1-dev libssl-dev libxml2-dev libevent-dev \
       automake autoconf


# The list of packages nghttp2 recommends for h2load:
RUN apt-get install -y --no-install-recommends make binutils \
        autoconf automake autotools-dev \
        libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev \
        libev-dev libevent-dev libjansson-dev libjemalloc-dev \
        cython python3.4-dev python-setuptools


# Note: setting NGHTTP2_VER before the git clone, so an old git clone isn't cached:
ENV NGHTTP2_VER 895da9a
RUN cd /root && git clone https://github.com/tatsuhiro-t/nghttp2.git


WORKDIR /root/nghttp2
RUN git reset --hard $NGHTTP2_VER
RUN autoreconf -i
RUN automake
RUN autoconf
RUN ./configure
RUN make
RUN make install


WORKDIR /root
RUN wget http://curl.haxx.se/download/curl-7.45.0.tar.gz
RUN tar -zxvf curl-7.45.0.tar.gz
WORKDIR /root/curl-7.45.0
RUN ./configure --with-ssl --with-nghttp2=/usr/local
RUN make
RUN make install
RUN ldconfig


CMD [""-h""]
ENTRYPOINT [""/usr/local/bin/curl""]


","Go
95.5%





HTML
2.1%





Assembly
1.2%





JavaScript
1.1%





C
0.1%





Makefile
0.0%",2015-02-18 18:19:03,2016-01-16 18:46:05,https://github.com/kiloe/arla10k
25,friddle/Jdk7_Compile_Docker,,"# VERSION 1.0
FROM friddle/ali_mirrors_ubuntu
MAINTAINER friddle ""friddle@friddle.me""
RUN mkdir -p /root/jdkcompile
#拷贝JDK源文件
ADD ./jdk7u40 /root/jdkcompile
#装需要的软件
RUN apt-get install -y aptitude
#修改Mercurial的配置
RUN apt-get install -y mercurial
RUN hg clone http://bitbucket.org/pmezard/hgforest-crew /root/hgforest
RUN touch /root/.hgrc
RUN echo ""[extension]"" >> .hgrc
RUN echo ""forest=/root/hgforest/forest.py \n fetch="" >> .hgrc


#装依赖
RUN aptitude build-dep -y openjdk-7-jdk
RUN apt-get install -y ant
RUN apt-get install -y build-essential
RUN apt-get install -y libxrender-dev
RUN apt-get install -y xorg-dev
RUN apt-get install -y libasound2-dev
RUN apt-get install -y libcups2-dev
RUN apt-get install -y openjdk-7-jdk
RUN apt-get install -y systemtap-sdt-dev
RUN apt-get install -y gawk zip libxtst-dev libxi-dev libxt-dev


#设置系统环境
RUN export LANG=C
RUN export ALT_BOOTDIR=/root/java
RUN export ALLOW_DOWNLOADS=true
RUN unset JAVA_HOME
RUN unset CLASSPATH


#开始运行
RUN sh /root/jdkcompile/get_source.sh
RUN export ALT_BOOTDIR=/usr/lib/jvm/java-7-openjdk-amd64 
RUN cd /root/jdkcompile && make  


","Java
94.7%





HTML
2.2%





Makefile
1.6%





Shell
1.4%





Perl
0.1%",2015-02-17 16:47:30,2015-02-19 12:42:02,https://github.com/friddle/Jdk7_Compile_Docker
26,ebuchman/ccrg-wiki-dockers,,"#
# example Dockerfile for http://docs.docker.com/examples/postgresql_service/
#


FROM ubuntu
MAINTAINER SvenDowideit@docker.com


# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8


# Add PostgreSQL's repository. It contains the most recent stable release
#     of PostgreSQL, ``9.3``.
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y python-software-properties software-properties-common postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3


# Note: The official Debian and Ubuntu images automatically ``apt-get clean``
# after each ``apt-get``


# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres


# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER docker WITH SUPERUSER PASSWORD 'docker';"" &&\
    createdb -O docker docker


# Adjust PostgreSQL configuration so that remote connections to the
# database are possible. 
RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf


# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


# Expose the PostgreSQL port
EXPOSE 5432


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME  [""/etc/postgresql"", ""/var/log/postgresql"", ""/var/lib/postgresql""]


# Set the default command to run when starting the container
CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/var/lib/postgresql/9.3/main"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","PHP
84.8%





JavaScript
12.2%





CSS
1.8%





XML
0.6%





Perl
0.2%





Ruby
0.1%





Other
0.3%",2015-02-19 07:41:28,2015-02-19 18:18:14,https://github.com/ebuchman/ccrg-wiki-dockers
27,ebuchman/ccrg-wiki-dockers,,"FROM debian:stable


RUN apt-get update
RUN apt-get install nginx -y
RUN apt-get install php5-common php5-cli php5-fpm php5-pgsql -y




RUN useradd -ms /bin/bash wikiuser


COPY ./mediawiki /home/wikiuser/mediawiki


COPY ./nginx.conf /etc/nginx/nginx.conf
COPY ./default /etc/nginx/sites-available/default


COPY start.sh /


EXPOSE 80
#CMD  [""/bin/sh"", ""/start.sh""]


","PHP
84.8%





JavaScript
12.2%





CSS
1.8%





XML
0.6%





Perl
0.2%





Ruby
0.1%





Other
0.3%",2015-02-19 07:41:28,2015-02-19 18:18:14,https://github.com/ebuchman/ccrg-wiki-dockers
28,annantrouterabbit/mean2-seed,,"# Builds a Docker to deliver dist/
FROM nginx:latest
COPY dist/ /usr/share/nginx/html
","TypeScript
56.8%





JavaScript
34.4%





HTML
4.8%





CSS
4.0%",2016-12-15 06:11:24,2017-06-24 10:14:32,https://github.com/annantrouterabbit/mean2-seed
29,Daulbaev/everware,,"FROM yandex/rep:0.6.4
MAINTAINER Noel Dawe <noel.dawe@cern.ch>


# RUN bash --login -c ""pip install rootpy==0.8.0""
# RUN apt-get install -y curl
",,2016-12-13 10:46:08,2017-02-04 19:13:03,https://github.com/Daulbaev/everware
0,ibmsoe/ImpalaPPC,"Organization(name=None, id=6682298)","# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# ""License""); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


FROM ubuntu:14.04


# Install Git, which is missing from the Ubuntu base images.
RUN apt-get update && apt-get install -y git


# Add the dependencies from the hbase_docker folder and delete ones we don't need.
WORKDIR /root
ADD . /root
RUN find . -not -name ""*tar.gz"" -delete


# Install Java.
RUN mkdir -p /usr/java
RUN tar xzf *jdk* --strip-components 1 -C /usr/java
ENV JAVA_HOME /usr/java


# Install Maven.
RUN mkdir -p /usr/local/apache-maven
RUN tar xzf *maven* --strip-components 1 -C /usr/local/apache-maven
ENV MAVEN_HOME /usr/local/apache-maven


# Add Java and Maven to the path.
ENV PATH /usr/java/bin:/usr/local/apache-maven/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin


# Pull down HBase and build it into /root/hbase-bin.
RUN git clone http://git.apache.org/hbase.git -b branch-1
RUN mvn clean install -DskipTests assembly:single -f ./hbase/pom.xml
RUN mkdir -p hbase-bin
RUN tar xzf /root/hbase/hbase-assembly/target/*tar.gz --strip-components 1 -C /root/hbase-bin


# Set HBASE_HOME, add it to the path, and start HBase.
ENV HBASE_HOME /root/hbase-bin
ENV PATH /root/hbase-bin/bin:/usr/java/bin:/usr/local/apache-maven/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin


CMD [""/bin/bash"", ""-c"", ""start-hbase.sh; hbase shell""]
","C++
53.6%





Java
25.8%





Python
13.6%





C
2.7%





Thrift
1.7%





Shell
1.2%





Other
1.4%",2016-05-05 06:52:30,2017-09-18 21:26:09,https://github.com/ibmsoe/ImpalaPPC
1,tester-creator/testmdb,,"FROM ubuntu:12.04
MAINTAINER Remy Sharp <remy@leftlogic.com>


RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN apt-get update && apt-get install curl npm -y


ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 4
ENV NVM_VERSION 0.26.1
ENV TRAVIS TRUE


# # Install nvm with node and npm
RUN curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VERSION/install.sh | bash \
    && source $NVM_DIR/nvm.sh \
    && nvm install 0.10 \
    && nvm install 0.12 \
    && nvm install 4 \
    && nvm alias default $NODE_VERSION \
    && nvm use default
","JavaScript
60.6%





HTML
39.4%",2016-12-17 03:41:05,2016-12-17 03:53:08,https://github.com/tester-creator/testmdb
2,nicksenger/marvelous,,"FROM postgres:9.5
ENV PG_MAJOR 9.5


COPY docker-entrypoint-initdb.d/*.sql /docker-entrypoint-initdb.d/
COPY docker-entrypoint-initdb.d/*.sh /docker-entrypoint-initdb.d/
RUN chmod +x docker-entrypoint-initdb.d/*.sh


WORKDIR /home/postgres


EXPOSE 5432
CMD [""postgres""]
","JavaScript
90.9%





PLpgSQL
6.2%





CSS
1.8%





Other
1.1%",2016-12-16 00:01:45,2016-12-16 00:38:43,https://github.com/nicksenger/marvelous
3,lxxpsp2007/docker,,"FROM devel:5000/centos:7.2.1511


VOLUME [ ""/opt/mysql/"" ]
","Shell
68.6%





Nginx
18.0%





Other
13.4%",2016-12-05 03:33:36,2016-12-05 03:44:04,https://github.com/lxxpsp2007/docker
4,lxxpsp2007/docker,,"FROM centos:7.2.1511
MAINTAINER  HJ lxxpsp2007@126.com


ADD mysql-5.6.26.tar.gz /usr/local/
ADD my.cnf /usr/local/mysql-5.6.26/etc/
ADD run.sh /
ADD 9z.repo /etc/yum.repos.d/
RUN yum install -y perl perl-Data-Dumper ;mkdir /database ; groupadd -g 27 mysql;useradd mysql -u 27 -g 27 -M -s /sbin/nologin


EXPOSE 3306
CMD [ ""/run.sh"" ]
ENTRYPOINT [ ""bash"" ]
","Shell
68.6%





Nginx
18.0%





Other
13.4%",2016-12-05 03:33:36,2016-12-05 03:44:04,https://github.com/lxxpsp2007/docker
5,rbarcia/refarch-cloudnative-micro-socialreview-refarch-cloudnative-devops-1481835793779,,"FROM java:8
VOLUME /tmp
ADD app.jar app.jar
RUN bash -c 'touch /app.jar'


# Install prereqs
RUN apt-get update && apt-get install -y jq


# Copy agent files
COPY agents/ /agents/


# Add the new relic agent
RUN wget https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip -O /tmp/newrelic.zip \
  && unzip -u -d /agents /tmp/newrelic.zip newrelic/newrelic.jar \
  && rm /tmp/newrelic.zip


COPY startup.sh startup.sh
EXPOSE 8080
ENTRYPOINT [""./startup.sh""]
","Java
84.9%





Shell
14.6%





Groovy
0.5%",2016-12-15 21:03:53,2016-12-15 21:03:58,https://github.com/rbarcia/refarch-cloudnative-micro-socialreview-refarch-cloudnative-devops-1481835793779
6,alfaluck/dd-agent,,"FROM datadog/docker-dd-agent:latest-alpine


MAINTAINER Anton Shedlovsky <alfaluck@gmail.com>


#ENV DD_API_KEY
#ENV DD_HOSTNAME
#ENV DD_TAGS
#ENV EC2_TAGS yes
#ENV DD_LOG_LEVEL DEBUG
#ENV PROXY_HOST
#ENV PROXY_PORT
#ENV PROXY_USER
#ENV PROXY_PASSWORD
#ENV DD_URL
#ENV NON_LOCAL_TRAFFIC


#Service discovery
#Another way to enable checks is through service discovery. This is particularly useful in dynamic environments like Kubernetes, Amazon ECS or Docker Swarm. More details about this feature can be found in the doc. (http://docs.datadoghq.com/guides/servicediscovery/)
#ENV SD_BACKEND
#ENV SD_CONFIG_BACKEND
#ENV SD_BACKEND_HOST
#ENV SD_BACKEND_PORT
#ENV SD_TEMPLATE_DIR
#ENV SD_CONSUL_TOKEN


#ENV KUBERNETES yes
#ENV KUBERNETES_COLLECT_EVENTS yes
#ENV KUBERNETES_KUBELET_HOST
#ENV MESOS_MASTER yes
#ENV MESOS_SLAVE yes
#ENV MARATHON_URL


ADD conf.d/docker_daemon.yaml /opt/datadog-agent/agent/conf.d/docker_daemon.yaml
",,2016-12-14 16:27:06,2016-12-14 16:27:06,https://github.com/alfaluck/dd-agent
7,pdl5p/aspnet-core-redux-react,,"FROM microsoft/dotnet:latest


RUN apt-get update
RUN wget -qO- https://deb.nodesource.com/setup_4.x | bash -
RUN apt-get install -y build-essential nodejs


WORKDIR /app


COPY project.json .
RUN [""dotnet"", ""restore""]


COPY . /app
RUN [""dotnet"", ""build""]


EXPOSE 5000/tcp


ENTRYPOINT [""dotnet"", ""run"", ""--server.urls"", ""http://0.0.0.0:5000""]
","TypeScript
54.4%





C#
20.9%





JavaScript
19.6%





CSS
5.1%",2016-12-17 02:37:12,2016-12-18 03:32:49,https://github.com/pdl5p/aspnet-core-redux-react
8,openthings/ubuntu-nodejs,,"#Name:		openthings/ubuntu-nodejs:ARM64
#Base:		openthings/ubuntu-rock
#Source:	github.com/openthings/ubuntu-nodejs


FROM openthings/ubuntu-rock:ARM64
MAINTAINER openthings <openthings@163.com>


#RUN apt-get update  
#RUN apt-get install -y wget curl
##&& apt-get upgrade -y


# gpg keys listed at https://github.com/nodejs/node


#ENV NODE_VERSION ""4.2.2""
#ENV ARCH arm64


#RUN wget https://nodejs.org/dist/v6.9.2/node-v6.9.2-linux-arm64.tar.xz &&\
#	tar -xJf ""node-v6.9.2-linux-arm64.tar.xz"" -C /usr/local --strip-components=1 &&\
#COPY ./node-v6.9.2-linux-arm64	/usr/local


COPY ./node-v4.2.2-linux-arm64	/usr/local
CMD [""node""]
","C
76.8%





C++
21.8%





Other
1.4%",2016-12-17 15:27:27,2016-12-18 12:47:06,https://github.com/openthings/ubuntu-nodejs
9,glonass-project/glonass-node-geoapi-polling-server,"Organization(name=None, id=24256672)","FROM node:7.2.1


MAINTAINER Mikhail Faraponov


RUN mkdir /app


WORKDIR /app


COPY package.json /app/package.json


RUN npm install --no-optional && npm install nodemon -g --no-optional


COPY . /app


CMD nodemon -L
","JavaScript
100.0%",2016-12-08 18:02:25,2016-12-12 21:24:50,https://github.com/glonass-project/glonass-node-geoapi-polling-server
10,CarolineCarter/DockerFYP,,"# Set the base image to Ubuntu
FROM ubuntu:latest
MAINTAINER Maintaner Name


# Update the repository
#RUN apt-get update


# Install necessary tools
RUN apt-get install -y curl


# Download and Install Nginx
RUN apt-get install -y nginx 


#ADD index.html /var/www/
ADD mime_types /etc/nginx/
#ADD querycalc.js /var/www/static/
#ADD base.css /var/www/


# Remove the default Nginx configuration file
RUN rm -v /etc/nginx/nginx.conf


# Copy a configuration file from the current directory
ADD nginx.conf /etc/nginx/nginx.conf


EXPOSE 80


# Set the default command to execute
# when creating a new container
CMD nginx
","Nginx
100.0%",2015-03-24 10:15:45,2015-03-24 10:26:22,https://github.com/CarolineCarter/DockerFYP
11,CarolineCarter/DockerFYP,,"# Set the base image to Ubuntu
FROM ubuntu:latest
MAINTAINER Maintaner Name


# Update the repository
#RUN apt-get update


# Install necessary tools
RUN apt-get install -y curl


# Download and Install Nginx
RUN apt-get install -y nginx 


#ADD index.html /var/www/
ADD mime_types /etc/nginx/
#ADD querycalc.js /var/www/static/
#ADD base.css /var/www/


# Remove the default Nginx configuration file
RUN rm -v /etc/nginx/nginx.conf


# Copy a configuration file from the current directory
VOLUME /var/log/webapp/nginx.conf /etc/nginx/


EXPOSE 80


# Set the default command to execute
# when creating a new container
CMD nginx
","Nginx
100.0%",2015-03-24 10:15:45,2015-03-24 10:26:22,https://github.com/CarolineCarter/DockerFYP
12,jenkins-infra/confluence-cache,"Organization(name=None, id=7422698)","FROM ubuntu:14.04
MAINTAINER Jenkins Infra team <infra@lists.jenkins-ci.org>


# Where to proxy the request to?
ENV TARGET http://backend:8080


RUN apt-get update \
    && apt-get install -y nginx \
    && rm -rf /var/lib/apt/lists/* \
    && echo ""\ndaemon off;"" >> /etc/nginx/nginx.conf


ADD site.conf /etc/nginx/sites-enabled/default
ADD cache.conf /etc/nginx/conf.d/cache.conf
ADD launch.bash /


WORKDIR /etc/nginx
VOLUME [""/cache""]
CMD [""/launch.bash""]
EXPOSE 8080
","Ruby
62.8%





Makefile
32.3%





Shell
4.9%",2015-03-30 00:59:40,2017-02-18 21:51:07,https://github.com/jenkins-infra/confluence-cache
13,Unicon/grouper-amqp-esb-publisher,"Organization(name=None, id=835400)","FROM unicon/grouper-demo


ADD grouper-config/*.properties /opt/grouper.apiBinary-2.2.1/conf/
ADD grouper-config/lib/*.jar /opt/grouper.apiBinary-2.2.1/lib/grouper/
","Groovy
47.6%





Java
47.5%





Shell
4.9%",2015-03-17 20:26:08,2017-10-31 23:51:08,https://github.com/Unicon/grouper-amqp-esb-publisher
14,harbur/docker-jq,"Organization(name=None, id=8222788)","FROM busybox:ubuntu-14.04
ADD /bin/jq /bin/
RUN chmod 744 /bin/jq
ENTRYPOINT [""/bin/jq""]
",,2015-03-18 12:10:40,2015-03-18 12:10:40,https://github.com/harbur/docker-jq
15,uvwxy/docker-habitrpg,,"FROM debian:8
MAINTAINER Paul Smith <code@uvwxy.de>


# Reload local package
RUN apt-get update


# Install required tools
RUN apt-get install -y \
		git \
		libfontconfig1 \ 
		libfreetype6 \
		nodejs \
		npm \
		python-software-properties
# Cleanup downloaded *.deb files
RUN apt-get clean


# Fetch HabitRPG
RUN git clone https://github.com/HabitRPG/habitrpg.git


# Fix nodejs vs node command
RUN cd /usr/bin/ && ln -s nodejs node


# Install HabitRPG build dependencies
RUN npm install -g grunt-cli bower phantomjs


# Setup HabitRPG environment
RUN cd /habitrpg && npm install && bower install --allow-root


ADD config.json /habitrpg/


EXPOSE 3000


WORKDIR /habitrpg/
CMD [""npm"", ""start""]
",,2015-03-13 20:35:57,2016-09-22 12:16:51,https://github.com/uvwxy/docker-habitrpg
16,lcacciagioni/mocker-nodejs,,"FROM cloudfoundry/cflinuxfs2
MAINTAINER Leandro David Cacciagioni <leandro.21.2008@gmail.com>


# Here we try to declare all the env vars that the DEA normally expose
# For VCAP_APPLICATION we have used the info provided in http://docs.run.pivotal.io/devguide/deploy-apps/environment-variable.html as of 03/31/2015
ENV DEBIAN_FRONTEND=noninteractive PORT=8080 VCAP_APP_PORT=8080 HOME=/home/vcap/app PWD=/home/vcap USER=vcap TMPDIR=/home/vcap/tmp VCAP_APP_HOST=0.0.0.0 VCAP_APPLICATION='{""instance_id"":""451f045fd16427bb99c895a2649b7b2a"",""instance_index"":0,""host"":""0.0.0.0"",""port"":8080,""started_at"":""2013-08-12 00:05:29 +0000"",""started_at_timestamp"":1376265929,""start"":""2013-08-12 00:05:29 +0000"",""state_timestamp"":1376265929,""limits"":{""mem"":512,""disk"":1024,""fds"":16384} ,""application_version"":""c1063c1c-40b9-434e-a797-db240b587d32"",""application_name"":""styx-james"",""application_uris"":[""styx-james.a1-app.cf-app.com""],""version"":""c1063c1c-40b9-434e-a797-db240b587d32"",""name"":""styx-james"",""uris"":[""styx-james.a1-app.cf-app.com""],""users"":null}' CF_INSTANCE_ADDR=1.2.3.4:8080 CF_INSTANCE_INDEX=0 CF_INSTANCE_IP=1.2.3.4 CF_INSTANCE_PORT=8080 CF_INSTANCE_PORTS=[{external:8080,internal:8080}] VCAP_SERVICES='{}'


# Here we will add the neccesary libs
RUN apt-get update && apt-get -qqy install git python-yaml unzip && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


ENTRYPOINT /entrypoint.sh


# Here we try to expose the default port
EXPOSE 8080


# We set the default working dir to the place where your app is
WORKDIR /home/vcap/app


# Here we add our code
ADD entrypoint.sh /entrypoint.sh


RUN mkdir /home/vcap/tmp && chmod 755 /entrypoint.sh
","Shell
100.0%",2015-04-01 16:12:09,2015-04-01 18:38:43,https://github.com/lcacciagioni/mocker-nodejs
17,dictybase-docker/wheel-jbrowse,"Organization(name=None, id=10727208)","FROM dictybase/bioperl-zmq-golang
MAINTAINER Siddhartha Basu <siddhartha-basu@northwestern.edu>
ENV PATH /go/bin:$PATH
RUN mkdir -p /usr/src/jbrowse
COPY runner/ /usr/src/jbrowse/
RUN cd /usr/src/jbrowse && cpanm -n --installdeps .
CMD [""app""]


","Perl
93.8%





Go
6.1%





Shell
0.1%",2015-03-24 18:23:53,2016-03-14 13:05:08,https://github.com/dictybase-docker/wheel-jbrowse
18,dictybase-docker/wheel-jbrowse,"Organization(name=None, id=10727208)","FROM dictybase/jbrowse:1.11.6
MAINTAINER Siddhartha Basu <siddhartha-basu@northwestern.edu>
RUN cd jbrowse \ 
    && mkdir -p data \
    && ln -sf /data/jbrowse data \
    && ln -sf /config/jbrowse/jbrowse.conf jbrowse.conf
","Perl
93.8%





Go
6.1%





Shell
0.1%",2015-03-24 18:23:53,2016-03-14 13:05:08,https://github.com/dictybase-docker/wheel-jbrowse
19,dictybase-docker/wheel-jbrowse,"Organization(name=None, id=10727208)","FROM dictybase/postgres:9.3
MAINTAINER Siddhartha Basu<siddhartha-basu@northwestern.edu>


RUN mkdir -p /docker-entrypoint-initdb.d && mkdir -p /config
COPY *.conf /config/
COPY create_genome_user.sh /docker-entrypoint-initdb.d/ 
","Perl
93.8%





Go
6.1%





Shell
0.1%",2015-03-24 18:23:53,2016-03-14 13:05:08,https://github.com/dictybase-docker/wheel-jbrowse
20,dictybase-docker/wheel-jbrowse,"Organization(name=None, id=10727208)","FROM dictybase/zmq-golang
MAINTAINER Siddhartha Basu <siddhartha-basu@northwestern.edu>
","Perl
93.8%





Go
6.1%





Shell
0.1%",2015-03-24 18:23:53,2016-03-14 13:05:08,https://github.com/dictybase-docker/wheel-jbrowse
21,arypurnomoz/fdb-golang.docker,,"FROM golang


RUN \
  apt-get update # && apt-get -y upgrade && \
  apt-get -y install python-software-properties python-setuptools


ADD https://foundationdb.com/downloads/f-afxudaxbxuuo/I_accept_the_FoundationDB_Community_License_Agreement/key-value-store/3.0.5/foundationdb-clients_3.0.5-1_amd64.deb /tmp/foundationdb-clients.deb


RUN dpkg -i /tmp/foundationdb-clients.deb


",,2015-03-16 23:15:29,2015-03-16 23:15:29,https://github.com/arypurnomoz/fdb-golang.docker
22,grahampugh/docker-munki-enroll,,"# munki-enroll (grahampugh fork) Dockerfile
# Version 0.1


FROM hunty1/munki-docker


MAINTAINER Graham Pugh (g.r.pugh@gmail.com)


RUN apt-get update && \
    apt-get install -y git && \
    apt-get clean


","Shell
100.0%",2015-03-16 23:02:52,2015-03-16 23:41:42,https://github.com/grahampugh/docker-munki-enroll
23,aguzmanballen/KAFeedbackFramework,,"#
# example Dockerfile for http://docs.docker.io/en/latest/examples/postgresql_service/
#


FROM ubuntu
MAINTAINER SvenDowideit@docker.com


# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc 
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8


# Add PostgreSQL's repository. It contains the most recent stable release
#     of PostgreSQL, ``9.3``.
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Update the Ubuntu and PostgreSQL repository indexes
RUN apt-get update


# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get -y -q install python-software-properties software-properties-common
RUN apt-get -y -q install postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3


# Note: The official Debian and Ubuntu images automatically ``apt-get clean``
# after each ``apt-get`` 


# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres


# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER docker WITH SUPERUSER PASSWORD 'docker';"" &&\
    createdb -O docker docker


# Adjust PostgreSQL configuration so that remote connections to the
# database are possible. 
RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf


# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


# Expose the PostgreSQL port
EXPOSE 5432


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME	[""/etc/postgresql"", ""/var/log/postgresql"", ""/var/lib/postgresql""]


# Set the default command to run when starting the container
CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/var/lib/postgresql/9.3/main"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","JavaScript
99.4%





HTML
0.5%





CSS
0.1%





Shell
0.0%





LiveScript
0.0%





Objective-C
0.0%",2015-03-17 05:08:45,2015-03-18 16:55:24,https://github.com/aguzmanballen/KAFeedbackFramework
24,jayway/iiot-team-america,"Organization(name=None, id=89926)","FROM debian:jessie 


RUN apt-get update && apt-get install -y \
   wget \
   openjdk-7-jdk
RUN wget -q https://download.elasticsearch.org/logstash/logstash/logstash-1.4.2.tar.gz && tar xzf logstash-1.4.2.tar.gz


ADD start.sh /opt/logstash/start.sh
ADD logstash.conf /opt/logstash/logstash.conf


EXPOSE 5000
EXPOSE 9200
EXPOSE 9292
CMD [""/opt/logstash/start.sh""]
","Python
96.9%





Shell
3.1%",2015-03-26 10:06:57,2015-03-26 14:51:59,https://github.com/jayway/iiot-team-america
25,RoeyPrat/squirrelcm,,"FROM python:2.7
WORKDIR /code
ADD requirements.txt /code/
RUN pip install -r requirements.txt
ADD . /code
CMD python app.py
","Python
100.0%",2015-03-18 20:03:48,2015-03-21 19:17:33,https://github.com/RoeyPrat/squirrelcm
26,dandam/tut_projects,,"FROM centos:centos7
MAINTAINER Dan Damkoehler <dandam@gmail.com>
RUN yum -y update
","Python
69.3%





JavaScript
19.3%





CSS
3.2%





HTML
2.9%





Scala
2.0%





XSLT
1.9%





Other
1.4%",2015-03-21 16:02:04,2015-05-03 20:38:05,https://github.com/dandam/tut_projects
27,philmui/simpleflask,,"# Dockerfile for a simple Flask application


FROM python:3-onbuild


EXPOSE 8000


CMD [ ""gunicorn"", ""-c"", ""gunicorn_config.py"", ""flask-example:app"" ]
","Python
100.0%",2015-03-26 21:48:27,2015-03-26 21:52:04,https://github.com/philmui/simpleflask
28,docker-exec/python,"Organization(name=None, id=9856954)","FROM        dexec/base-python:1.0.1
MAINTAINER  andystanton
ADD         image-common /tmp/dexec/image-common
VOLUME      /tmp/dexec/build
ENTRYPOINT  [""/tmp/dexec/image-common/dexec-script.sh"", ""python3""]
","Python
100.0%",2015-03-25 14:38:22,2016-07-12 04:00:42,https://github.com/docker-exec/python
29,rliebling/cron_in_docker,,"FROM ubuntu


RUN apt-get update && apt-get install -y cron rsyslog
COPY cronfile /
RUN cp /cronfile /etc/cron.d




CMD rsyslogd && cron && tail -f /var/log/syslog


",,2015-03-25 16:23:58,2015-03-25 16:23:58,https://github.com/rliebling/cron_in_docker
0,jlchereau/Docker-AWS,,"# See https://github.com/dockerfile/nodejs-runtime
# See https://blog.marcelofs.com/from-zero-to-docker-your-irc-bot-with-node-js/


# FROM dockerfile/nodejs-runtime
FROM node:onbuild
","JavaScript
100.0%",2015-04-03 06:56:17,2017-04-16 22:07:10,https://github.com/jlchereau/Docker-AWS
1,jlchereau/Docker-AWS,,"FROM    centos:centos6


# Enable EPEL for Node.js
RUN     rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm


# Install Node.js and npm
RUN     yum install -y npm


# Bundle app source
COPY index.js /app/
COPY package.json /app/


# Install app dependencies
RUN cd /app; npm install


#Expose port 8080
EXPOSE  8080


#Run app
CMD [""node"", ""/app/index.js""]
","JavaScript
100.0%",2015-04-03 06:56:17,2017-04-16 22:07:10,https://github.com/jlchereau/Docker-AWS
2,jlchereau/Docker-AWS,,"#
# Nginx Dockerfile
#
# https://github.com/dockerfile/nginx
#


# Pull base image.
FROM dockerfile/ubuntu


# Install Nginx.
RUN \
  add-apt-repository -y ppa:nginx/stable && \
  apt-get update && \
  apt-get install -y nginx && \
  rm -rf /var/lib/apt/lists/* && \
  echo ""\ndaemon off;"" >> /etc/nginx/nginx.conf && \
  chown -R www-data:www-data /var/lib/nginx


# Define mountable directories.
VOLUME [""/etc/nginx/sites-enabled"", ""/etc/nginx/certs"", ""/etc/nginx/conf.d"", ""/var/log/nginx"", ""/var/www/html""]


# Define working directory.
WORKDIR /etc/nginx


# Define default command.
CMD [""nginx""]


# Expose ports.
EXPOSE 80
EXPOSE 443
","JavaScript
100.0%",2015-04-03 06:56:17,2017-04-16 22:07:10,https://github.com/jlchereau/Docker-AWS
3,jlchereau/Docker-AWS,,"# See https://github.com/dockerfile/nodejs-runtime
# See https://blog.marcelofs.com/from-zero-to-docker-your-irc-bot-with-node-js/


FROM dockerfile/nodejs-runtime
","JavaScript
100.0%",2015-04-03 06:56:17,2017-04-16 22:07:10,https://github.com/jlchereau/Docker-AWS
4,jlchereau/Docker-AWS,,"FROM dockerfile/nodejs


# install OS prerequisites
RUN apt-get update && apt-get install wget unzip -y


#Set version
ENV VERSION 0.1.0


# download Docker-AWS
RUN wget https://github.com/jlchereau/Docker-AWS/archive/v$VERSION.zip


# unzip Docker-AWS into /app
RUN unzip v$VERSION.zip -d /app


# set working directory
WORKDIR /app/Docker-AWS-$VERSION


# install node dependencies
RUN npm install


# Define default command.
CMD [""npm"", ""start""]


# Expose ports.
EXPOSE 8080
","JavaScript
100.0%",2015-04-03 06:56:17,2017-04-16 22:07:10,https://github.com/jlchereau/Docker-AWS
5,wallix/PEPS-chat,"Organization(name=None, id=264401)","# The main peps_chat container


# Based on our generic opa container which has mlstatelibs and node built in.
FROM opa:latest


MAINTAINER MLstate <contact@mlstate.com>


# Download the peps executable
RUN curl -sf -o /tmp/chat.zip -L https://github.com/MLstate/PEPS/releases/download/0.9.9/chat.zip
RUN mkdir -p /chat && cd /chat && unzip -q /tmp/chat.zip
RUN rm /tmp/chat.zip


# We need to add the node modules to the node path
ENV NODE_PATH $NODE_PATH:/chat


# Set this to allow connection to bad certificates
ENV NODE_TLS_REJECT_UNAUTHORIZED 0


# Get global configuration data from PEPS
VOLUME [""/etc/peps""]


# Run the peps_chat executable
# FIXME predefined port, should be taken from /etc/peps/chat/port
EXPOSE 9000


# Add startup scripts (or to /etc/service/peps?)
ADD peps.sh /etc/my_init.d/10chat.sh


# Start the init daemon
CMD [""/sbin/my_init""]
","Opa
60.3%





JavaScript
28.7%





CSS
9.0%





Makefile
1.8%





Shell
0.2%",2015-04-02 10:55:36,2017-11-18 00:56:36,https://github.com/wallix/PEPS-chat
6,egymgmbh/java-docker-signal-handling-example,"Organization(name=None, id=7500373)","FROM java:8-jdk
ADD App.java /
RUN javac App.java
CMD [""/usr/bin/java"", ""App""]
","Java
100.0%",2015-04-11 11:43:04,2016-04-22 08:02:03,https://github.com/egymgmbh/java-docker-signal-handling-example
7,pgonin/image-opensuse,,"## -*- docker-image-name: ""armbuild/ocs-distrib-opensuse:13.2"" -*-
FROM armbuild/opensuse-disk:13.2
MAINTAINER Scaleway <opensource@scaleway.com> (@scaleway)




# Environment
ENV SCW_BASE_IMAGE armbuild/scw-distrib-opensuse:13.2




# Patch rootfs for docker-based builds
RUN zypper -n -v refresh \
 && zypper -n update \
 && zypper -n install curl \
 && curl -Lq http://j.mp/scw-skeleton | FLAVORS=common,docker-based bash -e \
 && /usr/local/sbin/builder-enter




# Make the image smaller
# kernel, drivers, firmwares
RUN zypper rm -n kernel-default kernel-firmware
# services
RUN zypper rm -n libmozjs-17_0 bluez cracklib-dict-full




# Install packages
RUN zypper -n install \
    bc \
    shunit2 \
    socat \
    sudo \
    tmux \
    vim \
    wget




# xnbd-client
RUN wget https://github.com/scaleway/image-opensuse/raw/master/packages/xnbd-client/RPMS/armv7hl/xnbd-client-0.3.0-1.armv7hl.rpm \
 && zypper install -n ./xnbd-client-0.3.0-1.armv7hl.rpm \
 && rm -f xnbd-client-0.3.0-1.armv7hl.rpm




# Locale
RUN cd /usr/lib/locale/; ls | grep -v en_US | xargs rm -rf




# Patch rootfs
RUN curl -Lkq http://j.mp/scw-skeleton | FLAVORS=common,docker-based bash -e
ADD ./patches/etc/ /etc/
ADD ./patches/usr/ /usr/




RUN systemctl enable oc-ssh-keys




# Remove root password
RUN passwd -d root




# Disable YaST2 on first boot
RUN systemctl disable YaST2-Firstboot.service




RUN systemctl mask systemd-modules-load.service \
 && systemctl mask dev-ttyS0.device \
 && systemctl mask systemd-update-utmp-runlevel \
 && systemctl mask proc-sys-fs-binfmt_misc.automount \
 && systemctl mask systemd-random-seed.service




RUN systemctl set-default multi-user
RUN systemctl disable wpa_supplicant
RUN systemctl disable alsa-restore.service alsa-state.service alsa-store.service alsasound.service


# Clean rootfs from image-builder
RUN /usr/local/sbin/builder-leave
","Makefile
66.1%





Shell
33.9%",2015-04-13 18:36:56,2015-04-17 14:28:17,https://github.com/pgonin/image-opensuse
8,DeepskyLog/Docker,"Organization(name=None, id=10977533)","# Dockerfile that modifies ringo/scientific to create a data volume container.
FROM ringo/scientific:6.6
MAINTAINER Wim De Meester <deepskywim@gmail.com>
RUN mkdir -p /var/lib/mysql
VOLUME /var/lib/mysql
ENTRYPOINT /usr/bin/tail -f /dev/null
","Shell
100.0%",2015-04-08 08:28:28,2017-10-16 13:45:16,https://github.com/DeepskyLog/Docker
9,TeamTrumpet/harbor,"Organization(name=None, id=9040105)","FROM golang:1.4.2


RUN go get github.com/smartystreets/goconvey github.com/tools/godep golang.org/x/tools/cmd/cover golang.org/x/tools/cmd/godoc


EXPOSE 8080
EXPOSE 8081
","Makefile
100.0%",2015-04-08 16:40:06,2016-05-03 17:19:08,https://github.com/TeamTrumpet/harbor
10,killercentury/docker-python-phantomjs,,"FROM python:2.7
MAINTAINER Decheng Zhang <killercentury@gmail.com>


# Env
ENV PHANTOMJS_VERSION 1.9.8


# Install phantomjs
RUN mkdir -p /srv/var && \
  wget -q --no-check-certificate -O /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 && \
  tar -xjf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C /tmp && \
  rm -f /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 && \
  mv /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/ /usr/local/share/phantomjs && \
  ln -s /usr/local/share/phantomjs/bin/phantomjs /usr/local/bin/phantomjs
",,2015-04-13 05:49:07,2017-08-02 09:23:09,https://github.com/killercentury/docker-python-phantomjs
11,killercentury/docker-python-phantomjs,,"FROM python:2.7
MAINTAINER Decheng Zhang <killercentury@gmail.com>


# Env
ENV PHANTOMJS_VERSION 1.9.8


# Install phantomjs
RUN mkdir -p /srv/var && \
  wget -q --no-check-certificate -O /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 && \
  tar -xjf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C /tmp && \
  rm -f /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 && \
  mv /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/ /usr/local/share/phantomjs && \
  ln -s /usr/local/share/phantomjs/bin/phantomjs /usr/local/bin/phantomjs
",,2015-04-13 05:49:07,2017-08-02 09:23:09,https://github.com/killercentury/docker-python-phantomjs
12,killercentury/docker-python-phantomjs,,"FROM python:2.7
MAINTAINER Decheng Zhang <killercentury@gmail.com>


# Env
ENV PHANTOMJS_VERSION 1.9.8


# Install phantomjs
RUN mkdir -p /srv/var && \
  wget -q --no-check-certificate -O /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 && \
  tar -xjf /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 -C /tmp && \
  rm -f /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 && \
  mv /tmp/phantomjs-$PHANTOMJS_VERSION-linux-x86_64/ /usr/local/share/phantomjs && \
  ln -s /usr/local/share/phantomjs/bin/phantomjs /usr/local/bin/phantomjs


RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app


ONBUILD COPY requirements.txt /usr/src/app/
ONBUILD RUN pip install -r requirements.txt
ONBUILD COPY . /usr/src/app
",,2015-04-13 05:49:07,2017-08-02 09:23:09,https://github.com/killercentury/docker-python-phantomjs
13,Zex/neural-node,,"FROM busybox
RUN echo ""Image creation started""
ENV WD /home/zex/lab/docker-build
WORKDIR ${WD} 
MAINTAINER ""Zex Li <top_zlynch@yahoo.com>""
LABEL description=""algorithm research project""
#WORKDIR /home/zex/lab/neural-node
#RUN pwd;g++ -std=c++11 -o docker-build/just4fun apps/just4fun.cpp
#WORKDIR ${WD} 
ADD just4fun /bin
RUN chmod +x /bin/just4fun
CMD	[""sh"", ""/bin/just4fun""]
RUN adduser -S fun
USER fun
RUN ls /home
RUN ls /bin
RUN echo ""----------------""
RUN head /etc/passwd
RUN tail /etc/passwd
RUN echo ""----------------""
#EXPOSE 7530
RUN echo ""Image creation finished""
","C++
60.3%





Python
12.3%





Go
11.7%





C
9.3%





Makefile
4.7%





Other
1.1%





Shell
0.6%",2015-04-12 14:32:39,2016-07-05 16:26:12,https://github.com/Zex/neural-node
14,duffqiu/zookeeper_cli,,"FROM duffqiu/zookeeper:latest
MAINTAINER duffqiu@gmail.com


ENTRYPOINT [ ""bin/zkCli.sh"" ]


",,2015-04-14 05:23:32,2015-04-14 05:23:32,https://github.com/duffqiu/zookeeper_cli
15,yuyue2013/ss,,"FROM ubuntu:14.04


# Install required packages
RUN apt-get update -q \
    && DEBIAN_FRONTEND=noninteractive apt-get install -qy --no-install-recommends \
      ca-certificates \
      openssh-server \
      wget


# Download & Install GitLab
# If the Omnibus package version below is outdated please contribute a merge request to update it.
# If you run GitLab Enterprise Edition point it to a location where you have downloaded it.
RUN TMP_FILE=$(mktemp); \
    wget -q -O $TMP_FILE https://downloads-packages.s3.amazonaws.com/ubuntu-14.04/gitlab_7.9.2-omnibus-1_amd64.deb \
    && dpkg -i $TMP_FILE \
    && rm -f $TMP_FILE


# Manage SSHD through runit
RUN mkdir -p /opt/gitlab/sv/sshd/supervise \
    && mkfifo /opt/gitlab/sv/sshd/supervise/ok \
    && printf ""#!/bin/sh\nexec 2>&1\numask 077\nexec /usr/sbin/sshd -D"" > /opt/gitlab/sv/sshd/run \
    && chmod a+x /opt/gitlab/sv/sshd/run \
    && ln -s /opt/gitlab/sv/sshd /opt/gitlab/service \
    && mkdir -p /var/run/sshd


# Expose web & ssh
EXPOSE 80 22


# Copy assets
COPY assets/wrapper /usr/local/bin/


# Wrapper to handle signal, trigger runit and reconfigure GitLab
CMD [""/usr/local/bin/wrapper""]
","Ruby
72.6%





HTML
14.3%





Gherkin
4.1%





CoffeeScript
3.8%





CSS
3.8%





JavaScript
1.0%





Shell
0.4%",2015-04-16 13:25:12,2015-04-16 13:30:11,https://github.com/yuyue2013/ss
16,yuyue2013/ss,,"FROM busybox


# Declare volumes
VOLUME [""/var/opt/gitlab"", ""/var/log/gitlab"", ""/etc/gitlab""]
# Copy assets
COPY assets/gitlab.rb /etc/gitlab/


CMD /bin/sh
","Ruby
72.6%





HTML
14.3%





Gherkin
4.1%





CoffeeScript
3.8%





CSS
3.8%





JavaScript
1.0%





Shell
0.4%",2015-04-16 13:25:12,2015-04-16 13:30:11,https://github.com/yuyue2013/ss
17,marcelocenerine/mongodb-docker-container,,"# Dockerizing MongoDB: Dockerfile for building MongoDB images
# Based on ubuntu:latest, installs MongoDB following the instructions from:
# http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/


FROM       ubuntu:latest
MAINTAINER Marcelo Cenerino <marcelocenerine@gmail.com>


# Installation:
# Import MongoDB public GPG key AND create a MongoDB list file
RUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv 7F0CEB10
RUN echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/10gen.list


# Update apt-get sources AND install MongoDB
RUN apt-get update && apt-get install -y mongodb-org


# Create the MongoDB data directory
RUN mkdir -p /data/db
VOLUME ""/data/db""


# Expose port 27017 from the container to the host
EXPOSE 27017


# Set usr/bin/mongod as the dockerized entry-point application
ENTRYPOINT /usr/bin/mongod
",,2015-04-23 19:30:22,2015-04-23 19:30:22,https://github.com/marcelocenerine/mongodb-docker-container
18,mjstealey/appstack-data,,"FROM centos:centos6.6
MAINTAINER Michael Stealey <michael.j.stealey@gmail.com>


RUN yum install -y wget
RUN wget http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
RUN rpm -Uvh epel-release-6*.rpm


VOLUME [""/conf"", ""/var/log"", ""/var/backup"", ""/root/.secret"", \
""/opt/java"", ""/opt/tomcat"", \
""/var/lib/pgsql/9.3/data"", \
""/var/lib/irods"", ""/etc/irods""]


#ENTRYPOINT [""/bin/echo""]
#CMD [""'NO APPLICATION NAME SPECIFIED'""]


# Keep container from shutting down until explicitly stopped
ENTRYPOINT [""/usr/bin/tail""]
CMD [""-f"", ""/dev/null""]
",,2015-04-23 15:30:49,2017-02-12 05:57:51,https://github.com/mjstealey/appstack-data
19,CloudCV/cloudcv-docker,"Organization(name=None, id=10887975)","FROM node:0.12.2
EXPOSE 3000
MAINTAINER Eugene Khvedchenya ""ekhvedchenya@gmail.com""


# Clone the conf files into the docker container
RUN git clone https://github.com/CloudCV/cloudcv-bootstrap.git /cloudcv-bootstrap


# Install app dependencies
RUN npm install -g node-gyp nan
RUN cd /cloudcv-bootstrap; npm install --unsafe-perm true


# Define working directory.
WORKDIR /cloudcv-bootstrap


# Define default command.
CMD [""npm"", ""start""]
",,2015-05-04 18:24:50,2015-05-04 18:24:50,https://github.com/CloudCV/cloudcv-docker
20,curator/docker-net-snmp-utils,,"FROM centos:7
MAINTAINER ""Preston Norvell"" <curator@shmoo.com>


RUN yum -y install net-snmp-utils
RUN yum -y update; yum clean all


CMD [""/bin/ls"", ""-lash"", ""/usr/share/snmp/mibs""]
",,2015-05-04 18:25:37,2015-05-04 18:25:37,https://github.com/curator/docker-net-snmp-utils
21,confluentinc/docker-images,"Organization(name=None, id=9439498)","# Builds a base docker image for the Confluent stream platform. It doesn't
# start up any particular service, just installs the platform. Other images
# inherit from this image to start up a particular service.


FROM java:8-jre


ENV CONFLUENT_USER confluent
ENV CONFLUENT_GROUP confluent


RUN [""groupadd"", ""-r"", ""confluent""]
RUN [""useradd"", ""-r"", ""-g"", ""confluent"", ""confluent""]






","Shell
52.1%





Java
47.9%",2015-04-21 09:40:50,2017-11-22 02:45:45,https://github.com/confluentinc/docker-images
22,confluentinc/docker-images,"Organization(name=None, id=9439498)","# Builds a docker image running Confluent's distribution of Apache Kafka.
# Needs to be linked with a Zookeeper container with alias ""zookeeper"".
#
# Usage:
#   docker build -t confluent/kafka kafka
#   docker run -d --name kafka --link zookeeper:zookeeper confluent/kafka


FROM confluent/platform


MAINTAINER contact@confluent.io


ENV LOG_DIR ""/var/log/kafka""
ENV KAFKA_LOG_DIRS ""/var/lib/kafka""


ADD kafka-docker.sh /usr/local/bin/


RUN [""mkdir"", ""-p"", ""/var/lib/kafka"", ""/var/log/kafka"", ""/etc/security""]
RUN [""chown"", ""-R"", ""confluent:confluent"", ""/var/lib/kafka"", ""/var/log/kafka"", ""/etc/kafka/server.properties""]
RUN [""chmod"", ""+x"", ""/usr/local/bin/kafka-docker.sh""]


VOLUME [""/var/lib/kafka"", ""/var/log/kafka"", ""/etc/security""]


#TODO Update the ports that are exposed.
#TODO Add support to expose JMX
EXPOSE 9092


USER confluent
ENTRYPOINT [""/usr/local/bin/kafka-docker.sh""]
","Shell
52.1%





Java
47.9%",2015-04-21 09:40:50,2017-11-22 02:45:45,https://github.com/confluentinc/docker-images
23,confluentinc/docker-images,"Organization(name=None, id=9439498)","# Builds a docker image for the Kafka REST Proxy.
# Expects links to ""schema-registry"" and ""zookeeper"" containers.
#
# Usage:
#   docker build -t confluent/rest-proxy rest-proxy
#   docker run -d --name rest-proxy --link zookeeper:zookeeper --link schema-registry:schema-registry \
#       confluent/rest-proxy


FROM confluent/platform


MAINTAINER contact@confluent.io


COPY rest-proxy-docker.sh /usr/local/bin/


RUN [""chown"", ""-R"", ""confluent:confluent"", ""/etc/kafka-rest"", ""/usr/local/bin/rest-proxy-docker.sh""]
RUN [""chmod"", ""+x"", ""/usr/local/bin/rest-proxy-docker.sh""]


EXPOSE 8082


CMD [ ""/usr/local/bin/rest-proxy-docker.sh"" ]
","Shell
52.1%





Java
47.9%",2015-04-21 09:40:50,2017-11-22 02:45:45,https://github.com/confluentinc/docker-images
24,confluentinc/docker-images,"Organization(name=None, id=9439498)","# Builds a docker image for the Confluent schema registry.
# Expects links to ""kafka"" and ""zookeeper"" containers.
#
# Usage:
#   docker build -t confluent/schema-registry schema-registry
#   docker run -d --name schema-registry --link zookeeper:zookeeper --link kafka:kafka \
#       --env SCHEMA_REGISTRY_AVRO_COMPATIBILITY_LEVEL=none confluent/schema-registry


FROM confluent/platform


MAINTAINER contact@confluent.io


COPY schema-registry-docker.sh /usr/local/bin/


#TODO Schema Registry needs a log directory.
RUN [""chown"", ""-R"", ""confluent:confluent"", ""/etc/schema-registry/schema-registry.properties""]
RUN [""chmod"", ""+x"", ""/usr/local/bin/schema-registry-docker.sh""]


EXPOSE 8081


USER confluent
ENTRYPOINT [""/usr/local/bin/schema-registry-docker.sh""]
","Shell
52.1%





Java
47.9%",2015-04-21 09:40:50,2017-11-22 02:45:45,https://github.com/confluentinc/docker-images
25,confluentinc/docker-images,"Organization(name=None, id=9439498)","# Builds a docker image with command-line tools for the Confluent platform.
# Expects links to ""kafka"" and ""zk"" containers.
#
# Usage:
#   docker build -t confluent/tools tools
#   docker run -it --rm --link zookeeper:zookeeper --link kafka:kafka --link schema-registry:schema_registry \
#       confluent/tools kafka-avro-console-consumer --property print.key=true --topic test --from-beginning


FROM confluent/platform


MAINTAINER contact@confluent.io


WORKDIR /usr/bin


ADD confluent-tools.sh /usr/bin/confluent-tools
CMD [""confluent-tools""]
","Shell
52.1%





Java
47.9%",2015-04-21 09:40:50,2017-11-22 02:45:45,https://github.com/confluentinc/docker-images
26,confluentinc/docker-images,"Organization(name=None, id=9439498)","# Builds a docker image running Apache Zookeeper. Intended for use with Kafka.
#
# Usage:
#   docker build -t confluent/zookeeper zookeeper
#   docker run -d --name zookeeper confluent/zookeeper


FROM confluent/platform


MAINTAINER contact@confluent.io


ENV LOG_DIR ""/var/log/zookeeper""
ENV ZK_DATA_DIR ""/var/log/zookeeper""
ENV KAFKA_LOG4J_OPTS -Dlog4j.configuration=file:/etc/kafka/log4j.properties


ADD zk-docker.sh /usr/local/bin/
ADD log4j.properties /etc/kafka/log4j.properties


RUN [""mkdir"", ""-p"", ""/var/log/zookeeper"", ""/var/lib/zookeeper""]
RUN [""chown"", ""-R"", ""confluent:confluent"", ""/var/log/zookeeper"", ""/var/lib/zookeeper"", ""/etc/kafka/zookeeper.properties""]
RUN [""chmod"", ""+x"", ""/usr/local/bin/zk-docker.sh""]


VOLUME [""/var/log/zookeeper"", ""/var/lib/zookeeper""]


#TODO Expose JMX
# Expose client port (2188/tcp), peer connection port (2888/tcp), leader election port (3888/tcp)
EXPOSE 2181 2888 3888


USER confluent
ENTRYPOINT [""/usr/local/bin/zk-docker.sh""]
","Shell
52.1%





Java
47.9%",2015-04-21 09:40:50,2017-11-22 02:45:45,https://github.com/confluentinc/docker-images
27,edgemehdi/dev,,"FROM ubuntu:14.04
MAINTAINER mehdi devop@edge.com


RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8


RUN dpkg-divert --local --rename --add /sbin/initctl
RUN ln -sf /bin/true /sbin/initctl


RUN echo ""deb http://de.archive.ubuntu.com/ubuntu/ trusty main restricted universe multiverse\n deb http://de.archive.ubuntu.com/ubuntu/ trusty-updates main restricted universe multiverse\n deb http://security.ubuntu.com/ubuntu trusty-security main restricted universe multiverse"" >> /etc/apt/sources.list.d/pkgs.list
RUN apt-get update
RUN apt-get -y upgrade


RUN DEBIAN_FRONTEND=noninteractive apt-get -y install curl git-core unzip vim-tiny build-essential python-software-properties  software-properties-common locate pwgen wget tzdata htop logrotate 


RUN add-apt-repository ppa:webupd8team/java -y
RUN apt-get update
RUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections
RUN apt-get install -y oracle-java7-installer




","Shell
92.6%





Python
7.4%",2015-04-21 08:06:03,2015-04-21 09:25:52,https://github.com/edgemehdi/dev
28,edgemehdi/dev,,"FROM edgemehdi/nodejs


RUN npm install -g elasticdump
","Shell
92.6%





Python
7.4%",2015-04-21 08:06:03,2015-04-21 09:25:52,https://github.com/edgemehdi/dev
29,edgemehdi/dev,,"FROM edgemehdi/basic-pkgs 
MAINTAINER Mehdi mehdi@edge.com 


ENV ES_PKG_NAME elasticsearch-1.4.3


# Install ElasticSearch.
RUN \
  cd / && \
  wget https://download.elasticsearch.org/elasticsearch/elasticsearch/$ES_PKG_NAME.tar.gz && \
  tar xvzf $ES_PKG_NAME.tar.gz && \
  rm -f $ES_PKG_NAME.tar.gz && \
  mv /$ES_PKG_NAME /elasticsearch


# Define mountable directories.
VOLUME [""/data""]


# Define working directory.
WORKDIR /data


# Expose ports.
#   - 9200: HTTP
#   - 9300: transport
EXPOSE 9200
EXPOSE 9300


ENV ES_HEAP_SIZE 1g


ADD elasticsearch.yml /elasticsearch/config/elasticsearch.yml


RUN [""/elasticsearch/bin/plugin"", ""--install"",""mobz/elasticsearch-head""] 


ENTRYPOINT [""/elasticsearch/bin/elasticsearch""]
","Shell
92.6%





Python
7.4%",2015-04-21 08:06:03,2015-04-21 09:25:52,https://github.com/edgemehdi/dev
0,edgemehdi/dev,,"FROM edgemehdi/basic-pkgs 


RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
RUN echo 'deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen' | tee /etc/apt/sources.list.d/10gen.list


#RUN dpkg-divert --local --rename --add /sbin/initctl
#RUN ln -s /bin/true /sbin/initctl


RUN apt-get update
RUN apt-get install -y mongodb-org




ADD mongodb.conf /etc/mongodb.conf


VOLUME [""/var/lib/mongodb""]


EXPOSE 27017


USER mongodb
WORKDIR /var/lib/mongodb


ENTRYPOINT [""/usr/bin/mongod"", ""--config"", ""/etc/mongodb.conf""]
CMD [""--quiet""]
","Shell
92.6%





Python
7.4%",2015-04-21 08:06:03,2015-04-21 09:25:52,https://github.com/edgemehdi/dev
1,edgemehdi/dev,,"FROM edgemehdi/basic-pkgs
MAINTAINER Mehdi mehdi@edge.com


RUN wget -O - http://debian.neo4j.org/neotechnology.gpg.key | apt-key add -
RUN echo 'deb http://debian.neo4j.org/repo stable/' > /etc/apt/sources.list.d/neo4j.list


RUN apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get -y install neo4j


RUN sed -i -e ""s/#org.neo4j.server.webserver.address=0.0.0.0/org.neo4j.server.webserver.address=0.0.0.0/g"" /etc/neo4j/neo4j-server.properties 
RUN service neo4j-service stop


# start neo4j server, available at http://localhost:7474 of the target machine
CMD /var/lib/neo4j/bin/neo4j start


EXPOSE 7474
","Shell
92.6%





Python
7.4%",2015-04-21 08:06:03,2015-04-21 09:25:52,https://github.com/edgemehdi/dev
2,edgemehdi/dev,,"FROM edgemehdi/py-environ
 MAINTAINER Mehdi mehdi@edge.com


RUN add-apt-repository -y ppa:chris-lea/node.js
RUN apt-get update
RUN apt-get -y install nodejs
","Shell
92.6%





Python
7.4%",2015-04-21 08:06:03,2015-04-21 09:25:52,https://github.com/edgemehdi/dev
3,edgemehdi/dev,,"FROM edgemehdi/basic-pkgs 
MAINTAINER mehdi ""mehdi@edge.com""


RUN apt-get update -y
RUN apt-get install -y python-virtualenv python-setuptools  python-pip python-dev build-essential freetds-dev libblas-dev liblapack-dev gfortran 


ADD re2  /re2/
WORKDIR /re2/
RUN [""make""]
RUN [""make"", ""install""]


COPY pyre2 /pyre2
WORKDIR /pyre2/
RUN [""python"",""setup.py"",""install""]


COPY . /app
WORKDIR /app


RUN pip install -r requirements.txt


#ENTRYPOINT [""python""]
CMD [""python"", ""app.py""]
","Shell
92.6%





Python
7.4%",2015-04-21 08:06:03,2015-04-21 09:25:52,https://github.com/edgemehdi/dev
4,edgemehdi/dev,,"FROM edgemehdi/basic-pkgs
MAINTAINER mehdi@edge.com


# Install RabbitMQ
RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F7B8CEA6056E8E56 && \
    echo ""deb http://www.rabbitmq.com/debian/ testing main"" >> /etc/apt/sources.list && \
    apt-get update && \
    apt-get install -y rabbitmq-server && \
    rabbitmq-plugins enable rabbitmq_management && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*


RUN echo ""ERLANGCOOKIE"" > /var/lib/rabbitmq/.erlang.cookie
RUN chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie
RUN chmod 400 /var/lib/rabbitmq/.erlang.cookie


# Add scripts
ADD run.sh /run.sh
ADD set_rabbitmq_password.sh /set_rabbitmq_password.sh
RUN chmod 755 ./*.sh


EXPOSE 5672 15672
CMD [""/run.sh""]
","Shell
92.6%





Python
7.4%",2015-04-21 08:06:03,2015-04-21 09:25:52,https://github.com/edgemehdi/dev
5,xavier83/docker-iodine,,"FROM phusion/baseimage:latest
MAINTAINER Infanta Xavier <xavier8338@yahoo.com>


RUN apt-get update
RUN apt-get install -y net-tools iptables iodine
COPY ./entrypoint.sh /entrypoint.sh
RUN chmod 755 /entrypoint.sh


ENTRYPOINT [""/entrypoint.sh""]


EXPOSE 53


# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
","Shell
100.0%",2015-04-18 17:42:57,2017-05-04 02:40:04,https://github.com/xavier83/docker-iodine
6,hoecoga/hoecoga-bot,,"FROM dockerfile/ubuntu


RUN \
  echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \
  add-apt-repository -y ppa:webupd8team/java && \
  apt-get update && \
  apt-get install -y oracle-java8-installer && \
  rm -rf /var/lib/apt/lists/* && \
  rm -rf /var/cache/oracle-jdk8-installer


ENV JAVA_HOME /usr/lib/jvm/java-8-oracle


ENV WD /hoecoga-bot


RUN mkdir $WD
COPY application.conf $WD/
COPY logback.xml $WD/
COPY hoecoga-bot-assembly-1.2.jar $WD/


WORKDIR $WD


CMD [""java"", ""-Dconfig.file=application.conf"", ""-Dlogback.configurationFile=logback.xml"", ""-jar"", ""hoecoga-bot-assembly-1.2.jar""]
","Scala
100.0%",2015-04-19 10:43:01,2015-07-26 07:18:47,https://github.com/hoecoga/hoecoga-bot
7,Daio-io/offline-cdn,,"FROM    centos:centos6


# Enable EPEL for Node.js
RUN     rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
# Install Node.js and npm
RUN     yum install -y npm


# Bundle app
ADD ./app /app


# Remove any current node modules and run npm install
RUN cd  /app && rm -rf node_modules && npm install


EXPOSE  5000


CMD [""node"", ""/app/index.js""]


","JavaScript
85.2%





CSS
14.8%",2015-04-15 22:51:52,2015-04-29 22:28:01,https://github.com/Daio-io/offline-cdn
8,alexanderfefelov/docker-logstash,,"FROM java:8-jre
ENV LOGSTASH_VERSION 1.5.6
ENV LOGSTASH_HOME /opt/logstash
RUN wget -q http://download.elastic.co/logstash/logstash/logstash-$LOGSTASH_VERSION.tar.gz -O - | tar xfz - \
  && mv logstash-$LOGSTASH_VERSION $LOGSTASH_HOME \
  && rm -f logstash-$LOGSTASH_VERSION.tar.gz
ADD container/logstash.sh /
ENTRYPOINT [""/logstash.sh""]
","Shell
100.0%",2015-04-16 05:16:48,2016-07-25 05:47:38,https://github.com/alexanderfefelov/docker-logstash
9,Mikari/ipykee,,"FROM anaderi/rep-develop:latest


ENV TEMP /tmp
RUN mkdir $TEMP/build
COPY AUTHORS $TEMP/build/
COPY debian $TEMP/build/debian
COPY Dockerfile $TEMP/build/
COPY ipykee.js $TEMP/build/
COPY ipykee-ssh-wrapper.sh $TEMP/build/
COPY LICENSE $TEMP/build/
COPY py-modules $TEMP/build/py-modules
COPY README.md $TEMP/build/
COPY setup.py $TEMP/build/
RUN cd $TEMP/build/ && \
  pip install . && \
  rm -rf $TEMP/build


RUN cp $TEMP/build/ipykee.js /root/.ipython/nbextensions/
","Python
88.2%





JavaScript
10.9%





Shell
0.9%",2015-04-16 09:39:41,2015-04-16 09:40:46,https://github.com/Mikari/ipykee
10,tamarrow/docker-gollum,,"# Set the base image to Ubuntu
FROM suttang/gollum


# Clone and build docker-gollum
RUN rm -rf /root/wikidata
#RUN git clone https://1f449b3cc23d820b61d7d87e59a1c9ea03eb2f0f:x-oauth-basic@github.com/tamarrow/docker-gollum.git /root/wikidata
ADD content /root/wikidata


#CMD [""gollum"", ""--no-edit"", ""--base-path=wiki"", ""/docker-gollum""]
CMD [""gollum""]
","Ruby
78.0%





Shell
22.0%",2015-04-09 21:01:18,2015-04-10 20:03:27,https://github.com/tamarrow/docker-gollum
11,mmb/bosh_cli_docker_container,,"FROM ruby:onbuild
MAINTAINER matthewm@boedicker.org


ENTRYPOINT [""bundle"", ""exec"", ""bosh""]
","Ruby
95.4%





Shell
4.6%",2015-04-08 05:14:57,2015-09-07 16:50:31,https://github.com/mmb/bosh_cli_docker_container
12,gideonairex/slate,,"FROM ubuntu:trusty


RUN apt-get update
RUN apt-get install -yq ruby ruby-dev build-essential git
RUN gem install --no-ri --no-rdoc bundler
ADD Gemfile /app/Gemfile
ADD Gemfile.lock /app/Gemfile.lock
RUN cd /app; bundle install
ADD . /app
EXPOSE 4567
WORKDIR /app
CMD [""bundle"", ""exec"", ""middleman"", ""server""]
","JavaScript
74.0%





CSS
20.1%





HTML
3.0%





Ruby
2.9%",2015-05-18 14:17:00,2015-05-18 14:19:27,https://github.com/gideonairex/slate
13,CoderDojo/cp-salesforce-service,"Organization(name=None, id=1159537)","FROM mhart/alpine-node:0.10
MAINTAINER nearForm <info@nearform.com>


#RUN apk-install git make gcc g++ python
RUN apk-install git 
RUN mkdir -p /usr/src/app/config
WORKDIR /usr/src/app


COPY package.json /usr/src/app/
RUN npm install --production && rm -rf /root/.npm
 
COPY config /usr/src/app/config/
COPY *.js /usr/src/app/  
 


","JavaScript
97.6%





Shell
2.4%",2015-05-18 19:40:43,2017-07-05 07:11:30,https://github.com/CoderDojo/cp-salesforce-service
14,bofm/docker-oracle12c,,"FROM oraclelinux
MAINTAINER bofm


RUN yum -y install oracle-rdbms-server-12cR1-preinstall.x86_64 && \
    yum clean all && \
    rm -rf /var/lib/{cache,log} /var/log/lastlog


# Install gosu
RUN curl -o /usr/local/bin/gosu -SL 'https://github.com/tianon/gosu/releases/download/1.7/gosu-amd64' \
    && chmod +x /usr/local/bin/gosu


COPY sysctl.conf oraInst.loc /etc/
COPY limits.conf /tmp/
RUN cat /tmp/limits.conf >> /etc/security/limits.conf


ENV ORACLE_BASE=/app/oracle
ENV ORACLE_HOME=$ORACLE_BASE/product/12.1.0/dbhome_1
ENV PATH=$ORACLE_HOME/bin:$PATH
ENV NLS_DATE_FORMAT=YYYY-MM-DD\ HH24:MI:SS \
    ORACLE_DATA=/data/oracle \
    ORACLE_SID=ORCL \
    ORACLE_HOME_LISTNER=$ORACLE_HOME


COPY *.rsp install.sh install_rlwrap.sh /tmp/install/


RUN mkdir -p $ORACLE_BASE && chown -R oracle:oinstall $ORACLE_BASE && \
    chmod -R 775 $ORACLE_BASE && \
    mkdir -p /app/oraInventory && \
    chown -R oracle:oinstall /app/oraInventory && \
    chmod -R 775 /app/oraInventory && \
    chmod 664 /etc/oraInst.loc && \
    chmod a+x /tmp/install/install.sh




","Shell
60.4%





Makefile
39.6%",2015-04-22 20:55:03,2017-11-02 15:17:08,https://github.com/bofm/docker-oracle12c
15,bofm/docker-oracle12c,,"FROM bofm/oracle12c:installed
MAINTAINER bofm


RUN mkdir /data && chmod 777 /data
COPY db_template.dbt /tmp/
COPY colorecho /bin/
COPY entrypoint_oracle.sh /bin/
COPY create_database.sh ora_env /tmp/
RUN chmod +x /bin/entrypoint_oracle.sh /tmp/create_database.sh /tmp/ora_env /bin/colorecho
ENV PATH=$PATH:/usr/bin:/usr/local/bin
EXPOSE 1521
USER oracle
ENTRYPOINT [""entrypoint_oracle.sh""]
CMD [""database""]
","Shell
60.4%





Makefile
39.6%",2015-04-22 20:55:03,2017-11-02 15:17:08,https://github.com/bofm/docker-oracle12c
16,danisla/docker-spark,,"FROM mesosphere/mesos:0.22.0-1.0.ubuntu1404
MAINTAINER Dan Isla <disla@jpl.nasa.gov>


ENV MESOS_NATIVE_LIBRARY /usr/local/lib/libmesos.so


ENV SPARK_VERSION 1.1.1-bin-hadoop2.4


RUN apt-get update


RUN apt-get install -y curl python && \
    curl -sf ""http://d3kbcqa49mib13.cloudfront.net/spark-${SPARK_VERSION}.tgz"" | tar zx -C /opt && \
    mv ""/opt/spark-${SPARK_VERSION}"" /opt/spark


# Define working directory.
WORKDIR /opt/spark


ADD conf/jets3t.properties /opt/spark/conf/


ADD start.sh /opt/spark/
RUN chmod +x /opt/spark/start.sh


EXPOSE 4040


# Define default command.
CMD [""/opt/spark/start.sh""]
ENTRYPOINT [""/opt/spark/start.sh""]
","Shell
100.0%",2015-04-25 18:43:37,2015-04-25 18:43:43,https://github.com/danisla/docker-spark
17,io-informatics/transmart-docker,"Organization(name=None, id=9287234)","FROM     tomcat:7-jre8
MAINTAINER Alexander De Leon <me@alexdeleon.name>


#Declare environment variables


ENV POSTGRESQL_HOST postgres
ENV POSTGRESQL_PORT 5432
ENV POSTGRESQL_DB transmart
ENV POSTGRESQL_USER postgres
ENV POSTGRESQL_PASSWORD ''


# Install dependencies
RUN apt-get update && apt-get -y install build-essential postgresql php5 sudo rsync supervisor r-base libcairo2-dev


#Install R dependencies
#RUN R CMD BATCH ../scripts/install_r_packages.R




# Install transmartApp WAR
RUN rm -rf /usr/local/tomcat/webapps/ROOT
ADD https://ci.transmartfoundation.org/browse/DEPLOY-TRAPP-14/artifact/shared/transmart.war/transmart.war /usr/local/tomcat/webapps/ROOT.war




# Create config files for transmartApp
ADD config/BuildConfig.groovy /root/.grails/transmartConfig/BuildConfig.groovy
ADD config/Config.groovy /root/.grails/transmartConfig/Config.groovy
ADD config/DataSource.groovy /root/.grails/transmartConfig/DataSource.groovy


# Create supervisor config
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf


# Ports
# tomcat/transmart
EXPOSE 8080
#postgresql
EXPOSE 5432
#solr
EXPOSE 8983
#rserver
EXPOSE 6311
CMD [""/usr/bin/supervisord""]
","Groovy
75.8%





R
22.8%





Shell
1.4%",2015-04-28 15:53:59,2016-11-12 14:58:52,https://github.com/io-informatics/transmart-docker
18,io-informatics/transmart-docker,"Organization(name=None, id=9287234)","FROM     tomcat:7-jre8
MAINTAINER Alexander De Leon <me@alexdeleon.name>


# Install dependencies
RUN apt-get update && apt-get -y install build-essential postgresql php5 sudo rsync supervisor


RUN apt-get update && apt-get -y install r-base libcairo2-dev


#Install R dependencies
ADD biocLite.R /tmp/biocLite.R
ADD install-packages.R /tmp/install-packages.R
RUN echo ""r <- getOption('repos'); r['CRAN'] <- 'http://cran.us.r-project.org'; options(repos = r);"" > ~/.Rprofile
RUN Rscript /tmp/install-packages.R


# Set up locale
RUN localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG en_US.utf8


# Install transmartApp WAR
RUN rm -rf /usr/local/tomcat/webapps/ROOT
ADD https://ci.transmartfoundation.org/browse/DEPLOY-TRAPP-14/artifact/shared/transmart.war/transmart.war /usr/local/tomcat/webapps/ROOT.war


# Install transmart-data
ADD https://github.com/transmart/transmart-data/archive/v1.2.4.tar.gz /opt/transmart-data.tar.gz
RUN cd /opt; tar xzf transmart-data.tar.gz
ADD vars /opt/transmart-data-1.2.4/vars
RUN chown -R postgres:postgres /opt/transmart-data-1.2.4


# Init DB
RUN  mkdir /etc/ssl/private-copy; mv /etc/ssl/private/* /etc/ssl/private-copy/; rm -r /etc/ssl/private; mv /etc/ssl/private-copy /etc/ssl/private; chmod -R 0700 /etc/ssl/private; chown -R postgres /etc/ssl/private && /etc/init.d/postgresql start && su postgres -c ""cd /opt/transmart-data-1.2.4 && . ./vars && skip_fix_tablespaces=1 make -j4""
# Create config files for transmartApp
RUN cd /opt/transmart-data-1.2.4 && . ./vars && make -C config install && make -C solr/ solr_home


# Install groovy
ADD http://dl.bintray.com/groovy/maven/groovy-binary-2.4.3.zip /opt/transmart-data-1.2.4/env/groovy-binary-2.4.3.zip
RUN cd /opt/transmart-data-1.2.4/env/; unzip groovy-binary-2.4.3.zip
ENV PATH /opt/transmart-data-1.2.4/env/groovy-2.4.3/bin:$PATH


# Install Kettle
ADD http://downloads.sourceforge.net/project/pentaho/Data%20Integration/5.3/pdi-ce-5.3.0.0-213.zip?r=http%3A%2F%2Fcommunity.pentaho.com%2Fprojects%2Fdata-integration%2F&ts=1432137602&use_mirror=softlayer-ams /opt/transmart-data-1.2.4/env/kettle.zip
RUN cd /opt/transmart-data-1.2.4/env/; unzip kettle.zip


# Dowload tranSMART-ETL
ADD https://github.com/thehyve/tranSMART-ETL/archive/v1.2.1.zip /opt/transmart-etl.zip
RUN cd /opt; unzip transmart-etl.zip




# Download sample data
RUN cd /opt/transmart-data-1.2.4; . ./vars && make update_datasets


# Create supervisor config
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf


ADD load.sh /usr/local/bin/load
RUN chmod +x /usr/local/bin/load


ADD start-postgres.sh /start-postgres.sh
RUN chmod +x /start-postgres.sh


# work around for AUFS bug
# as per https://github.com/docker/docker/issues/783#issuecomment-56013588
RUN mkdir /etc/ssl/private-copy; mv /etc/ssl/private/* /etc/ssl/private-copy/; rm -r /etc/ssl/private; mv /etc/ssl/private-copy /etc/ssl/private; chmod -R 0700 /etc/ssl/private; chown -R postgres /etc/ssl/private


# Ports for postgresql and tomcat are exposed
#postgresql
EXPOSE 5432
#transmart
EXPOSE 8080
#solr
EXPOSE 8983
#rserver
EXPOSE 6311


CMD [""/usr/bin/supervisord""]
","Groovy
75.8%





R
22.8%





Shell
1.4%",2015-04-28 15:53:59,2016-11-12 14:58:52,https://github.com/io-informatics/transmart-docker
19,io-informatics/transmart-docker,"Organization(name=None, id=9287234)","FROM     buildpack-deps:sid-curl
MAINTAINER Alexander De Leon <me@alexdeleon.name>


# Install dependencies
RUN apt-get update && apt-get -y install make postgresql php5 sudo supervisor


# Set up locale
RUN localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG en_US.utf8




# Install transmart-data
ADD https://github.com/transmart/transmart-data/archive/v1.2.4.tar.gz /opt/transmart-data.tar.gz
RUN cd /opt; tar xzf transmart-data.tar.gz
ADD vars /opt/transmart-data-1.2.4/vars
RUN chown -R postgres:postgres /opt/transmart-data-1.2.4
RUN chown -R postgres:postgres /var/lib/postgresql/9.4/main/


# Init DB
RUN  mkdir /etc/ssl/private-copy; mv /etc/ssl/private/* /etc/ssl/private-copy/; rm -r /etc/ssl/private; mv /etc/ssl/private-copy /etc/ssl/private; chmod -R 0700 /etc/ssl/private; chown -R postgres /etc/ssl/private && /etc/init.d/postgresql start && su postgres -c ""cd /opt/transmart-data-1.2.4 && . ./vars && skip_fix_tablespaces=1 make -j4""


# Create supervisor config
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf


# work around for AUFS bug
# as per https://github.com/docker/docker/issues/783#issuecomment-56013588
RUN mkdir /etc/ssl/private-copy; mv /etc/ssl/private/* /etc/ssl/private-copy/; rm -r /etc/ssl/private; mv /etc/ssl/private-copy /etc/ssl/private; chmod -R 0700 /etc/ssl/private; chown -R postgres /etc/ssl/private


# replace existing listen_addresses entry by our own
RUN perl -i -pe ""s/.*listen_addresses.+/listen_addresses = '*'/"" /etc/postgresql/9.4/main/postgresql.conf
# allow any connection to postgres
RUN echo ""host all all 0.0.0.0/0 md5"" >> /etc/postgresql/9.4/main/pg_hba.conf


# Ports
#postgresql
EXPOSE 5432


CMD [""/usr/bin/supervisord""]
","Groovy
75.8%





R
22.8%





Shell
1.4%",2015-04-28 15:53:59,2016-11-12 14:58:52,https://github.com/io-informatics/transmart-docker
20,io-informatics/transmart-docker,"Organization(name=None, id=9287234)","FROM     buildpack-deps:sid-curl
MAINTAINER Alexander De Leon <me@alexdeleon.name>


# Install dependencies
RUN apt-get update && apt-get -y install make postgresql php5 sudo supervisor


# Set up locale
RUN localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
ENV LANG en_US.utf8




# Install transmart-data
ADD https://github.com/transmart/transmart-data/archive/v1.2.4.tar.gz /opt/transmart-data.tar.gz
RUN cd /opt; tar xzf transmart-data.tar.gz
ADD vars /opt/transmart-data-1.2.4/vars
RUN chown -R postgres:postgres /opt/transmart-data-1.2.4
RUN chown -R postgres:postgres /var/lib/postgresql/9.4/main/


# Init DB
RUN  mkdir /etc/ssl/private-copy; mv /etc/ssl/private/* /etc/ssl/private-copy/; rm -r /etc/ssl/private; mv /etc/ssl/private-copy /etc/ssl/private; chmod -R 0700 /etc/ssl/private; chown -R postgres /etc/ssl/private && /etc/init.d/postgresql start && su postgres -c ""cd /opt/transmart-data-1.2.4 && . ./vars && skip_fix_tablespaces=1 make -j4""


# Create supervisor config
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf


# work around for AUFS bug
# as per https://github.com/docker/docker/issues/783#issuecomment-56013588
RUN mkdir /etc/ssl/private-copy; mv /etc/ssl/private/* /etc/ssl/private-copy/; rm -r /etc/ssl/private; mv /etc/ssl/private-copy /etc/ssl/private; chmod -R 0700 /etc/ssl/private; chown -R postgres /etc/ssl/private


# replace existing listen_addresses entry by our own
RUN perl -i -pe ""s/.*listen_addresses.+/listen_addresses = '*'/"" /etc/postgresql/9.4/main/postgresql.conf
# allow any connection to postgres
RUN echo ""host all all 0.0.0.0/0 md5"" >> /etc/postgresql/9.4/main/pg_hba.conf


# Ports
#postgresql
EXPOSE 5432


CMD [""/usr/bin/supervisord""]
","Groovy
75.8%





R
22.8%





Shell
1.4%",2015-04-28 15:53:59,2016-11-12 14:58:52,https://github.com/io-informatics/transmart-docker
21,alexjpaz/phantomjs-runner,,"FROM cmfatih/phantomjs
COPY app /app
EXPOSE 80
ENTRYPOINT phantomjs /app/phantomjs-runner.js
","JavaScript
100.0%",2015-04-29 16:05:20,2015-04-29 18:51:39,https://github.com/alexjpaz/phantomjs-runner
22,awslabs/ecs-cloudwatch-logs,"Organization(name=None, id=3299148)","FROM ubuntu:trusty
MAINTAINER Chad Schmutzer <schmutze@amazon.com>


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get -q update && \
  apt-get -y -q dist-upgrade && \
  apt-get -y -q install rsyslog python-setuptools python-pip curl


RUN curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -o awslogs-agent-setup.py


RUN sed -i ""s/#\$ModLoad imudp/\$ModLoad imudp/"" /etc/rsyslog.conf && \
  sed -i ""s/#\$UDPServerRun 514/\$UDPServerRun 514/"" /etc/rsyslog.conf && \
  sed -i ""s/#\$ModLoad imtcp/\$ModLoad imtcp/"" /etc/rsyslog.conf && \
  sed -i ""s/#\$InputTCPServerRun 514/\$InputTCPServerRun 514/"" /etc/rsyslog.conf


RUN sed -i ""s/authpriv.none/authpriv.none,local6.none,local7.none/"" /etc/rsyslog.d/50-default.conf


RUN echo ""if \$syslogfacility-text == 'local6' and \$programname == 'httpd' then /var/log/httpd-access.log"" >> /etc/rsyslog.d/httpd.conf && \
	echo ""if \$syslogfacility-text == 'local6' and \$programname == 'httpd' then ~"" >> /etc/rsyslog.d/httpd.conf && \
	echo ""if \$syslogfacility-text == 'local7' and \$programname == 'httpd' then /var/log/httpd-error.log"" >> /etc/rsyslog.d/httpd.conf && \
	echo ""if \$syslogfacility-text == 'local7' and \$programname == 'httpd' then ~"" >> /etc/rsyslog.d/httpd.conf


COPY awslogs.conf awslogs.conf
RUN python ./awslogs-agent-setup.py -n -r us-east-1 -c /awslogs.conf


RUN pip install supervisor
COPY supervisord.conf /usr/local/etc/supervisord.conf


EXPOSE 514/tcp 514/udp
CMD [""/usr/local/bin/supervisord""]
",,2015-05-08 16:22:59,2017-08-29 02:51:07,https://github.com/awslabs/ecs-cloudwatch-logs
23,blindFS/docker-ns-3,,"FROM ubuntu:14.04


ADD sources.list /etc/apt/sources.list


RUN apt-get update && apt-get install -y python-dev python-pygraphviz python-kiwi \
    python-pygoocanvas python-gnome2 python-rsvg ipython


RUN apt-get install -y wget tar g++


# Replace 1000 with your user / group id
RUN export uid=1000 gid=1000 && \
    mkdir -p /home/developer && \
    echo ""developer:x:${uid}:${gid}:Developer,,,:/home/developer:/bin/bash"" >> /etc/passwd && \
    echo ""developer:x:${uid}:"" >> /etc/group && \
    echo ""developer ALL=(ALL) NOPASSWD: ALL"" > /etc/sudoers.d/developer && \
    chmod 0440 /etc/sudoers.d/developer && \
    chown ${uid}:${gid} -R /home/developer


USER developer
ENV HOME /home/developer


RUN wget https://www.nsnam.org/release/ns-allinone-3.22.tar.bz2 -O /home/developer/ns-3.tar.bz2
RUN cd /home/developer && tar jxf ns-3.tar.bz2 && cd ns-allinone-3.22 && \
    ./build.py --enable-examples --enable-tests --build-options=--progress
RUN rm /home/developer/ns-3.tar.bz2 && sudo apt-get autoclean && sudo apt-get clean
",,2015-04-30 03:23:14,2015-04-30 03:23:14,https://github.com/blindFS/docker-ns-3
24,Omrigan/omrigan.cf,,"FROM ubuntu:14.04
MAINTAINER Oleg Vasilev <omrigann@gmail.com>
RUN apt-get update
RUN apt-get -y upgrade
RUN apt-get install -y tar \
                   git \
                   curl \
                   nano \
                   wget \
                   dialog \
                   net-tools \
                   build-essential
RUN apt-get install -y python3 python3-dev python3-pip
RUN apt-get install -y apache2 apache2-mpm-prefork apache2-utils libexpat1 ssl-cert libapache2-mod-python libapache2-mod-wsgi
RUN /etc/init.d/apache2 restart
ADD . /var/www/omrigan
ADD omrigan.cf.conf /etc/apache2/sites-available/omrigan.cf.conf
RUN a2ensite omrigan.cf
RUN a2dissite 000-default
RUN pip3 install -r /var/www/omrigan/requirements.txt
RUN /etc/init.d/apache2 restart
EXPOSE 80
CMD /usr/sbin/apache2ctl -D FOREGROUND
","CSS
39.6%





HTML
31.7%





ApacheConf
20.8%





Python
5.9%





JavaScript
2.0%",2015-04-30 06:00:29,2016-10-02 10:30:36,https://github.com/Omrigan/omrigan.cf
25,MahmoudMahfouz/nvm-rvm-strider,,"FROM ubuntu:14.04
MAINTAINER Mahmoud Mahfouz <mahmoud.mahfouz.zaza@gmail.com>


ADD sv_stdout.conf /etc/supervisor/conf.d/
ENV STRIDER_VERSION v1.6.6
ENV STRIDER_REPO https://github.com/Strider-CD/strider


ENV HOME /home/strider
ENV NODE_V 0.10.30
ENV BASH_ENV /etc/bash.bashrc
ENV RUBY_VERSIONS ruby-2.2.0


RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV RUBY_VERSIONS ruby-2.1.3


RUN apt-get update && \
  apt-get install -y git supervisor python-pip && \
  pip install supervisor-stdout && \
  sed -i 's/^\(\[supervisord\]\)$/\1\nnodaemon=true/' /etc/supervisor/supervisord.conf


RUN apt-get install -y nginx openssh-server git-core openssh-client curl
RUN apt-get install -y nano
RUN apt-get install -y build-essential
RUN apt-get install -y openssl libreadline6 libreadline6-dev curl zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion pkg-config gawk libgdbm-dev libffi-dev libmysqlclient-dev


ADD sv_stdout.conf /etc/supervisor/conf.d/


RUN rm /bin/sh && ln -s /bin/bash /bin/sh


VOLUME /home/strider/.strider
RUN mkdir -p /home/strider && mkdir -p /opt/strider
RUN adduser --disabled-password --gecos """" --home /home/strider strider
RUN chown -R strider:strider /home/strider
RUN chown -R strider:strider /opt/strider
RUN ln -s /opt/strider/src/bin/strider /usr/local/bin/strider
USER strider
ENV HOME /home/strider


RUN curl https://raw.githubusercontent.com/creationix/nvm/v0.24.1/install.sh | bash && \
	. ~/.nvm/nvm.sh && \
	nvm install ""$NODE_V"" && \
	nvm use ""$NODE_V"" && \
	nvm alias default ""$NODE_V""


RUN gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
RUN /bin/bash -l -c ""\curl -L https://get.rvm.io | bash -s stable && source  ~/.rvm/scripts/rvm && rvm requirements && rvm install $RUBY_VERSIONS && gem install bundler --no-ri --no-rdoc""


RUN /bin/bash -l -c ""git clone --branch $STRIDER_VERSION --depth 1 $STRIDER_REPO /opt/strider/src && \
  source $HOME/.nvm/nvm.sh && \
  cd /opt/strider/src && \
  npm install && \
  npm run build""


RUN echo ""export PATH=$PATH:$NVM_BIN"" >> ~/.profile
RUN echo ""export PATH=$PATH:$rvm_bin_path"" >> ~/.profile
RUN echo ""source $HOME/.nvm/nvm.sh"" >> ~/.profile
RUN echo ""source $HOME/.rvm/scripts/rvm"" >> ~/.profile
COPY start.sh /usr/local/bin/start.sh
ADD strider.conf /etc/supervisor/conf.d/strider.conf
EXPOSE 3000
USER root
CMD [""bash"", ""--login"", ""/usr/local/bin/start.sh""]
","Shell
100.0%",2015-04-27 16:43:39,2015-05-01 19:15:17,https://github.com/MahmoudMahfouz/nvm-rvm-strider
26,m1ckr1sk/A-Star-Ruby,,"FROM ruby:2.1-onbuild
CMD echo You need to docker run with an explicit command


","Ruby
91.1%





HTML
6.4%





Shell
1.8%





Batchfile
0.7%",2015-05-05 09:12:11,2017-09-26 11:45:53,https://github.com/m1ckr1sk/A-Star-Ruby
27,haggen/docker-nginx,,"FROM debian:jessie


MAINTAINER Arthur <arthur@corenzan.com>


RUN groupadd -r www && useradd -r -g www www


RUN apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62
RUN echo ""deb http://nginx.org/packages/mainline/debian/ jessie nginx"" >> /etc/apt/sources.list


RUN apt-get update && apt-get install -y ca-certificates nginx=1.9.3-1~jessie php5-fpm php5-cli php5-mcrypt php5-mysql php5-gd php5-pgsql php5-xcache && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


RUN mkdir -p /var/log/php /var/log/php-fpm && ln -sf /dev/stdout /var/log/nginx/static.log && ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log && ln -sf /dev/stderr /var/log/php/error.log && ln -sf /dev/stderr /var/log/php-fpm/error.log && ln -sf /dev/stdout /var/log/php-fpm/slow.log && ln -sf /dev/stdout /var/log/php-fpm/access.log


COPY nginx /etc/nginx
COPY php5 /etc/php5
COPY www /var/www


VOLUME [""/var/www"", ""/var/log/nginx"", ""/etc/nginx"", ""/etc/php5/fpm"", ""/etc/php5/fpm/pool.d"", ""/var/log/php"", ""/var/log/php-fpm""]


EXPOSE 80 443


COPY www.sh /usr/bin/www.sh


CMD [""/usr/bin/www.sh""]
","Nginx
60.6%





DIGITAL Command Language
35.3%





Shell
2.7%





HTML
1.2%





PHP
0.2%",2015-05-04 14:38:27,2015-05-06 17:12:28,https://github.com/haggen/docker-nginx
28,julienvincent/docker-composer,,"# julienvincent/composer


FROM php:7-cli
MAINTAINER ""Julien Vincent"" <julienlucvincent@gmail.com>


# Install HHVM
RUN apt-get update -y && \
    apt-get install -y curl zlibc zlib1g zlib1g-dev


RUN docker-php-ext-install mbstring
RUN docker-php-ext-install zip


RUN curl -sS https://getcomposer.org/installer | php
RUN mv composer.phar /usr/local/bin/composer


ENTRYPOINT [""composer""]
CMD [""--help""]
",,2015-05-05 20:10:31,2015-08-06 21:20:12,https://github.com/julienvincent/docker-composer
29,sitle/docker-php,,"FROM sitle/debian:wheezy
MAINTAINER Léonard TAVAE <leonard.tavae@gmail.com>


RUN apt-get update && apt-get install -y php5-cli php5-mysql 
",,2015-05-10 10:32:38,2015-05-10 10:32:38,https://github.com/sitle/docker-php
0,arvatoSystemsNA/turbine,"Organization(name=None, id=556312)","FROM asna/java8:wheezy


WORKDIR /opt/turbine


EXPOSE 8080
RUN apt-get update && apt-get install curl unzip -y && \
    curl https://repo1.maven.org/maven2/com/netflix/turbine/turbine-web/1.0.0/turbine-web-1.0.0.war -o turbine-web-1.0.0.war && \ 
    curl https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-runner/9.2.7.v20150116/jetty-runner-9.2.7.v20150116.jar -o jetty-runner.jar && \
    unzip -d app/ turbine-web-1.0.0.war && \
    rm turbine-web-1.0.0.war 


CMD [ ""java"", ""-jar"", ""jetty-runner.jar"", ""app"" ]


ONBUILD COPY resources/config.properties /opt/turbine/app/WEB-INF/classes/config.properties
",,2015-05-08 02:27:06,2015-05-08 02:27:06,https://github.com/arvatoSystemsNA/turbine
1,granthbr/integrationCollab,,"FROM ubuntu
 
 
MAINTAINER Brandon Grantham <brandon.grantham@gmail.com>


RUN sed 's/main$/main universe/' -i /etc/apt/sources.list
RUN apt-get update
RUN apt-get upgrade -y


RUN apt-get install -y python-software-properties 
RUN	apt-get install software-properties-common python-software-properties -y 
RUN add-apt-repository ppa:webupd8team/java -y 
RUN apt-get update 
RUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections 
RUN apt-get install -y oracle-java7-installer 
","Java
87.1%





XSLT
12.9%",2015-05-23 16:59:51,2015-06-17 19:50:48,https://github.com/granthbr/integrationCollab
2,granthbr/integrationCollab,,"FROM granthbr/java-oracle-7
MAINTAINER Brandon Grantham <brandon.grantham@gmail.com> 


RUN wget https://repository.mulesoft.org/nexus/content/repositories/releases/org/mule/distributions/mule-standalone/3.6.1/mule-standalone-3.6.1.tar.gz 
RUN chmod 777 mule-standalone-3.6.1.tar.gz
RUN cd /opt && tar xvzf ../mule-standalone-3.6.1.tar.gz
RUN echo ""4a94356f7401ac8be30a992a414ca9b9 /mule-standalone-3.6.1.tar.gz"" |md5sum -c
RUN rm ~/mule-standalone-3.6.1.tar.gz
RUN ln -s /opt/mule-standalone-3.5.0 /opt/mule 


CMD [""/opt/mule/bin/mule""]


","Java
87.1%





XSLT
12.9%",2015-05-23 16:59:51,2015-06-17 19:50:48,https://github.com/granthbr/integrationCollab
3,jochen/docker-ape,,"FROM phusion/baseimage
MAINTAINER Jochen Roessner <jochen@zerties.org>


# Install base packages
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -yq install \
        curl \
        apache2 \
        libapache2-mod-php5 \
        php5-mysql \
        php5-gd \
        php5-curl \
        php-pear \
        php-apc && \
    apt-get clean && \
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN echo ""ServerName localhost"" >> /etc/apache2/apache2.conf && \
    sed -i ""s/variables_order.*/variables_order = \""EGPCS\""/g"" /etc/php5/apache2/php.ini
 
RUN apt-get -yq install exim4-daemon-light && apt-get clean


ENV ALLOW_OVERRIDE **False**


# Configure /app folder with sample app
RUN mkdir -p /app && rm -fr /var/www/html && ln -s /app /var/www/html


ADD eximsmarthost.sh /etc/service/exim/run
ADD apache.sh /etc/service/apache2/run


EXPOSE 80
WORKDIR /app
","Shell
100.0%",2015-05-30 09:46:22,2015-05-30 09:47:43,https://github.com/jochen/docker-ape
4,leafknode/jetty-9.2.11-oracle-jdk8,,"# this container is intended to be used as a base for other containers


FROM leafknode/base-ubuntu-oracle-jdk8


MAINTAINER James Humphrey ""james.humphrey@leafknode.com""


# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added
RUN groupadd -r jetty && useradd -r -g jetty jetty


ENV JETTY_HOME /usr/local/jetty
ENV PATH $JETTY_HOME/bin:$PATH
RUN mkdir -p ""$JETTY_HOME""
WORKDIR $JETTY_HOME


# see http://dev.eclipse.org/mhonarc/lists/jetty-users/msg05220.html
ENV JETTY_GPG_KEYS \
 # 1024D/8FB67BAC 2006-12-10 Joakim Erdfelt <joakime@apache.org>
	B59B67FD7904984367F931800818D9D68FB67BAC \
 # 1024D/D7C58886 2010-03-09 Jesse McConnell (signing key) <jesse.mcconnell@gmail.com>
	5DE533CB43DAF8BC3E372283E7AE839CD7C58886


RUN set -xe \
	&& for key in $JETTY_GPG_KEYS; do \
		gpg --keyserver ha.pool.sks-keyservers.net --recv-keys ""$key""; \
	done


ENV JETTY_VERSION 9.2.11.v20150529
ENV JETTY_TGZ_URL https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/$JETTY_VERSION/jetty-distribution-$JETTY_VERSION.tar.gz


RUN set -xe \
	&& curl -SL ""$JETTY_TGZ_URL"" -o jetty.tar.gz \
	&& curl -SL ""$JETTY_TGZ_URL.asc"" -o jetty.tar.gz.asc \
	&& gpg --verify jetty.tar.gz.asc \
	&& tar -xvf jetty.tar.gz --strip-components=1 \
	&& sed -i '/jetty-logging/d' etc/jetty.conf \
	&& rm -fr demo-base javadoc \
	&& rm jetty.tar.gz*


ENV JETTY_BASE /var/lib/jetty
RUN mkdir -p ""$JETTY_BASE"" && chown jetty:jetty ""$JETTY_BASE""
WORKDIR $JETTY_BASE


# Get the list of modules in the default start.ini and build new base with those modules, then add setuid
RUN modules=""$(grep -- ^--module= ""$JETTY_HOME/start.ini"" | cut -d= -f2 | paste -d, -s)"" \
	&& set -xe \
	&& java -jar ""$JETTY_HOME/start.jar"" --add-to-startd=""$modules,setuid""


ENV JETTY_RUN /run/jetty
ENV JETTY_STATE $JETTY_RUN/jetty.state
ENV TMPDIR /tmp/jetty
RUN set -xe \
	&& mkdir -p ""$JETTY_RUN"" ""$TMPDIR"" \
	&& chown -R jetty:jetty ""$JETTY_RUN"" ""$TMPDIR""
",,2015-06-08 22:13:36,2015-06-08 22:13:36,https://github.com/leafknode/jetty-9.2.11-oracle-jdk8
5,solnet-cloud/docker-rabbitmq,"Organization(name=None, id=12439383)","# RabbitMQ Dockerfile
# Solnet Solutions
# Version: 3.5.3


# Pull base image (Ubunu 14.04)
FROM ubuntu:14.04


# Build Instructions
# When building use the following flags:
#      --tag ""solnetcloud/rabbitmq:3.5.3""


# Run Instructions:
# When running use the following flags:
#       --restart=on-failure  --log-driver=syslog
# The following command line arguments are supported.
# usage: entry member_addr [member_addr ...]
#
# positional arguments:
#   member_addr           IP address(es) for other member(s) of the cluster




# NOTICE: This is designed to be run as a cluster of RabbitMQ each running on separate physical hosts
# (to achieve software and hardware redundancy) in active-active configuration.  It is recommended you utilise Weave for this.


# Information
MAINTAINER Antonia Caskey <antonia.caskey@solnet.co.nz>
LABEL Description=""This image is used to stand up a RabbitMQ instance with clustering."" Version=""3.5.3""


# Patch notes:
# Version 3.5.3
#       - Current working version of RabbitMQ


# Install any required packages
# Updating our system's default application toolset
RUN \
	apt-get -q update && \
	apt-get -q -y upgrade
# Enable RabbitMQ application repository
RUN echo ""deb http://www.rabbitmq.com/debian/ testing main"" >> /etc/apt/sources.list


# install curl
RUN sudo apt-get -q -y install curl
# Add the verification key for the package
RUN curl http://www.rabbitmq.com/rabbitmq-signing-key-public.asc | sudo apt-key add -


# Update the sources
RUN apt-get update


# Install Erlang packages
RUN sudo apt-get -q -y install erlang erlang-doc


# download and install rabbitmq-server and extra packages
RUN \
	 sudo apt-get -q -y install rabbitmq-server python-software-properties python python-jinja2 python-ipy && \
	apt-get -q clean && \
	sudo /usr/sbin/rabbitmq-plugins enable rabbitmq_mqtt rabbitmq_stomp rabbitmq_management  rabbitmq_management_agent rabbitmq_management_visualiser rabbitmq_federation rabbitmq_federation_management sockjs


ADD erlang.cookie /var/lib/rabbitmq/.erlang.cookie
RUN chown rabbitmq:rabbitmq /var/lib/rabbitmq/.erlang.cookie
RUN chmod 400 /var/lib/rabbitmq/.erlang.cookie


# Prepare directrories
RUN \
    mkdir -p /rmq-data/ && \
    mkdir -p /rmq-templates


ADD templates/rabbitmq.config /rmq-templates/rabbitmq.config


# Change the rabbitmq-server file
COPY config/rabbitmq-server /etc/default/rabbitmq-server


# Entry script
COPY scripts/entry.py /usr/local/bin/entry
RUN chmod +x /usr/local/bin/entry


# Set timezone
RUN \
    echo ""Pacific/Auckland"" > /etc/timezone && \
    dpkg-reconfigure -f noninteractive tzdata


# Expose ports to other containers
EXPOSE 5672
EXPOSE 4369
EXPOSE 25672
EXPOSE 15672


# Define the default command as entrypoint
ENTRYPOINT [""/usr/local/bin/entry""]
","Python
100.0%",2015-06-08 23:43:02,2015-06-30 04:15:33,https://github.com/solnet-cloud/docker-rabbitmq
6,solnet-cloud/docker-rabbitmq,"Organization(name=None, id=12439383)","# RabbitMQ Dockerfile
# Solnet Solutions
# Version: 3.5.3


# Pull base image (Ubunu 14.04)
FROM ubuntu:14.04


# Build Instructions
# When building use the following flags:
#      --tag ""solnetcloud/rabbitmq:3.5.3""


# Run Instructions:
# When running use the following flags:
#       --restart=on-failure  --log-driver=syslog
# The following command line arguments are supported.
# usage: entry member_addr [member_addr ...]
#
# positional arguments:
#   member_addr           IP address(es) for other member(s) of the cluster




# NOTICE: This is designed to be run as a cluster of RabbitMQ each running on separate physical hosts
# (to achieve software and hardware redundancy) in active-active configuration.  It is recommended you utilise Weave for this.


# Information
MAINTAINER Antonia Caskey <antonia.caskey@solnet.co.nz>
LABEL Description=""This image is used to stand up a RabbitMQ instance with clustering."" Version=""3.5.3""


# Patch notes:
# Version 3.5.3
#       - Current working version of RabbitMQ


# Install any required packages
# Updating our system's default application toolset
RUN \
	apt-get -q update && \
	apt-get -q -y upgrade
# Enable RabbitMQ application repository
RUN echo ""deb http://www.rabbitmq.com/debian/ testing main"" >> /etc/apt/sources.list


# install curl
RUN sudo apt-get -q -y install curl
# Add the verification key for the package
RUN curl http://www.rabbitmq.com/rabbitmq-signing-key-public.asc | sudo apt-key add -


# Update the sources
RUN apt-get update


# Install Erlang packages
RUN sudo apt-get -q -y install erlang erlang-doc


# download and install rabbitmq-server and extra packages
RUN \
	 sudo apt-get -q -y install rabbitmq-server python-software-properties python python-jinja2 python-ipy && \
	apt-get -q clean && \
	sudo /usr/sbin/rabbitmq-plugins enable rabbitmq_mqtt rabbitmq_stomp rabbitmq_management  rabbitmq_management_agent rabbitmq_management_visualiser rabbitmq_federation rabbitmq_federation_management sockjs


# Prepare directrories
RUN \
    mkdir -p /rmq-data/ && \
    mkdir -p /rmq-templates


ADD templates/rabbitmq.config /rmq-templates/rabbitmq.config


# Change the rabbitmq-server file
COPY config/rabbitmq-server /etc/default/rabbitmq-server


# Entry script
COPY scripts/entry.py /usr/local/bin/entry
RUN chmod +x /usr/local/bin/entry


# Set timezone
RUN \
    echo ""Pacific/Auckland"" > /etc/timezone && \
    dpkg-reconfigure -f noninteractive tzdata


# Expose ports to other containers
EXPOSE 5672
EXPOSE 4369
EXPOSE 25672
EXPOSE 15672


# Define the default command as entrypoint
ENTRYPOINT [""/usr/local/bin/entry""]
","Python
100.0%",2015-06-08 23:43:02,2015-06-30 04:15:33,https://github.com/solnet-cloud/docker-rabbitmq
7,emanueleperuffo/docker-mariadb,,"FROM emanueleperuffo/baseimage-debian:latest
MAINTAINER Emanuele Peruffo <info@emanueleperuffo.com>


ENV HOME /root
ADD . /build


ENV MARIADB_VERSION 10.0
ENV MYSQL_ROOT_PASSWORD pass


RUN /build/prepare.sh && \
	/build/services.sh && \
	/build/cleanup.sh


VOLUME [""/var/lib/mysql""]


EXPOSE 3306


CMD [""/sbin/my_init""]
","Shell
85.1%





Makefile
14.9%",2015-06-08 11:09:06,2015-06-08 11:09:29,https://github.com/emanueleperuffo/docker-mariadb
8,jeanparpaillon/emupi,,"FROM debian:jessie
MAINTAINER Jean Parpaillon <jean.parpaillon@free.fr>


ENV DEBIAN_FRONTEND noninteractive


RUN ( echo ""deb http://cdn.debian.net/debian jessie main contrib non-free""; \
      echo ""deb-src http://cdn.debian.net/debian jessie main contrib non-free""; \
      echo ""deb http://cdn.debian.net/debian jessie-updates main contrib non-free""; \
      echo ""deb-src http://cdn.debian.net/debian jessie-updates main contrib non-free""; \
      echo ""deb http://security.debian.org jessie/updates main contrib non-free""; \
      echo ""deb-src http://security.debian.org jessie/updates main contrib non-free"" ) \
      > /etc/apt/sources.list && \
    apt-get update && \
    apt-get -y install wget apt-utils build-essential git devscripts ca-certificates zip debhelper pkg-config x11-apps libfdt-dev &&  \
    apt-get clean
RUN git clone --depth 1 --branch rpi https://github.com/Torlus/qemu.git
RUN cd qemu && git checkout `cat /root/qemu.lock`
RUN apt-get update && apt-get -y build-dep qemu && apt-get clean
RUN cd qemu && ./configure --prefix=/opt/qemu-rpi --target-list=arm-softmmu && make && make install
RUN for i in `seq 0 7`; do mknod /dev/loop$i b -m0660 7 $i; done


ADD emupi /root/emupi
ADD rpimount /root/rpimount
ADD blkoffset /root/blkoffset
ADD qemu.lock /root/qemu.lock


ENTRYPOINT [""/root/emupi"", ""/rpi.img""]
","Shell
88.8%





Makefile
11.2%",2015-05-28 09:56:40,2017-01-20 14:54:09,https://github.com/jeanparpaillon/emupi
9,ajlopez/JavaSamples,,"###
# swagger-ui-builder - https://github.com/swagger-api/swagger-ui/
# Container for building the swagger-ui static site
#
# Build: docker build -t swagger-ui-builder .
# Run:   docker run -v $PWD/dist:/build/dist swagger-ui-builder
#
###


FROM    ubuntu:14.04
MAINTAINER dnephin@gmail.com


ENV     DEBIAN_FRONTEND noninteractive


RUN     apt-get update && apt-get install -y git npm nodejs openjdk-7-jre
RUN     ln -s /usr/bin/nodejs /usr/local/bin/node


WORKDIR /build
ADD     package.json    /build/package.json
RUN     npm install
ADD     .   /build
CMD     ./node_modules/gulp/bin/gulp.js serve
","Java
47.1%





JavaScript
27.8%





HTML
18.6%





ApacheConf
3.5%





Shell
1.0%





CSS
0.8%





Other
1.2%",2015-05-24 18:05:39,2016-12-28 10:56:09,https://github.com/ajlopez/JavaSamples
10,ajlopez/JavaSamples,,"###
# swagger-ui-builder - https://github.com/swagger-api/swagger-ui/
# Container for building the swagger-ui static site
#
# Build: docker build -t swagger-ui-builder .
# Run:   docker run -v $PWD/dist:/build/dist swagger-ui-builder
#
###


FROM    ubuntu:14.04
MAINTAINER dnephin@gmail.com


ENV     DEBIAN_FRONTEND noninteractive


RUN     apt-get update && apt-get install -y git npm nodejs openjdk-7-jre
RUN     ln -s /usr/bin/nodejs /usr/local/bin/node


WORKDIR /build
ADD     package.json    /build/package.json
RUN     npm install
ADD     .   /build
CMD     ./node_modules/gulp/bin/gulp.js serve
","Java
47.1%





JavaScript
27.8%





HTML
18.6%





ApacheConf
3.5%





Shell
1.0%





CSS
0.8%





Other
1.2%",2015-05-24 18:05:39,2016-12-28 10:56:09,https://github.com/ajlopez/JavaSamples
11,cedbossneo/spring-redis,,"FROM java:8
RUN mkdir /app
ADD build/libs/spring-redis-0.0.1-SNAPSHOT.jar /app/
ADD bootInDocker.sh /app/
WORKDIR /app
RUN chmod a+x bootInDocker.sh


EXPOSE 8080


CMD /app/bootInDo   cker.sh
","Java
74.0%





HTML
20.6%





Nginx
4.0%





Shell
1.4%",2015-05-22 12:00:26,2015-10-27 09:03:21,https://github.com/cedbossneo/spring-redis
12,cedbossneo/spring-redis,,"FROM nginx


RUN mkdir -p /etc/nginx
ADD nginx.conf /etc/nginx/
","Java
74.0%





HTML
20.6%





Nginx
4.0%





Shell
1.4%",2015-05-22 12:00:26,2015-10-27 09:03:21,https://github.com/cedbossneo/spring-redis
13,rizkisunaryo/cinema-ticketing,,"# Copyright 2013 Thatcher Peskens
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


from ubuntu:precise


maintainer Dockerfiles


run echo ""deb http://archive.ubuntu.com/ubuntu precise main universe"" > /etc/apt/sources.list
run apt-get update
run apt-get install -y build-essential git
run apt-get install -y python python-dev python-setuptools
run apt-get install -y nginx supervisor
run easy_install pip


# install uwsgi now because it takes a little while
run pip install uwsgi


# install nginx
run apt-get install -y python-software-properties
run apt-get update
RUN add-apt-repository -y ppa:nginx/stable
run apt-get install -y sqlite3


# install our code
add . /home/docker/code/


# setup all the configfiles
run echo ""daemon off;"" >> /etc/nginx/nginx.conf
run rm /etc/nginx/sites-enabled/default
run ln -s /home/docker/code/nginx-app.conf /etc/nginx/sites-enabled/
run ln -s /home/docker/code/supervisor-app.conf /etc/supervisor/conf.d/


# run pip install
run pip install -r /home/docker/code/app/requirements.txt


# install django, normally you would remove this step because your project would already
# be installed in the code/app/ directory
run django-admin.py startproject website /home/docker/code/app/ 


expose 80
cmd [""supervisord"", ""-n""]
",,2015-05-20 15:32:14,2015-05-20 15:32:14,https://github.com/rizkisunaryo/cinema-ticketing
14,rizkisunaryo/cinema-ticketing,,"FROM oraclelinux:latest


## -- The environment variables set using ENV will persist when a container
## -- is run from the resulting image. -- ##


ENV PACKAGE_URL http://repo.mysql.com/yum/mysql-5.7-community/docker/x86_64/mysql-community-server-minimal-5.7.7-0.3.rc.el7.x86_64.rpm


# Install server
RUN rpmkeys --import http://repo.mysql.com/RPM-GPG-KEY-mysql \
  && yum install -y $PACKAGE_URL \
  && rm -rf /var/cache/yum/*


VOLUME /var/lib/mysql


COPY docker-entrypoint.sh /entrypoint.sh
ENTRYPOINT [""/entrypoint.sh""]


EXPOSE 3306
CMD [""mysqld""]


",,2015-05-20 15:32:14,2015-05-20 15:32:14,https://github.com/rizkisunaryo/cinema-ticketing
15,Baheca76/prueba,,"FROM dockerfile/nodejs


MAINTAINER Matthias Luebken, matthias@catalyst-zero.com


WORKDIR /home/mean


# Install Mean.JS Prerequisites
RUN npm install -g grunt-cli
RUN npm install -g bower


# Install Mean.JS packages
ADD package.json /home/mean/package.json
RUN npm install


# Manually trigger bower. Why doesnt this work via npm install?
ADD .bowerrc /home/mean/.bowerrc
ADD bower.json /home/mean/bower.json
RUN bower install --config.interactive=false --allow-root


# Make everything available for start
ADD . /home/mean


# currently only works for development
ENV NODE_ENV development


# Port 3000 for server
# Port 35729 for livereload
EXPOSE 3000 35729
CMD [""grunt""]
","JavaScript
80.4%





HTML
18.8%





Other
0.8%",2015-05-21 20:29:30,2015-05-21 20:40:42,https://github.com/Baheca76/prueba
16,joe-dick/containers,,"#joe practice
FROM google/nodejs
MAINTAINER yeah boyyy


WORKDIR /home
RUN     git clone https://github.com/shrikrishnaholla/code.it.git


WORKDIR code.it
RUN	git submodule update --init --recursive
RUN	npm install


EXPOSE 8000


WORKDIR /home
CMD	[""node"", ""/home/code.it/app.js""]
",,2015-05-21 22:32:22,2015-05-21 22:32:22,https://github.com/joe-dick/containers
17,ShiningRay/ngx_mruby-docker,,"FROM gliderlabs/alpine:latest
MAINTAINER ShiningRay
EXPOSE 80 
VOLUME [""/nginx/data""]
RUN apk add -U readline pcre
WORKDIR /nginx/
COPY ./nginx/ /nginx
","Shell
100.0%",2015-05-20 03:48:06,2015-05-20 05:57:16,https://github.com/ShiningRay/ngx_mruby-docker
18,chrisdaish/docker-geppetto,,"FROM ubuntu:14.04


MAINTAINER Chris Daish <chrisdaish@gmail.com>


ENV DEBIAN_FRONTEND noninteractive
ENV GEPPETTOPACKAGE geppetto-linux.gtk.x86_64-4.3.1-R201501182354.zip
ENV uid 1000
ENV gid 1000


RUN useradd -m geppetto; \
    apt-get update; \
    apt-get install --no-install-recommends -y unzip \
                                               wget \
                                               openjdk-7-jre; \
    rm -rf /var/lib/apt/lists/*


RUN wget --quiet --no-check-certificate https://downloads.puppetlabs.com/geppetto/4.x/$GEPPETTOPACKAGE -O /tmp/$GEPPETTOPACKAGE; \
    mkdir /home/geppetto/geppetto; \
    unzip /tmp/$GEPPETTOPACKAGE -d /home/geppetto; \
    rm -rf /tmp/$GEPPETTOPACKAGE


COPY start-geppetto.sh /home/geppetto/


ENTRYPOINT [""/home/geppetto/start-geppetto.sh""]
","Shell
100.0%",2015-06-02 20:19:57,2015-06-10 08:37:33,https://github.com/chrisdaish/docker-geppetto
19,shahriarb/sampleweb,,"FROM debian:jessie


ADD ./sampleweb /app/sampleweb


WORKDIR /app


","Go
100.0%",2015-06-04 11:12:13,2015-06-04 11:13:07,https://github.com/shahriarb/sampleweb
20,danillosl/docker-oracle-java,,"FROM docker.io/centos:7


MAINTAINER Danillo Lisboa <danillosl@gmail.com>


RUN yum update -y


RUN curl -v -j -k -L -H ""Cookie: oraclelicense=accept-securebackup-cookie"" http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.rpm > jdk-8u45-linux-x64.rpm \
&& yum install -y jdk-8u45-linux-x64.rpm \
&& rm jdk-8u45-linux-x64.rpm \
&& yum clean all
",,2015-06-07 01:23:44,2015-06-07 01:45:23,https://github.com/danillosl/docker-oracle-java
21,setiseta/docker-cacti,,"FROM phusion/baseimage:0.9.16
MAINTAINER Seti <seti@setadesign.net>


ENV HOME=/root \
    DEBIAN_FRONTEND=noninteractive \
    LC_ALL=C.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8


COPY assets/snmpd.sh /etc/service/snmpd/run
COPY assets/apache2.sh /etc/service/apache2/run
COPY assets/init.sh /etc/my_init.d/init.sh


RUN echo 'APT::Install-Recommends 0;' >> /etc/apt/apt.conf.d/01norecommends && \
    echo 'APT::Install-Suggests 0;' >> /etc/apt/apt.conf.d/01norecommends && \
    apt-get update && \
    apt-get install -y mysql-client snmpd gdebi-core wget && \
    wget https://github.com/setiseta/docker-cacti/releases/download/v0.8.8c-test/cacti-spine_0.8.8c-0ubuntu1_amd64.deb && \
    wget https://github.com/setiseta/docker-cacti/releases/download/v0.8.8c-test/cacti_0.8.8c-0ubuntu1_all.deb && \
    gdebi --non-interactive cacti_0.8.8c-0ubuntu1_all.deb && \
    gdebi --non-interactive cacti-spine_0.8.8c-0ubuntu1_amd64.deb && \
    apt-get remove -y wget gdebi-core && \
    rm -f cacti-spine_0.8.8c-0ubuntu1_amd64.deb cacti_0.8.8c-0ubuntu1_all.deb && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /tmp/* && \
    rm -rf /var/tmp/* && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir -p /data/logs /data/rra /data/config && \
    echo www-data > /etc/container_environment/APACHE_RUN_USER && \
    echo www-data > /etc/container_environment/APACHE_RUN_GROUP && \
    echo /var/log/apache2 > /etc/container_environment/APACHE_LOG_DIR && \
    echo /var/lock/apache2 > /etc/container_environment/APACHE_LOCK_DIR && \
    echo /var/run/apache2.pid > /etc/container_environment/APACHE_PID_FILE && \
    echo /var/run/apache2 > /etc/container_environment/APACHE_RUN_DIR && \
	ln -s /usr/sbin/spine /usr/bin/spine && \
    chmod +x /etc/service/snmpd/run \
        /etc/service/apache2/run \
        /etc/my_init.d/init.sh


COPY assets/config/snmpd.conf /etc/snmp/snmpd.conf
COPY assets/config/vhost.conf /etc/apache2/conf-available/cacti.conf


EXPOSE 80 161


CMD [""/sbin/my_init""]
","Shell
100.0%",2015-06-06 16:11:59,2015-06-07 15:54:01,https://github.com/setiseta/docker-cacti
22,sabre1041/jboss-eap-retrieve-artifact-sti,,"

# jboss-eap-retrieve-artifact-sti
FROM openshift/base-centos7


ENV STI_NODEJS_VERSION 0.10


# TODO: Install required packages here:
# RUN yum install -y ... ; yum clean all -y


USER default


# TODO (optional): Copy the builder files into /opt/openshift
# COPY ./<builder_folder>/ /opt/openshift/


# TODO: Set the default port for applications built using this image
# EXPOSE 3000
","Shell
94.6%





Makefile
5.4%",2015-06-06 16:43:39,2015-06-06 16:47:37,https://github.com/sabre1041/jboss-eap-retrieve-artifact-sti
23,sauldhernandez/openidm-docker,,"FROM java:8-jre


RUN apt-get update && apt-get install -y \
    unzip \
    wget


 
# Prepare openidm
RUN cd /tmp && \
    wget -q https://github.com/OpenRock/OpenIDM/releases/download/3.1.0/openidm-3.1.0.zip && \
    unzip -q openidm-3.1.0.zip -d /opt && \
    rm ./openidm-3.1.0.zip


EXPOSE 8443


# Start OpenIDM
ENTRYPOINT ./opt/openidm/startup.sh
",,2015-06-08 14:26:06,2016-03-30 11:13:11,https://github.com/sauldhernandez/openidm-docker
24,jamesclonk-io/moviedb-frontend,"Organization(name=None, id=12451170)","FROM ubuntu:14.04


MAINTAINER JamesClonk


EXPOSE 3007


RUN apt-get update
RUN apt-get install -y ca-certificates


COPY moviedb-frontend /moviedb-frontend
COPY public /public
COPY templates /templates


ENV JCIO_ENV production
ENV PORT 3007
ENV JCIO_MOVIEDB_BACKEND http://moviedb-backend.jamesclonk.io


CMD [""/moviedb-frontend""]
","Go
50.3%





HTML
49.1%





Makefile
0.6%",2015-05-31 18:58:11,2016-12-25 18:51:08,https://github.com/jamesclonk-io/moviedb-frontend
25,tlitovsk/ovirt-engine-builder,,"FROM centos:7
MAINTAINER ""Tolik Litovsky"" <tlitovsk@redhat.com>
ENV container docker


RUN yum -y update; yum clean all;
RUN yum -y install yum-utils wget tar


#systemd requirment
VOLUME [ ""/sys/fs/cgroup"" ]


# installing build utils of engine
RUN yum install -y java-1.7.0-openjdk-devel git maven
RUN mkdir /root/.m2


ADD settings.xml /root/.m2/
ENV JAVA_HOME /usr/lib/jvm/java-1.7.0-openjdk.x86_64
ENV JBOSS_HOME /usr/share/jboss-as
ENV PATH $HOME/apache-maven-3.0.5/bin:$PATH


RUN cd /usr/share; \
    wget http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.tar.gz; \
    tar -zxvf jboss-as-7.1.1.Final.tar.gz --no-same-owner; \
    ln -s /usr/share/jboss-as-7.1.1.Final /usr/share/jboss-as; \
    chmod -R 777 /usr/share/jboss-as;


#installing postgre sql
RUN yum install -y postgresql-server \
	postgresql-setup initdb \
	systemctl enable postgresql.service


#getting the code
RUN cd /root;git clone git://gerrit.ovirt.org/ovirt-engine;


CMD [""/usr/sbin/init""]


","Makefile
100.0%",2015-06-01 14:16:48,2015-06-01 15:18:52,https://github.com/tlitovsk/ovirt-engine-builder
26,kost/docker-nmap,,"FROM gliderlabs/alpine
MAINTAINER Vlatko Kosturjak kost@kost.im


RUN apk --update add nmap && rm -f /var/cache/apk/*


RUN mkdir /work
VOLUME [""/work""]
WORKDIR /work


ENTRYPOINT [""nmap""]


",,2015-06-01 04:11:13,2017-04-24 18:53:22,https://github.com/kost/docker-nmap
27,praekelt/molo-ndoh-yep,"Organization(name=None, id=81810)","FROM python:2.7.10


RUN apt-get update && apt-get install -y \
	redis-server 


RUN git clone https://github.com/praekelt/molo-ndoh-yep.git ./deploy
RUN virtualenv ./deploy/ve
RUN . ./deploy/ve/bin/activate
RUN pip install gunicorn
RUN pip install supervisor
RUN pip install --no-cache-dir -e ./deploy/
RUN ./deploy/manage.py migrate
ADD docker-entrypoint.sh ./deploy/
RUN chmod +x ./deploy/docker-entrypoint.sh
EXPOSE 8000
ENTRYPOINT [""./deploy/docker-entrypoint.sh"", ""bwise"", ""ndohyep.wsgi"", ""8000""]
","Python
33.7%





HTML
32.6%





CSS
31.9%





Shell
1.8%",2015-06-02 08:20:23,2016-05-09 12:28:44,https://github.com/praekelt/molo-ndoh-yep
28,chbrown/npm-search-server,,"FROM node:0.12


MAINTAINER Christopher Brown <io@henrian.com>


COPY . /app
WORKDIR /app


RUN npm install


EXPOSE 80


CMD [""npm"", ""start""]
","TypeScript
50.7%





JavaScript
49.0%





Makefile
0.3%",2015-06-19 01:30:56,2016-08-10 17:30:08,https://github.com/chbrown/npm-search-server
29,PaNuK/GGOnItsOwnYo,,"FROM dockerfile/nodejs


MAINTAINER Matthias Luebken, matthias@catalyst-zero.com


WORKDIR /home/mean


# Install Mean.JS Prerequisites
RUN npm install -g grunt-cli
RUN npm install -g bower


# Install Mean.JS packages
ADD package.json /home/mean/package.json
RUN npm install


# Manually trigger bower. Why doesnt this work via npm install?
ADD .bowerrc /home/mean/.bowerrc
ADD bower.json /home/mean/bower.json
RUN bower install --config.interactive=false --allow-root


# Make everything available for start
ADD . /home/mean


# currently only works for development
ENV NODE_ENV development


# Port 3000 for server
# Port 35729 for livereload
EXPOSE 3000 35729
CMD [""grunt""]
","JavaScript
76.4%





HTML
22.9%





Other
0.7%",2015-06-12 19:23:22,2015-06-12 19:23:31,https://github.com/PaNuK/GGOnItsOwnYo
0,colebrumley/go-static-docker,,"FROM        golang
ENV         CGO_ENABLED=0
COPY        build.sh /
RUN         chmod +x /build.sh
VOLUME      /go/bin
CMD         /build.sh
","Shell
100.0%",2015-08-10 04:20:24,2015-08-10 04:29:00,https://github.com/colebrumley/go-static-docker
1,hekra01/docker,,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#


FROM ubuntu:14.04
MAINTAINER Tianon Gravi <admwiggin@gmail.com> (@tianon)


RUN	apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net --recv-keys E871F18B51E0147C77796AC81196BA81F6B0FC61
RUN	echo deb http://ppa.launchpad.net/zfs-native/stable/ubuntu trusty main > /etc/apt/sources.list.d/zfs.list


# Packaged dependencies
RUN apt-get update && apt-get install -y \
	apparmor \
	aufs-tools \
	automake \
	bash-completion \
	btrfs-tools \
	build-essential \
	curl \
	dpkg-sig \
	git \
	iptables \
	libapparmor-dev \
	libcap-dev \
	libsqlite3-dev \
	mercurial \
	parallel \
	python-mock \
	python-pip \
	python-websocket \
	reprepro \
	ruby1.9.1 \
	ruby1.9.1-dev \
	s3cmd=1.1.0* \
	ubuntu-zfs \
	libzfs-dev \
	--no-install-recommends


# Get lvm2 source for compiling statically
RUN git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2
# see https://git.fedorahosted.org/cgit/lvm2.git/refs/tags for release tags


# Compile and install lvm2
RUN cd /usr/local/lvm2 \
	&& ./configure --enable-static_link \
	&& make device-mapper \
	&& make install_device-mapper
# see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL


# Install lxc
ENV LXC_VERSION 1.0.7
RUN mkdir -p /usr/src/lxc \
	&& curl -sSL https://linuxcontainers.org/downloads/lxc/lxc-${LXC_VERSION}.tar.gz | tar -v -C /usr/src/lxc/ -xz --strip-components=1
RUN cd /usr/src/lxc \
	&& ./configure \
	&& make \
	&& make install \
	&& ldconfig


# Install Go
ENV GO_VERSION 1.4.2
RUN curl -sSL https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar -v -C /usr/local -xz \
	&& mkdir -p /go/bin
ENV PATH /go/bin:/usr/local/go/bin:$PATH
ENV GOPATH /go:/go/src/github.com/docker/docker/vendor
RUN cd /usr/local/go/src && ./make.bash --no-clean 2>&1


# Compile Go for cross compilation
ENV DOCKER_CROSSPLATFORMS \
	linux/386 linux/arm \
	darwin/amd64 darwin/386 \
	freebsd/amd64 freebsd/386 freebsd/arm \
	windows/amd64 windows/386


# (set an explicit GOARM of 5 for maximum compatibility)
ENV GOARM 5
RUN cd /usr/local/go/src \
	&& set -x \
	&& for platform in $DOCKER_CROSSPLATFORMS; do \
		GOOS=${platform%/*} \
		GOARCH=${platform##*/} \
			./make.bash --no-clean 2>&1; \
	done


# This has been commented out and kept as reference because we don't support compiling with older Go anymore.
# ENV GOFMT_VERSION 1.3.3
# RUN curl -sSL https://storage.googleapis.com/golang/go${GOFMT_VERSION}.$(go env GOOS)-$(go env GOARCH).tar.gz | tar -C /go/bin -xz --strip-components=2 go/bin/gofmt


# Update this sha when we upgrade to go 1.5.0
ENV GO_TOOLS_COMMIT 069d2f3bcb68257b627205f0486d6cc69a231ff9
# Grab Go's cover tool for dead-simple code coverage testing
# Grab Go's vet tool for examining go code to find suspicious constructs
# and help prevent errors that the compiler might not catch
RUN git clone https://github.com/golang/tools.git /go/src/golang.org/x/tools \
	&& (cd /go/src/golang.org/x/tools && git checkout -q $GO_TOOLS_COMMIT) \
	&& go install -v golang.org/x/tools/cmd/cover \
	&& go install -v golang.org/x/tools/cmd/vet


# TODO replace FPM with some very minimal debhelper stuff
RUN gem install --no-rdoc --no-ri fpm --version 1.3.2


# Install registry
ENV REGISTRY_COMMIT d957768537c5af40e4f4cd96871f7b2bde9e2923
RUN set -x \
	&& git clone https://github.com/docker/distribution.git /go/src/github.com/docker/distribution \
	&& (cd /go/src/github.com/docker/distribution && git checkout -q $REGISTRY_COMMIT) \
	&& GOPATH=/go/src/github.com/docker/distribution/Godeps/_workspace:/go \
		go build -o /go/bin/registry-v2 github.com/docker/distribution/cmd/registry \
	&& rm -rf /go/src/github.com/docker/distribution/


# Get the ""docker-py"" source so we can run their integration tests
ENV DOCKER_PY_COMMIT 91985b239764fe54714fa0a93d52aa362357d251
RUN git clone https://github.com/docker/docker-py.git /docker-py \
	&& cd /docker-py \
	&& git checkout -q $DOCKER_PY_COMMIT


# Setup s3cmd config
RUN { \
		echo '[default]'; \
		echo 'access_key=$AWS_ACCESS_KEY'; \
		echo 'secret_key=$AWS_SECRET_KEY'; \
	} > ~/.s3cfg


# Set user.email so crosbymichael's in-container merge commits go smoothly
RUN git config --global user.email 'docker-dummy@example.com'


# Add an unprivileged user to be used for tests which need it
RUN groupadd -r docker
RUN useradd --create-home --gid docker unprivilegeduser


VOLUME /var/lib/docker
WORKDIR /go/src/github.com/docker/docker
ENV DOCKER_BUILDTAGS apparmor selinux


# Let us use a .bashrc file
RUN ln -sfv $PWD/.bashrc ~/.bashrc


# Register Docker's bash completion.
RUN ln -sv $PWD/contrib/completion/bash/docker /etc/bash_completion.d/docker


# Get useful and necessary Hub images so we can ""docker load"" locally instead of pulling
COPY contrib/download-frozen-image.sh /go/src/github.com/docker/docker/contrib/
RUN ./contrib/download-frozen-image.sh /docker-frozen-images \
	busybox:latest@4986bf8c15363d1c5d15512d5266f8777bfba4974ac56e3270e7760f6f0a8125 \
	hello-world:frozen@e45a5af57b00862e5ef5782a9925979a02ba2b12dff832fd0991335f4a11e5c5 \
	jess/unshare@5c9f6ea50341a2a8eb6677527f2bdedbf331ae894a41714fda770fb130f3314d
# see also ""hack/make/.ensure-frozen-images"" (which needs to be updated any time this list is)


# Download man page generator
RUN set -x \
	&& git clone -b v1.0.1 https://github.com/cpuguy83/go-md2man.git /go/src/github.com/cpuguy83/go-md2man \
	&& git clone -b v1.2 https://github.com/russross/blackfriday.git /go/src/github.com/russross/blackfriday


# Download toml validator
ENV TOMLV_COMMIT 9baf8a8a9f2ed20a8e54160840c492f937eeaf9a
RUN set -x \
	&& git clone https://github.com/BurntSushi/toml.git /go/src/github.com/BurntSushi/toml \
	&& (cd /go/src/github.com/BurntSushi/toml && git checkout -q $TOMLV_COMMIT)


# copy vendor/ because go-md2man needs golang.org/x/net
COPY vendor /go/src/github.com/docker/docker/vendor
RUN go install -v github.com/cpuguy83/go-md2man \
	github.com/BurntSushi/toml/cmd/tomlv


# Wrap all commands in the ""docker-in-docker"" script to allow nested containers
ENTRYPOINT [""hack/dind""]


# Upload docker source
COPY . /go/src/github.com/docker/docker
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
2,hekra01/docker,,"FROM busybox


ENV PATH
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
3,hekra01/docker,,"CMD [ ""echo"", [ ""nested json"" ] ]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
4,hekra01/docker,,"FROM	ubuntu:14.04
MAINTAINER	Seongyeol Lim <seongyeol37@gmail.com>


COPY	.	/go/src/github.com/docker/docker
ADD		.	/
ADD		[ ""vimrc"", ""/tmp"" ]
COPY	[ ""bashrc"", ""/tmp"" ]
COPY	[ ""test file"", ""/tmp"" ]
ADD		[ ""test file"", ""/tmp/test file"" ]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
5,hekra01/docker,,"FROM brimstone/ubuntu:14.04


MAINTAINER brimstone@the.narro.ws


# TORUN -v /var/run/docker.sock:/var/run/docker.sock


ENV GOPATH /go


# Set our command
ENTRYPOINT [""/usr/local/bin/consuldock""]


# Install the packages we need, clean up after them and us
RUN apt-get update \
	&& dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.clean \
    && apt-get install -y --no-install-recommends git golang ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists \


	&& go get -v github.com/brimstone/consuldock \
    && mv $GOPATH/bin/consuldock /usr/local/bin/consuldock \


	&& dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.dirty \
	&& apt-get remove --purge -y $(diff /tmp/dpkg.clean /tmp/dpkg.dirty | awk '/^>/ {print $2}') \
	&& rm /tmp/dpkg.* \
	&& rm -rf $GOPATH
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
6,hekra01/docker,,"FROM brimstone/ubuntu:14.04


CMD []


ENTRYPOINT [""/usr/bin/consul"", ""agent"", ""-server"", ""-data-dir=/consul"", ""-client=0.0.0.0"", ""-ui-dir=/webui""]


EXPOSE 8500 8600 8400 8301 8302


RUN apt-get update \
    && apt-get install -y unzip wget \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists


RUN cd /tmp \
    && wget https://dl.bintray.com/mitchellh/consul/0.3.1_web_ui.zip \
       -O web_ui.zip \
    && unzip web_ui.zip \
    && mv dist /webui \
    && rm web_ui.zip


RUN apt-get update \
	&& dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.clean \
    && apt-get install -y --no-install-recommends unzip wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists \


    && cd /tmp \
    && wget https://dl.bintray.com/mitchellh/consul/0.3.1_web_ui.zip \
       -O web_ui.zip \
    && unzip web_ui.zip \
    && mv dist /webui \
    && rm web_ui.zip \


	&& dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.dirty \
	&& apt-get remove --purge -y $(diff /tmp/dpkg.clean /tmp/dpkg.dirty | awk '/^>/ {print $2}') \
	&& rm /tmp/dpkg.*


ENV GOPATH /go


RUN apt-get update \
	&& dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.clean \
    && apt-get install -y --no-install-recommends git golang ca-certificates build-essential \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists \


	&& go get -v github.com/hashicorp/consul \
	&& mv $GOPATH/bin/consul /usr/bin/consul \


	&& dpkg -l | awk '/^ii/ {print $2}' > /tmp/dpkg.dirty \
	&& apt-get remove --purge -y $(diff /tmp/dpkg.clean /tmp/dpkg.dirty | awk '/^>/ {print $2}') \
	&& rm /tmp/dpkg.* \
	&& rm -rf $GOPATH
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
7,hekra01/docker,,"FROM ubuntu:14.04


RUN echo hello\
  world\
  goodnight  \
  moon\
  light\
ning
RUN echo hello  \
  world
RUN echo hello  \
world
RUN echo hello \
goodbye\
frog
RUN echo hello  \  
world
RUN echo hi \
 \
 world \
\
 good\
\
night
RUN echo goodbye\
frog
RUN echo good\
bye\
frog


RUN echo hello \
# this is a comment


# this is a comment with a blank line surrounding it


this is some more useful stuff
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
8,hekra01/docker,,"FROM cpuguy83/ubuntu
ENV NAGIOS_HOME /opt/nagios
ENV NAGIOS_USER nagios
ENV NAGIOS_GROUP nagios
ENV NAGIOS_CMDUSER nagios
ENV NAGIOS_CMDGROUP nagios
ENV NAGIOSADMIN_USER nagiosadmin
ENV NAGIOSADMIN_PASS nagios
ENV APACHE_RUN_USER nagios
ENV APACHE_RUN_GROUP nagios
ENV NAGIOS_TIMEZONE UTC


RUN sed -i 's/universe/universe multiverse/' /etc/apt/sources.list
RUN apt-get update && apt-get install -y iputils-ping netcat build-essential snmp snmpd snmp-mibs-downloader php5-cli apache2 libapache2-mod-php5 runit bc postfix bsd-mailx
RUN ( egrep -i  ""^${NAGIOS_GROUP}"" /etc/group || groupadd $NAGIOS_GROUP ) && ( egrep -i ""^${NAGIOS_CMDGROUP}"" /etc/group || groupadd $NAGIOS_CMDGROUP )
RUN ( id -u $NAGIOS_USER || useradd --system $NAGIOS_USER -g $NAGIOS_GROUP -d $NAGIOS_HOME ) && ( id -u $NAGIOS_CMDUSER || useradd --system -d $NAGIOS_HOME -g $NAGIOS_CMDGROUP $NAGIOS_CMDUSER )


ADD http://downloads.sourceforge.net/project/nagios/nagios-3.x/nagios-3.5.1/nagios-3.5.1.tar.gz?r=http%3A%2F%2Fwww.nagios.org%2Fdownload%2Fcore%2Fthanks%2F%3Ft%3D1398863696&ts=1398863718&use_mirror=superb-dca3 /tmp/nagios.tar.gz
RUN cd /tmp && tar -zxvf nagios.tar.gz && cd nagios  && ./configure --prefix=${NAGIOS_HOME} --exec-prefix=${NAGIOS_HOME} --enable-event-broker --with-nagios-command-user=${NAGIOS_CMDUSER} --with-command-group=${NAGIOS_CMDGROUP} --with-nagios-user=${NAGIOS_USER} --with-nagios-group=${NAGIOS_GROUP} && make all && make install && make install-config && make install-commandmode && cp sample-config/httpd.conf /etc/apache2/conf.d/nagios.conf
ADD http://www.nagios-plugins.org/download/nagios-plugins-1.5.tar.gz /tmp/
RUN cd /tmp && tar -zxvf nagios-plugins-1.5.tar.gz && cd nagios-plugins-1.5 && ./configure --prefix=${NAGIOS_HOME} && make && make install


RUN sed -i.bak 's/.*\=www\-data//g' /etc/apache2/envvars
RUN export DOC_ROOT=""DocumentRoot $(echo $NAGIOS_HOME/share)""; sed -i ""s,DocumentRoot.*,$DOC_ROOT,"" /etc/apache2/sites-enabled/000-default


RUN ln -s ${NAGIOS_HOME}/bin/nagios /usr/local/bin/nagios && mkdir -p /usr/share/snmp/mibs && chmod 0755 /usr/share/snmp/mibs && touch /usr/share/snmp/mibs/.foo


RUN echo ""use_timezone=$NAGIOS_TIMEZONE"" >> ${NAGIOS_HOME}/etc/nagios.cfg && echo ""SetEnv TZ \""${NAGIOS_TIMEZONE}\"""" >> /etc/apache2/conf.d/nagios.conf


RUN mkdir -p ${NAGIOS_HOME}/etc/conf.d && mkdir -p ${NAGIOS_HOME}/etc/monitor && ln -s /usr/share/snmp/mibs ${NAGIOS_HOME}/libexec/mibs
RUN echo ""cfg_dir=${NAGIOS_HOME}/etc/conf.d"" >> ${NAGIOS_HOME}/etc/nagios.cfg
RUN echo ""cfg_dir=${NAGIOS_HOME}/etc/monitor"" >> ${NAGIOS_HOME}/etc/nagios.cfg
RUN download-mibs && echo ""mibs +ALL"" > /etc/snmp/snmp.conf


RUN sed -i 's,/bin/mail,/usr/bin/mail,' /opt/nagios/etc/objects/commands.cfg && \
  sed -i 's,/usr/usr,/usr,' /opt/nagios/etc/objects/commands.cfg
RUN cp /etc/services /var/spool/postfix/etc/


RUN mkdir -p /etc/sv/nagios && mkdir -p /etc/sv/apache && rm -rf /etc/sv/getty-5 && mkdir -p /etc/sv/postfix
ADD nagios.init /etc/sv/nagios/run
ADD apache.init /etc/sv/apache/run
ADD postfix.init /etc/sv/postfix/run
ADD postfix.stop /etc/sv/postfix/finish


ADD start.sh /usr/local/bin/start_nagios


ENV APACHE_LOCK_DIR /var/run
ENV APACHE_LOG_DIR /var/log/apache2


EXPOSE 80


VOLUME [""/opt/nagios/var"", ""/opt/nagios/etc"", ""/opt/nagios/libexec"", ""/var/log/apache2"", ""/usr/share/snmp/mibs""]


CMD [""/usr/local/bin/start_nagios""]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
9,hekra01/docker,,"# This file describes the standard way to build Docker, using docker
#
# Usage:
#
# # Assemble the full dev environment. This is slow the first time.
# docker build -t docker .
#
# # Mount your source in an interactive container for quick testing:
# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash
#
# # Run the test suite:
# docker run --privileged docker hack/make.sh test
#
# # Publish a release:
# docker run --privileged \
#  -e AWS_S3_BUCKET=baz \
#  -e AWS_ACCESS_KEY=foo \
#  -e AWS_SECRET_KEY=bar \
#  -e GPG_PASSPHRASE=gloubiboulga \
#  docker hack/release.sh
#
# Note: Apparmor used to mess with privileged mode, but this is no longer
# the case. Therefore, you don't have to disable it anymore.
#


FROM	ubuntu:14.04
MAINTAINER	Tianon Gravi <admwiggin@gmail.com> (@tianon)


# Packaged dependencies
RUN	apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yq \
	apt-utils \
	aufs-tools \
	automake \
	btrfs-tools \
	build-essential \
	curl \
	dpkg-sig \
	git \
	iptables \
	libapparmor-dev \
	libcap-dev \
	libsqlite3-dev \
	lxc=1.0* \
	mercurial \
	pandoc \
	parallel \
	reprepro \
	ruby1.9.1 \
	ruby1.9.1-dev \
	s3cmd=1.1.0* \
	--no-install-recommends


# Get lvm2 source for compiling statically
RUN	git clone --no-checkout https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2 && cd /usr/local/lvm2 && git checkout -q v2_02_103
# see https://git.fedorahosted.org/cgit/lvm2.git/refs/tags for release tags
# note: we don't use ""git clone -b"" above because it then spews big nasty warnings about 'detached HEAD' state that we can't silence as easily as we can silence them using ""git checkout"" directly


# Compile and install lvm2
RUN	cd /usr/local/lvm2 && ./configure --enable-static_link && make device-mapper && make install_device-mapper
# see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL


# Install Go
RUN	curl -sSL https://golang.org/dl/go1.3.src.tar.gz | tar -v -C /usr/local -xz
ENV	PATH	/usr/local/go/bin:$PATH
ENV	GOPATH	/go:/go/src/github.com/docker/docker/vendor
RUN	cd /usr/local/go/src && ./make.bash --no-clean 2>&1


# Compile Go for cross compilation
ENV	DOCKER_CROSSPLATFORMS	\
	linux/386 linux/arm \
	darwin/amd64 darwin/386 \
	freebsd/amd64 freebsd/386 freebsd/arm
# (set an explicit GOARM of 5 for maximum compatibility)
ENV	GOARM	5
RUN	cd /usr/local/go/src && bash -xc 'for platform in $DOCKER_CROSSPLATFORMS; do GOOS=${platform%/*} GOARCH=${platform##*/} ./make.bash --no-clean 2>&1; done'


# Grab Go's cover tool for dead-simple code coverage testing
RUN	go get golang.org/x/tools/cmd/cover


# TODO replace FPM with some very minimal debhelper stuff
RUN	gem install --no-rdoc --no-ri fpm --version 1.0.2


# Get the ""busybox"" image source so we can build locally instead of pulling
RUN	git clone -b buildroot-2014.02 https://github.com/jpetazzo/docker-busybox.git /docker-busybox


# Setup s3cmd config
RUN	/bin/echo -e '[default]\naccess_key=$AWS_ACCESS_KEY\nsecret_key=$AWS_SECRET_KEY' > /.s3cfg


# Set user.email so crosbymichael's in-container merge commits go smoothly
RUN	git config --global user.email 'docker-dummy@example.com'


# Add an unprivileged user to be used for tests which need it
RUN groupadd -r docker
RUN useradd --create-home --gid docker unprivilegeduser


VOLUME	/var/lib/docker
WORKDIR	/go/src/github.com/docker/docker
ENV	DOCKER_BUILDTAGS	apparmor selinux


# Wrap all commands in the ""docker-in-docker"" script to allow nested containers
ENTRYPOINT	[""hack/dind""]


# Upload docker source
COPY	.	/go/src/github.com/docker/docker
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
10,hekra01/docker,,"FROM ubuntu
ENV name value
ENV name=value
ENV name=value name2=value2
ENV name=""value value1""
ENV name=value\ value2
ENV name=""value'quote space'value2""
ENV name='value""double quote""value2'
ENV name=value\ value2 name2=value2\ value3
ENV name=""a\""b""
ENV name=""a\'b""
ENV name='a\'b'
ENV name='a\'b''
ENV name='a\""b'
ENV name=""''""
# don't put anything after the next line - it must be the last line of the
# Dockerfile and it must end with \
ENV name=value \
    name1=value1 \
    name2=""value2a \
           value2b"" \
    name3=""value3a\n\""value3b\"""" \
	name4=""value4a\\nvalue4b"" \
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
11,hekra01/docker,,"FROM ubuntu:14.04
MAINTAINER Erik \\Hollensbe <erik@hollensbe.org>\""


RUN apt-get \update && \
  apt-get \""install znc -y
ADD \conf\\"" /.znc

RUN foo \

bar \

baz

CMD [ ""\/usr\\\""/bin/znc"", ""-f"", ""-r"" ]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
12,hekra01/docker,,"FROM scratch
COPY foo /tmp/
COPY --user=me foo /tmp/
COPY --doit=true foo /tmp/
COPY --user=me --doit=true foo /tmp/
COPY --doit=true -- foo /tmp/
COPY -- foo /tmp/
CMD --doit [ ""a"", ""b"" ]
CMD --doit=true -- [ ""a"", ""b"" ]
CMD --doit -- [ ]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
13,hekra01/docker,,"FROM ubuntu:14.04


RUN apt-get update && apt-get install wget -y
RUN wget http://s3.amazonaws.com/influxdb/influxdb_latest_amd64.deb
RUN dpkg -i influxdb_latest_amd64.deb
RUN rm -r /opt/influxdb/shared


VOLUME /opt/influxdb/shared


CMD /usr/bin/influxdb --pidfile /var/run/influxdb.pid -config /opt/influxdb/shared/config.toml


EXPOSE 8083
EXPOSE 8086
EXPOSE 8090
EXPOSE 8099
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
14,hekra01/docker,,"CMD ""[\""echo\"", \""Phew, I just managed to escaped those double quotes\""]""
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
15,hekra01/docker,,"CMD '[""echo"", ""Well, JSON in a string is JSON too?""]'
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
16,hekra01/docker,,"CMD ['echo','single quotes are invalid JSON']
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
17,hekra01/docker,,"CMD [""echo"", ""Please, close the brackets when you're done""
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
18,hekra01/docker,,"CMD [""echo"", ""look ma, no quote!]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
19,hekra01/docker,,"CMD []
CMD [""""]
CMD [""a""]
CMD [""a"",""b""]
CMD [ ""a"", ""b"" ]
CMD [	""a"",	""b""	]
CMD	[	""a"",	""b""	]	
CMD [""abc 123"", ""♥"", ""☃"", ""\"" \\ \/ \b \f \n \r \t \u0000""]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
20,hekra01/docker,,"FROM ubuntu:14.04
MAINTAINER James Turnbull ""james@example.com""
ENV REFRESHED_AT 2014-06-01
RUN apt-get update
RUN apt-get -y install redis-server redis-tools
EXPOSE 6379
ENTRYPOINT [ ""/usr/bin/redis-server"" ]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
21,hekra01/docker,,"FROM busybox:buildroot-2014.02


MAINTAINER docker <docker@docker.io>


ONBUILD RUN [""echo"", ""test""]
ONBUILD RUN echo test
ONBUILD COPY . /




# RUN Commands \
# linebreak in comment \
RUN [""ls"", ""-la""]
RUN [""echo"", ""'1234'""]
RUN echo ""1234""
RUN echo 1234
RUN echo '1234' && \
    echo ""456"" && \
    echo 789
RUN    sh -c 'echo root:testpass \
        > /tmp/passwd'
RUN mkdir -p /test /test2 /test3/test


# ENV \
ENV SCUBA 1 DUBA 3
ENV SCUBA ""1 DUBA 3""


# CMD \
CMD [""echo"", ""test""]
CMD echo test
CMD echo ""test""
CMD echo 'test'
CMD echo 'test' | wc -


#EXPOSE\
EXPOSE 3000
EXPOSE 9000 5000 6000


USER docker
USER docker:root


VOLUME [""/test""]
VOLUME [""/test"", ""/test2""]
VOLUME /test3


WORKDIR /test


ADD . /
COPY . copy
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
22,hekra01/docker,,"FROM ubuntu:14.04


RUN apt-get update -qy && apt-get install mutt offlineimap vim-nox abook elinks curl tmux cron zsh -y
ADD .muttrc /
ADD .offlineimaprc /
ADD .tmux.conf /
ADD mutt /.mutt
ADD vim /.vim
ADD vimrc /.vimrc
ADD crontab /etc/crontab
RUN chmod 644 /etc/crontab
RUN mkdir /Mail
RUN mkdir /.offlineimap
RUN echo ""export TERM=screen-256color"" >/.zshenv


CMD setsid cron; tmux -2
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
23,hekra01/docker,,"FROM foo


VOLUME /opt/nagios/var /opt/nagios/etc /opt/nagios/libexec /var/log/apache2 /usr/share/snmp/mibs
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
24,hekra01/docker,,"FROM ubuntu:14.04


RUN apt-get update && apt-get install libcap2-bin mumble-server -y


ADD ./mumble-server.ini /etc/mumble-server.ini


CMD /usr/sbin/murmurd
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
25,hekra01/docker,,"FROM ubuntu:14.04
MAINTAINER Erik Hollensbe <erik@hollensbe.org>


RUN apt-get update && apt-get install nginx-full -y
RUN rm -rf /etc/nginx
ADD etc /etc/nginx
RUN chown -R root:root /etc/nginx
RUN /usr/sbin/nginx -qt
RUN mkdir /www


CMD [""/usr/sbin/nginx""]


VOLUME /www
EXPOSE 80
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
26,hekra01/docker,,"FROM ubuntu:12.04


EXPOSE 27015
EXPOSE 27005
EXPOSE 26901
EXPOSE 27020


RUN apt-get update && apt-get install libc6-dev-i386 curl unzip -y
RUN mkdir -p /steam
RUN curl http://media.steampowered.com/client/steamcmd_linux.tar.gz | tar vxz -C /steam
ADD ./script /steam/script
RUN /steam/steamcmd.sh +runscript /steam/script
RUN curl http://mirror.pointysoftware.net/alliedmodders/mmsource-1.10.0-linux.tar.gz | tar vxz -C /steam/tf2/tf
RUN curl http://mirror.pointysoftware.net/alliedmodders/sourcemod-1.5.3-linux.tar.gz | tar vxz -C /steam/tf2/tf
ADD ./server.cfg /steam/tf2/tf/cfg/server.cfg
ADD ./ctf_2fort.cfg /steam/tf2/tf/cfg/ctf_2fort.cfg
ADD ./sourcemod.cfg /steam/tf2/tf/cfg/sourcemod/sourcemod.cfg
RUN rm -r /steam/tf2/tf/addons/sourcemod/configs
ADD ./configs /steam/tf2/tf/addons/sourcemod/configs
RUN mkdir -p /steam/tf2/tf/addons/sourcemod/translations/en
RUN cp /steam/tf2/tf/addons/sourcemod/translations/*.txt /steam/tf2/tf/addons/sourcemod/translations/en


CMD cd /steam/tf2 && ./srcds_run -port 27015 +ip 0.0.0.0 +map ctf_2fort -autoupdate -steam_dir /steam -steamcmd_script /steam/script +tf_bot_quota 12 +tf_bot_quota_mode fill
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
27,hekra01/docker,,"FROM ubuntu:14.04


RUN apt-get update -qy && apt-get install tmux zsh weechat-curses -y


ADD .weechat /.weechat
ADD .tmux.conf /
RUN echo ""export TERM=screen-256color"" >/.zshenv


CMD zsh -c weechat
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
28,hekra01/docker,,"FROM ubuntu:14.04
MAINTAINER Erik Hollensbe <erik@hollensbe.org>


RUN apt-get update && apt-get install znc -y
ADD conf /.znc


CMD [ ""/usr/bin/znc"", ""-f"", ""-r"" ]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
29,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/deb/generate.sh""!
#


FROM debian:jessie


RUN apt-get update && apt-get install -y bash-completion btrfs-tools build-essential curl ca-certificates debhelper dh-systemd git libapparmor-dev libdevmapper-dev libsqlite3-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS apparmor selinux
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
0,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/deb/generate.sh""!
#


FROM debian:stretch


RUN apt-get update && apt-get install -y bash-completion btrfs-tools build-essential curl ca-certificates debhelper dh-systemd git libapparmor-dev libdevmapper-dev libsqlite3-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS apparmor selinux
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
1,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/deb/generate.sh""!
#


FROM debian:wheezy
RUN echo deb http://http.debian.net/debian wheezy-backports main > /etc/apt/sources.list.d/wheezy-backports.list


RUN apt-get update && apt-get install -y bash-completion btrfs-tools build-essential curl ca-certificates debhelper dh-systemd git libapparmor-dev libdevmapper-dev libsqlite3-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS apparmor selinux
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
2,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/deb/generate.sh""!
#


FROM ubuntu-debootstrap:trusty


RUN apt-get update && apt-get install -y bash-completion btrfs-tools build-essential curl ca-certificates debhelper dh-systemd git libapparmor-dev libdevmapper-dev libsqlite3-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS apparmor selinux
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
3,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/deb/generate.sh""!
#


FROM ubuntu-debootstrap:utopic


RUN apt-get update && apt-get install -y bash-completion btrfs-tools build-essential curl ca-certificates debhelper dh-systemd git libapparmor-dev libdevmapper-dev libsqlite3-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS apparmor selinux
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
4,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/deb/generate.sh""!
#


FROM ubuntu-debootstrap:vivid


RUN apt-get update && apt-get install -y bash-completion btrfs-tools build-essential curl ca-certificates debhelper dh-systemd git libapparmor-dev libdevmapper-dev libsqlite3-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS apparmor selinux
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
5,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/rpm/generate.sh""!
#


FROM centos:6


RUN yum groupinstall -y ""Development Tools""
RUN yum install -y btrfs-progs-devel device-mapper-devel glibc-static libselinux-devel sqlite-devel tar


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS selinux exclude_graphdriver_btrfs
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
6,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/rpm/generate.sh""!
#


FROM centos:7


RUN yum groupinstall -y ""Development Tools""
RUN yum -y swap -- remove systemd-container systemd-container-libs -- install systemd systemd-libs
RUN yum install -y btrfs-progs-devel device-mapper-devel glibc-static libselinux-devel sqlite-devel tar


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS selinux
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
7,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/rpm/generate.sh""!
#


FROM fedora:20


RUN yum install -y @development-tools fedora-packager
RUN yum install -y btrfs-progs-devel device-mapper-devel glibc-static libselinux-devel sqlite-devel tar


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS selinux
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
8,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/rpm/generate.sh""!
#


FROM fedora:21


RUN yum install -y @development-tools fedora-packager
RUN yum install -y btrfs-progs-devel device-mapper-devel glibc-static libselinux-devel sqlite-devel tar


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS selinux
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
9,hekra01/docker,,"#
# THIS FILE IS AUTOGENERATED; SEE ""contrib/builder/rpm/generate.sh""!
#


FROM fedora:22


RUN yum install -y @development-tools fedora-packager
RUN yum install -y btrfs-progs-devel device-mapper-devel glibc-static libselinux-devel sqlite-devel tar


ENV GO_VERSION 1.4.2
RUN curl -fSL ""https://storage.googleapis.com/golang/go${GO_VERSION}.linux-amd64.tar.gz"" | tar xzC /usr/local
ENV PATH $PATH:/usr/local/go/bin


ENV AUTO_GOPATH 1
ENV DOCKER_BUILDTAGS selinux
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
10,hekra01/docker,,"# VERSION:        0.1
# DESCRIPTION:    Create chromium container with its dependencies
# AUTHOR:         Jessica Frazelle <jess@docker.com>
# COMMENTS:
#   This file describes how to build a Chromium container with all
#   dependencies installed. It uses native X11 unix socket.
#   Tested on Debian Jessie
# USAGE:
#   # Download Chromium Dockerfile
#   wget http://raw.githubusercontent.com/docker/docker/master/contrib/desktop-integration/chromium/Dockerfile
#
#   # Build chromium image
#   docker build -t chromium .
#
#   # Run stateful data-on-host chromium. For ephemeral, remove -v /data/chromium:/data
#   docker run -v /data/chromium:/data -v /tmp/.X11-unix:/tmp/.X11-unix \
#   -e DISPLAY=unix$DISPLAY chromium


#   # To run stateful dockerized data containers
#   docker run --volumes-from chromium-data -v /tmp/.X11-unix:/tmp/.X11-unix \
#   -e DISPLAY=unix$DISPLAY chromium


# Base docker image
FROM debian:jessie
MAINTAINER Jessica Frazelle <jess@docker.com>


# Install Chromium
RUN apt-get update && apt-get install -y \
    chromium \
    chromium-l10n \
    libcanberra-gtk-module \
    libexif-dev \
    --no-install-recommends


# Autorun chromium
CMD [""/usr/bin/chromium"", ""--no-sandbox"", ""--user-data-dir=/data""]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
11,hekra01/docker,,"# VERSION:        0.1
# DESCRIPTION:    Create gparted container with its dependencies
# AUTHOR:         Jessica Frazelle <jess@docker.com>
# COMMENTS:
#   This file describes how to build a gparted container with all
#   dependencies installed. It uses native X11 unix socket.
#   Tested on Debian Jessie
# USAGE:
#   # Download gparted Dockerfile
#   wget http://raw.githubusercontent.com/docker/docker/master/contrib/desktop-integration/gparted/Dockerfile
#
#   # Build gparted image
#   docker build -t gparted .
#
#   docker run -v /tmp/.X11-unix:/tmp/.X11-unix \
#     --device=/dev/sda:/dev/sda \
#     -e DISPLAY=unix$DISPLAY gparted
#


# Base docker image
FROM debian:jessie
MAINTAINER Jessica Frazelle <jess@docker.com>


# Install Gparted and its dependencies
RUN apt-get update && apt-get install -y \
    gparted \
    libcanberra-gtk-module \
    --no-install-recommends


# Autorun gparted
CMD [""/usr/sbin/gparted""]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
12,hekra01/docker,,"FROM busybox
EXPOSE 80/tcp
COPY httpserver .
CMD [""./httpserver""]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
13,hekra01/docker,,"FROM docs/base:hugo
MAINTAINER Mary Anthony <mary@docker.com> (@moxiegirl)


# To get the git info for this repo
COPY . /src


COPY . /docs/content/


WORKDIR /docs/content


RUN /docs/content/touch-up.sh


WORKDIR /docs
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
14,hekra01/docker,,"FROM debian


RUN apt-get update && apt-get install -yq openssl


ADD make_certs.sh /




WORKDIR /data
VOLUME [""/data""]
CMD /make_certs.sh
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
15,hekra01/docker,,"# Dockerizing MongoDB: Dockerfile for building MongoDB images
# Based on ubuntu:latest, installs MongoDB following the instructions from:
# http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/


FROM       ubuntu:latest
MAINTAINER Docker


# Installation:
# Import MongoDB public GPG key AND create a MongoDB list file
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10
RUN echo ""deb http://repo.mongodb.org/apt/ubuntu ""$(lsb_release -sc)""/mongodb-org/3.0 multiverse"" | tee /etc/apt/sources.list.d/mongodb-org-3.0.list
# Update apt-get sources AND install MongoDB
RUN apt-get update && apt-get install -y mongodb-org


# Create the MongoDB data directory
RUN mkdir -p /data/db


# Expose port #27017 from the container to the host
EXPOSE 27017


# Set /usr/bin/mongod as the dockerized entry-point application
ENTRYPOINT [""/usr/bin/mongod""]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
16,hekra01/docker,,"FROM golang:1.4
RUN mkdir -p /go/src/github.com/cpuguy83
RUN mkdir -p /go/src/github.com/cpuguy83 \
    && git clone -b v1.0.1 https://github.com/cpuguy83/go-md2man.git /go/src/github.com/cpuguy83/go-md2man \
    && cd /go/src/github.com/cpuguy83/go-md2man \
    && go get -v ./...
CMD [""/go/bin/go-md2man"", ""--help""]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
17,hekra01/docker,,"FROM golang:1.4


RUN go get golang.org/x/tools/cmd/cover


ENV GOPATH $GOPATH:/go/src/github.com/docker/libcontainer/vendor
RUN go get github.com/docker/docker/pkg/term


# setup a playground for us to spawn containers in
RUN mkdir /busybox && \
    curl -sSL 'https://github.com/jpetazzo/docker-busybox/raw/buildroot-2014.11/rootfs.tar' | tar -xC /busybox


RUN curl -sSL https://raw.githubusercontent.com/docker/docker/master/hack/dind -o /dind && \
    chmod +x /dind


COPY . /go/src/github.com/docker/libcontainer
WORKDIR /go/src/github.com/docker/libcontainer
RUN cp sample_configs/minimal.json /busybox/container.json


RUN go get -d -v ./...
RUN make direct-install


ENTRYPOINT [""/dind""]
CMD [""make"", ""direct-test""]
","Go
92.1%





Shell
7.7%





Other
0.2%",2015-07-30 23:45:05,2015-07-30 23:46:57,https://github.com/hekra01/docker
18,harunyardimci/activemq,,"FROM java:8


ENV VERSION=""5.11.1"" USER=""activemq"" DATA_PATH=""/mnt/data/activemq""


LABEL activemq-version=""${VERSION}"" desc=""Apache ActiveMQ""


EXPOSE 61616 8161


RUN mkdir -p /opt
WORKDIR /opt


RUN curl http://apache.mivzakim.net/activemq/${VERSION}/apache-activemq-${VERSION}-bin.tar.gz | tar -xz
RUN rm -f apache-activemq-${VERSION}-bin.tar.gz


RUN groupadd -r ${USER} && useradd -r -g ${USER} ${USER}
RUN chown -R ${USER}:${USER} apache-activemq-${VERSION}


RUN ln -s apache-activemq-${VERSION} apache-activemq


USER ${USER}


CMD ACTIVEMQ_USER=""${USER}"" \
    ACTIVEMQ_DATA=""${DATA_PATH}"" \
    ACTIVEMQ_OPTS_MEMORY=""-Xms${JVM_XMS} -Xmx${JVM_XMX}"" \
    apache-activemq/bin/activemq console
 
",,2015-08-12 19:57:18,2015-08-12 20:16:20,https://github.com/harunyardimci/activemq
19,puckel/docker-grafana,,"# VERSION 2.1
# AUTHOR: Matthieu ""Puckel_"" Roisil
# DESCRIPTION: Basic Grafana-based
# BUILD: docker build --rm -t puckel/grafana
# SOURCE: https://github.com/puckel/docker-grafana


FROM puckel/docker-base
MAINTAINER Puckel_


# Never prompts the user for choices on installation/configuration of packages
ENV DEBIAN_FRONTEND noninteractive
ENV TERM linux
# Work around initramfs-tools running on kernel 'upgrade': <http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=594189>
ENV INITRD No


ENV GRAFANA_VERSION 2.1.2


RUN apt-get update -yqq \
    && apt-get install -yqq \
    libfontconfig1 \
    && curl -k -sO https://grafanarel.s3.amazonaws.com/builds/grafana_${GRAFANA_VERSION}_amd64.deb \
    && dpkg -i grafana_${GRAFANA_VERSION}_amd64.deb \
    && rm -f grafana_${GRAFANA_VERSION}_amd64.deb \
    && rm -rf \
    /var/lib/apt/lists/* \
    /tmp/* \
    /var/tmp/* \
    /usr/share/man \
    /usr/share/doc \
    /usr/share/doc-base


EXPOSE 3000


CMD [""/usr/sbin/grafana-server"", ""-config=/etc/grafana/grafana.ini"",""-homepath=/usr/share/grafana""]
",,2015-08-13 09:47:18,2015-08-13 09:47:18,https://github.com/puckel/docker-grafana
20,liubin/docker-wordpress,,"FROM index.alauda.cn/library/wordpress:latest


COPY docker-entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh




","Shell
100.0%",2015-08-16 14:21:24,2015-08-16 14:23:56,https://github.com/liubin/docker-wordpress
21,akurkin/lightweight_rails_app,,"FROM rails:onbuild
","Ruby
94.1%





HTML
5.9%",2015-08-16 09:26:34,2017-09-20 13:57:24,https://github.com/akurkin/lightweight_rails_app
22,AlbertoElias/BotFounder,,"FROM google/golang
ADD *.go /gopath/botfounder/
ADD templates /gopath/botfounder/templates
ENV PORT 3000
ENV GIT_SSL_NO_VERIFY 1
ENV GOBIN /bin
WORKDIR /gopath/botfounder/
RUN go get
RUN go build
EXPOSE 3000
CMD [""/gopath/botfounder/botfounder""]
","Go
97.1%





Makefile
2.9%",2015-08-14 22:35:43,2015-08-16 09:07:24,https://github.com/AlbertoElias/BotFounder
23,interactive-solutions/eatmydata-mysql-server,"Organization(name=None, id=11486644)","FROM mysql:latest


# Install eat my data
RUN apt-get update && apt-get install -y eatmydata && apt-get clean


# Wrap the entrypoint with eat my data
ENTRYPOINT [""eatmydata"", ""/entrypoint.sh""]


CMD [""mysqld""]
",,2015-08-05 09:36:58,2015-08-05 09:36:58,https://github.com/interactive-solutions/eatmydata-mysql-server
24,dharmi/docker-meteor-todos,,"

# Set the base image to minimized Ubuntu
#FROM phusion/baseimage
FROM google/debian:wheezy


VOLUME /storage/mongodb_data
# Update the repository
RUN apt-get update && \
    apt-get install -y curl nginx mongodb-server supervisor
#RUN rm /var/lib/mongodb/mongod.lock
# RUN service mongodb start


# Remove the default Nginx configuration file
RUN rm -v /etc/nginx/nginx.conf


# Copy a configuration file from the current directory
ADD nginx.conf /etc/nginx/


# Copy supervisord configuration file
ADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf


#RUN chmod -R 777 /var/log/supervisor
#RUN chmod -R 777 /etc/supervisor
# RUN adduser vcap sudo; exit 0


# Append ""daemon off;"" to the beginning of the configuration
# RUN echo ""daemon off;"" >> /etc/nginx/nginx.conf


ENV MONGO_URL mongodb://localhost:27017/meteor




# Install Meteor
RUN curl  https://install.meteor.com/ | sh
RUN meteor create --example todos
WORKDIR /todos
USER root
EXPOSE 80 3000


# Run Meteor and Nginx
CMD [""/usr/bin/supervisord"", ""-c"", ""/etc/supervisor/conf.d/supervisord.conf""]
","Nginx
100.0%",2015-08-06 20:23:01,2015-08-07 02:03:50,https://github.com/dharmi/docker-meteor-todos
25,KO527/DayNiteEvents,,"FROM dockerfile/nodejs


MAINTAINER Matthias Luebken, matthias@catalyst-zero.com


WORKDIR /home/mean


# Install Mean.JS Prerequisites
RUN npm install -g grunt-cli
RUN npm install -g bower


# Install Mean.JS packages
ADD package.json /home/mean/package.json
RUN npm install


# Manually trigger bower. Why doesnt this work via npm install?
ADD .bowerrc /home/mean/.bowerrc
ADD bower.json /home/mean/bower.json
RUN bower install --config.interactive=false --allow-root


# Make everything available for start
ADD . /home/mean


# currently only works for development
ENV NODE_ENV development


# Port 3000 for server
# Port 35729 for livereload
EXPOSE 3000 35729
CMD [""grunt""]
","JavaScript
71.3%





HTML
20.6%





CSS
7.8%





Shell
0.3%",2015-08-19 05:14:57,2016-02-26 12:35:56,https://github.com/KO527/DayNiteEvents
26,tenxcloud/docker-centos,"Organization(name=None, id=11516606)","FROM index.tenxcloud.com/tenxcloud/centos:centos5
ADD CentOS-Base.repo /etc/yum.repos.d/
RUN yum -y update
",,2015-08-19 07:28:36,2017-09-28 03:46:28,https://github.com/tenxcloud/docker-centos
27,tenxcloud/docker-centos,"Organization(name=None, id=11516606)","FROM index.tenxcloud.com/tenxcloud/centos:centos6
ADD CentOS-Base.repo /etc/yum.repos.d/
RUN yum -y update
",,2015-08-19 07:28:36,2017-09-28 03:46:28,https://github.com/tenxcloud/docker-centos
28,tenxcloud/docker-centos,"Organization(name=None, id=11516606)","FROM index.tenxcloud.com/tenxcloud/centos:latest
ADD CentOS-Base.repo /etc/yum.repos.d/
RUN yum -y update
",,2015-08-19 07:28:36,2017-09-28 03:46:28,https://github.com/tenxcloud/docker-centos
29,QuanticPotato/dockerfile,,"FROM occitech/cakephp:5.6-apache


MAINTAINER Barnabé Chauvin <barnabe.chauvin@gmail.com>


# php configuration
COPY php.ini /usr/local/etc/php/


# Set the webroot/ directory of the given volume as the apache root directory
RUN rm -r /var/www/html && \
	ln -s /app/webroot /var/www/html


# Install packages (mysql, mail)
RUN apt-get update && apt-get install -y  \
	mysql-client


# Install the lua extension
RUN cd /tmp && \
	curl -O ftp://ftp.cwru.edu/pub/bash/readline-6.3.tar.gz && tar -xvf readline-6.3.tar.gz && cd readline-6.3 && \
	./configure && make -j8 && make install && cd .. && \
    curl -O ftp://ftp.gnu.org/gnu/ncurses/ncurses-6.0.tar.gz && tar -xvf ncurses-6.0.tar.gz && cd ncurses-6.0 && \
	./configure && make -j8 && make install && cd .. && \
    curl -O http://www.lua.org/ftp/lua-5.2.0.tar.gz && tar -xvf lua-5.2.0.tar.gz && cd lua-5.2.0 && \
	make CFLAGS='-fPIC' linux -j8 && make install && cd .. && \
    curl -O https://pecl.php.net/get/lua-1.1.0.tgz && tar -xvf lua-1.1.0.tgz && cd lua-1.1.0 && \
	phpize && ./configure --with-lua=/usr/local && make -j8 && make install && \
	docker-php-ext-enable lua.so && \
	rm /tmp/* -rf 


CMD apache2-foreground
",,2015-08-14 19:49:22,2016-02-10 08:59:01,https://github.com/QuanticPotato/dockerfile
0,QuanticPotato/dockerfile,,"FROM composer/composer


MAINTAINER Barnabé Chauvin <barnabe.chauvin@gmail.com>


RUN apt-get update && apt-get install -y \
	g++ \
	libicu-dev


# Install the PHP-intl extension
RUN docker-php-ext-install intl


",,2015-08-14 19:49:22,2016-02-10 08:59:01,https://github.com/QuanticPotato/dockerfile
1,QuanticPotato/dockerfile,,"FROM mysql


MAINTAINER Barnabé Chauvin <barnabe.chauvin@gmail.com>


# Set a working directory
VOLUME ['/app']
WORKDIR /app
",,2015-08-14 19:49:22,2016-02-10 08:59:01,https://github.com/QuanticPotato/dockerfile
2,QuanticPotato/dockerfile,,"FROM digitallyseamless/nodejs-bower-grunt


MAINTAINER Barnabé Chauvin <barnabe.chauvin@gmail.com>


# Set a working directory
VOLUME ['/app']
WORKDIR /app
",,2015-08-14 19:49:22,2016-02-10 08:59:01,https://github.com/QuanticPotato/dockerfile
3,d-ark/rea-robot,,"FROM ruby:2.2
RUN mkdir -p /usr/src/app
COPY . /usr/src/app
WORKDIR /usr/src/app/
RUN bundle install --without development --deployment
ENTRYPOINT './bin/rea-robot'
","Ruby
99.8%





Shell
0.2%",2015-07-12 10:34:23,2015-07-12 10:40:47,https://github.com/d-ark/rea-robot
4,technocratau/pipe-data,"Organization(name=None, id=826933)","FROM ubuntu:14.04
# @todo: Consider adding keep alive for container.
# RUN [""tail"", ""-f"", ""/dev/null""]
",,2015-07-31 08:04:33,2015-07-31 08:06:34,https://github.com/technocratau/pipe-data
5,LoicMahieu/deis-test-nodejs,,"FROM mhart/alpine-node


WORKDIR /app
COPY . .
RUN npm install


EXPOSE 3000
CMD [ ""npm"", ""start""]
","JavaScript
100.0%",2015-08-02 17:37:11,2015-08-02 17:40:57,https://github.com/LoicMahieu/deis-test-nodejs
6,ermaker/sg,,"FROM ruby:onbuild


ENV WEB_CONCURRENCY=4
ENV RACK_ENV=production


EXPOSE 5000
CMD [""foreman"", ""start""]
","Ruby
98.9%





HTML
1.1%",2015-08-03 03:41:32,2015-08-03 03:42:46,https://github.com/ermaker/sg
7,fortitudecloud/nancy-demo,,"FROM        mono:4.0.1
COPY        . /src
WORKDIR     /src
RUN         xbuild Nancy.Demo.Hosting.Docker.sln
EXPOSE      5004
ENTRYPOINT  [""mono"", ""src/bin/Nancy.Demo.Hosting.Docker.exe""]
","C#
65.1%





HTML
34.9%",2015-07-02 04:04:02,2015-07-02 04:13:28,https://github.com/fortitudecloud/nancy-demo
8,Duke-Translational-Bioinformatics/duke-data-service-portal,"Organization(name=None, id=7585420)","FROM node:0.12-onbuild


ADD ./ /var/www/app
WORKDIR /var/www/app
RUN [""npm"", ""install"", ""-g""]
RUN [""npm"", ""link""]
EXPOSE 1337 35729
CMD [""node"", ""app.js""]
","JavaScript
95.9%





HTML
2.1%





CSS
1.9%





Shell
0.1%",2015-07-13 17:48:39,2017-12-03 15:12:55,https://github.com/Duke-Translational-Bioinformatics/duke-data-service-portal
9,tillkahlbrock/circle-docker-test,,"FROM php:5.6-cli
COPY . /usr/local/bin/circle-docker-test
WORKDIR /usr/local/bin/circle-docker-test
CMD [ ""./vendor/bin/phpunit"" ]
","PHP
100.0%",2015-08-04 07:44:36,2015-08-04 08:04:58,https://github.com/tillkahlbrock/circle-docker-test
10,nsaje/dagger,,"FROM gliderlabs/alpine:3.2
ENTRYPOINT [""dagger""]


COPY . /go/src/github.com/nsaje/dagger
RUN apk-install -t build-deps go git \
	&& cd /go/src/github.com/nsaje/dagger \
	&& export GOPATH=/go \
	&& go get \
	&& go install ./... \
	&& rm -rf /go \
	&& apk del --purge build-deps
","Go
99.6%





Other
0.4%",2015-08-29 16:57:28,2017-09-27 09:20:47,https://github.com/nsaje/dagger
11,jorgebonilla/ansible-junos,,"FROM ubuntu:14.04
MAINTAINER jorge.luis.bonilla@gmail.com


ENV DEBIAN_FRONTEND noninteractive




# 1 - Update apt-get
RUN apt-get update


#2 Install junos-eznc


RUN apt-get install -y python-pip python-dev  python-lxml libxml2-dev libxslt1-dev openssl ca-certificates ssh
RUN pip install ncclient
RUN pip install junos-eznc


#3 install  netconify
RUN pip install junos-netconify


#2 Install Ansible
RUN pip install ansible && mkdir /etc/ansible


#3 - Install Junos Galaxy on ansible
RUN ansible-galaxy install Juniper.junos


#4 - Clean up
RUN apt-get clean &&\
apt-get purge


#Optional - Copy example files
ADD ./example /tmp/example
",,2015-08-29 17:42:10,2016-02-25 20:07:09,https://github.com/jorgebonilla/ansible-junos
12,olok/docker-sbt,"Organization(name=None, id=13738326)","FROM olok/oracle-jdk


RUN apt-get update && apt-get install -y git


RUN mkdir /opt/sbt &&\
    wget --local-encoding=UTF-8 -O /opt/sbt/sbt.tar.gz https://dl.bintray.com/sbt/native-packages/sbt/0.13.11/sbt-0.13.11.tgz &&\
    tar xpfo /opt/sbt/sbt.tar.gz -C /opt/sbt --strip 1 &&\
    rm /opt/sbt/sbt.tar.gz


ENV PATH $PATH:/opt/sbt/bin
",,2015-08-30 12:51:24,2016-05-24 08:24:30,https://github.com/olok/docker-sbt
13,cnam/md2html,,"FROM scratch


COPY ./md2html /usr/local/bin


VOLUME [""/data"", ""/cache""]


WORKDIR /data


ENTRYPOINT [""md2html""]
","Go
92.6%





Makefile
6.4%





Smarty
1.0%",2015-08-30 10:20:03,2017-11-13 14:05:26,https://github.com/cnam/md2html
14,masieroi/docker-liferay,,"# Liferay 6.2 CE
# 
# VERSION 0.0.2
#


FROM masieroi/docker-debian-java7


MAINTAINER Ivano Masiero <info@ivanomasiero.com>


ENV TERM=xterm


# install utils
RUN apt-get update && apt-get install -y \
nano \
zip \
vim \
unzip


# install liferay
RUN curl -O -s -k -L -C - http://downloads.sourceforge.net/project/lportal/Liferay%20Portal/6.2.5%20GA6/liferay-portal-tomcat-6.2-ce-ga6-20160112152609836.zip \
	&& unzip liferay-portal-tomcat-6.2-ce-ga6-20160112152609836.zip -d /opt \
	&& rm liferay-portal-tomcat-6.2-ce-ga6-20160112152609836.zip


RUN /bin/echo -e '\nCATALINA_OPTS=""$CATALINA_OPTS -Dexternal-properties=portal-postgres.properties""' >> /opt/liferay-portal-6.2-ce-ga6/tomcat-7.0.62/bin/setenv.sh


# add configuration Liferay file
ADD /portal-bundle.properties /opt/liferay-portal-6.2-ce-ga6/portal-bundle.properties
ADD /portal-postgres.properties /opt/liferay-portal-6.2-ce-ga6/portal-postgres.properties


# add Remote IDE Connector CE 2.0.1 portlet (for remote debugging)
ADD [""/portlets/server-manager-web"", ""/opt/liferay-portal-6.2-ce-ga6/tomcat-7.0.62/webapps/server-manager-web""]


VOLUME [""/var/liferay-home"", ""/opt/liferay-portal-6.2-ce-ga6/""]


# Ports
EXPOSE 8080


# Set JAVA_HOME
ENV JAVA_HOME /opt/java


# EXEC
CMD [""run""]
ENTRYPOINT [""/opt/liferay-portal-6.2-ce-ga6/tomcat-7.0.62/bin/catalina.sh""]
","Java
100.0%",2015-08-25 07:33:07,2016-03-02 17:07:51,https://github.com/masieroi/docker-liferay
15,jcarley/ruby-getting-started,,"FROM heroku/ruby
","Ruby
61.5%





HTML
31.5%





CSS
4.3%





JavaScript
1.7%





CoffeeScript
1.0%",2015-08-22 12:10:30,2015-08-22 12:11:37,https://github.com/jcarley/ruby-getting-started
16,brandixi3/nagios,,"##########################################################
# Dockerfile to build container image of Nagios
# Based on Ubuntu
############################################################


# Set the base image to Ubuntu
FROM ubuntu


# File Author / Maintainer
MAINTAINER RajithaK (rajithak@brandix.com)


WORKDIR /tmp


# Update the repository sources list
RUN apt-get update


# Install Nagios Master Server
RUN apt-get install -y nagios3 nagios-nrpe-plugin &&\
    apt-get install -y elinks &&\
    apt-get install -y nano &&\
    apt-get install -y openssh-server &&\
    htpasswd -c /etc/nagios3/htpasswd.users nagiosadmin  


EXPOSE 8080 80 22


RUN mv /etc/apache2/apache2.conf /etc/apache2/apache2.conf.backup &&\
    mv /etc/bash.bashrc /etc/bash.bashrc.backup  


ADD apache2.conf /etc/apache2/
ADD bash.bashrc /etc/
","ApacheConf
100.0%",2015-08-19 12:53:41,2015-08-19 13:01:55,https://github.com/brandixi3/nagios
17,InAnimaTe/docker-steamcmd-play,,"FROM debian:jessie


ENV RUNUSER daemon
ENV DAEMON_HOME /home/${RUNUSER}
ENV STEAMCMD_LOC ${DAEMON_HOME}/steamcmd
ENV STEAMCMD ${STEAMCMD_LOC}/steamcmd.sh


RUN apt-get update && \
        DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        lib32gcc1 \
        ca-certificates \
        lib32stdc++6 \
        lib32z1 \
        lib32z1-dev \
        curl && \
            apt-get clean


RUN rm -rf \
        /var/lib/apt/lists/* \
        /tmp/* \
        /var/tmp/* \
        /usr/share/locale/* \
        /var/cache/debconf/*-old \
        /var/lib/apt/lists/* \
        /usr/share/doc/*


RUN mkdir -p ${STEAMCMD_LOC}  && \
        curl -s http://media.steampowered.com/installer/steamcmd_linux.tar.gz | tar -v -C ${STEAMCMD_LOC} -zx && \
        chown -R ${RUNUSER}:${RUNUSER} ${DAEMON_HOME}


WORKDIR ${STEAMCMD_LOC}


USER ${RUNUSER}


ENTRYPOINT [""/home/daemon/steamcmd/steamcmd.sh""]
",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
18,InAnimaTe/docker-steamcmd-play,,"FROM inanimate/steamcmd-play


ENV GAME_NAME cstrike
ENV GAME_ID 90
ENV GAME_PATH ${STEAMCMD_LOC}/${GAME_NAME}


RUN while :;\
    do ${STEAMCMD} +login anonymous +force_install_dir ${GAME_PATH} +app_update ${GAME_ID} validate +quit | tee /tmp/steamcmd.log;\
      if [ ""$(cat /tmp/steamcmd.log | tail -n 9 | sha1sum | cut -d\  -f1)"" = ""e7840d7e1cecd6b41ce62b91670f3e9e2d187a3c"" ];\
        then break;\
      fi;\
    done;\
    rm /tmp/steamcmd.log


WORKDIR ${GAME_PATH}


ENTRYPOINT [""./hlds_run"", ""-game cstrike""]


",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
19,InAnimaTe/docker-steamcmd-play,,"FROM inanimate/steamcmd-play


ENV GAME_NAME csgo
ENV GAME_ID 740


ENV GAME_PATH ${STEAMCMD_LOC}/${GAME_NAME}


RUN ${STEAMCMD} +login anonymous +force_install_dir ${GAME_PATH} +app_update ${GAME_ID} validate +quit


WORKDIR ${GAME_PATH}


ENTRYPOINT [""./srcds_run"", ""-game csgo""]


CMD [""+sv_lan"", ""1"", ""+map"", ""de_mirage""]


",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
20,InAnimaTe/docker-steamcmd-play,,"FROM inanimate/steamcmd-play


ENV GAME_NAME cstrike
ENV GAME_ID 232330


ENV GAME_PATH ${STEAMCMD_LOC}/${GAME_NAME}


RUN ${STEAMCMD} +login anonymous +force_install_dir ${GAME_PATH} +app_update ${GAME_ID} validate +quit


WORKDIR ${GAME_PATH}


ENTRYPOINT [""./srcds_run"", ""-game cstrike""]


CMD [""+sv_lan"", ""1"", ""+map"", ""de_dust2""]
",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
21,InAnimaTe/docker-steamcmd-play,,"FROM inanimate/steamcmd-play


ENV GAME_NAME dod
ENV GAME_ID 232290


ENV GAME_PATH ${STEAMCMD_LOC}/${GAME_NAME}


RUN ${STEAMCMD} +login anonymous +force_install_dir ${GAME_PATH} +app_update ${GAME_ID} validate +quit


WORKDIR ${GAME_PATH}


ENTRYPOINT [""./srcds_run"", ""-game dod""]


CMD [""+sv_lan"", ""1"", ""+map"", ""dod_donner""]
",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
22,InAnimaTe/docker-steamcmd-play,,"FROM inanimate/steamcmd-play


ENV GAME_NAME garrysmod
ENV GAME_ID 4020


ENV GAME_PATH ${STEAMCMD_LOC}/${GAME_NAME}


RUN ${STEAMCMD} +login anonymous +force_install_dir ${GAME_PATH} +app_update ${GAME_ID} validate +quit


WORKDIR ${GAME_PATH}


ENTRYPOINT [""./srcds_run"", ""-game garrysmod""]


CMD [""+sv_lan"", ""1"", ""+map"", ""gm_construct""]
",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
23,InAnimaTe/docker-steamcmd-play,,"FROM inanimate/steamcmd-play


ENV GAME_NAME hl2mp
ENV GAME_ID 232370


ENV GAME_PATH ${STEAMCMD_LOC}/${GAME_NAME}


RUN ${STEAMCMD} +login anonymous +force_install_dir ${GAME_PATH} +app_update ${GAME_ID} validate +quit


WORKDIR ${GAME_PATH}


ENTRYPOINT [""./srcds_run"", ""-game hl2mp""]


CMD [""+sv_lan"", ""1"", ""+map"", ""dm_lockdown""]
",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
24,InAnimaTe/docker-steamcmd-play,,"FROM inanimate/steamcmd-play


ENV GAME_NAME hl1mp
ENV GAME_ID 255470


ENV GAME_PATH ${STEAMCMD_LOC}/${GAME_NAME}


RUN ${STEAMCMD} +login anonymous +force_install_dir ${GAME_PATH} +app_update ${GAME_ID} validate +quit


WORKDIR ${GAME_PATH}


ENTRYPOINT [""./srcds_run"", ""-game hl1mp""]


CMD [""+sv_lan"", ""1"", ""+map"", ""crossfire""]
",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
25,InAnimaTe/docker-steamcmd-play,,"FROM inanimate/steamcmd-play


ENV GAME_NAME left4dead
ENV GAME_ID 222840


ENV GAME_PATH ${STEAMCMD_LOC}/${GAME_NAME}


RUN ${STEAMCMD} +login anonymous +force_install_dir ${GAME_PATH} +app_update ${GAME_ID} validate +quit


WORKDIR ${GAME_PATH}


ENTRYPOINT [""./srcds_run"", ""-game left4dead""]


CMD [""+sv_lan"", ""1"", ""+map"", ""l4d_hospital01_apartment""]
",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
26,InAnimaTe/docker-steamcmd-play,,"FROM inanimate/steamcmd-play


ENV GAME_NAME left4dead2
ENV GAME_ID 222860


ENV GAME_PATH ${STEAMCMD_LOC}/${GAME_NAME}


RUN ${STEAMCMD} +login anonymous +force_install_dir ${GAME_PATH} +app_update ${GAME_ID} validate +quit


WORKDIR ${GAME_PATH}


ENTRYPOINT [""./srcds_run"", ""-game left4dead2""]


CMD [""+sv_lan"", ""1"", ""+map"", ""c2m1_highway""]
",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
27,InAnimaTe/docker-steamcmd-play,,"FROM inanimate/steamcmd-play


ENV GAME_NAME tf
ENV GAME_ID 232250


ENV GAME_PATH ${STEAMCMD_LOC}/${GAME_NAME}


RUN ${STEAMCMD} +login anonymous +force_install_dir ${GAME_PATH} +app_update ${GAME_ID} validate +quit


WORKDIR ${GAME_PATH}


ENTRYPOINT [""./srcds_run"", ""-game tf""]


CMD [""+sv_lan"", ""1"", ""+map"", ""ctf_2fort""]
",,2015-08-27 20:34:27,2017-05-14 02:31:44,https://github.com/InAnimaTe/docker-steamcmd-play
28,lidaling/notes,,"#	This	is	a	comment
FROM centos
MAINTAINER lidl <lidaling@foxmail.com>
RUN yum install -y wget
RUN wget -P /etc/yum.repos.d/ http://archive-primary.cloudera.com/cm5/redhat/6/x86_64/cm/cloudera-manager.repo
RUN wget -P /etc/yum.repos.d/ http://archive-primary.cloudera.com/cdh5/redhat/6/x86_64/cdh/cloudera-cdh5.repo
RUN yum install -y epel-release
RUN yum install -y nginx
RUN yum install -y python-pip
RUN pip install supervisor
ADD supervisord.conf /etc/supervisord.conf
RUN mkdir -p /var/www/html && chmod a+r /var/www/html && echo ""<?php phpinfo(); ?>"" > /var/www/html/index.php
#RUN chkconfig supervisord on && chkconfig nginx on
RUN mkdir -p /var/log/supervisor
ADD scripts/run.sh /run.sh
RUN chmod a+x /run.sh
EXPOSE 22 80
CMD [""/usr/bin/supervisord""]
ENTRYPOINT [""/run.sh""]
","Shell
35.7%





Ruby
24.9%





JavaScript
13.4%





Python
9.2%





HTML
8.4%





Java
4.2%





Other
4.2%",2015-08-27 10:06:34,2016-07-21 04:17:04,https://github.com/lidaling/notes
29,beejhuff/docker-magento2-zendserver,,"from ubuntu 


RUN apt-get update 
RUN DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade 


RUN DEBIAN_FRONTEND=noninteractive apt-get install -y vim php5 php5-cli git curl expect mysql-server-5.6 mysql-client-5.6 


RUN DEBIAN_FRONTEND=noninteractive curl -sS https://getcomposer.org/installer | php
RUN DEBIAN_FRONTEND=noninteractive mv composer.phar /usr/local/bin/composer


RUN apt-key adv --keyserver pgp.mit.edu --recv-key 799058698E65316A2E7A4FF42EAE1437F7D2C623
RUN echo ""deb http://repos.zend.com/zend-server/8.0.2/deb_apache2.4 server non-free"" >> /etc/apt/sources.list.d/zend-server.list


RUN DEBIAN_FRONTEND=noninteractive apt-get update
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y libapache2-mod-php-5.6-zend-server zend-server-php-5.6
RUN DEBIAN_FRONTEND=noninteractive /usr/local/zend/bin/zendctl.sh stop


ADD ./000-default.conf /etc/apache2/sites-available/000-default.conf
ADD ./startup.sh /usr/local/bin/startup.sh
RUN chmod +x /usr/local/bin/startup.sh
ADD ./composer.json /usr/local/bin/composer.json


expose 80
expose 3306
EXPOSE 10081 
EXPOSE 10082


VOLUME [""/var/www/magento2""]
CMD [""/bin/bash"",""/usr/local/bin/startup.sh""]
","Shell
100.0%",2015-08-23 05:20:49,2016-01-11 21:16:29,https://github.com/beejhuff/docker-magento2-zendserver
0,Armxy/docker-nginx-hhvm,,"FROM nginx


MAINTAINER NGINX-HHVM Docker Maintainers ""dead1body@hotmail.com""


# Installing packages
RUN apt-get update && apt-get -y upgrade
RUN apt-get -y install autoconf automake binutils-dev build-essential cmake g++ gawk git \
	libboost-dev libboost-filesystem-dev libboost-program-options-dev libboost-regex-dev \
	libboost-system-dev libboost-thread-dev libboost-context-dev libbz2-dev libc-client-dev libldap2-dev \
	libc-client2007e-dev libcap-dev libcurl4-openssl-dev libdwarf-dev libelf-dev \
	libexpat-dev libgd2-xpm-dev libgoogle-glog-dev libgoogle-perftools-dev libicu-dev \
	libjemalloc-dev libmcrypt-dev libmemcached-dev libmysqlclient-dev libncurses-dev \
	libonig-dev libpcre3-dev libreadline-dev libtbb-dev libtool libxml2-dev zlib1g-dev \
	libevent-dev libmagickwand-dev libinotifytools0-dev libiconv-hook-dev libedit-dev \
	libiberty-dev libxslt1-dev ocaml-native-compilers libsqlite3-dev libyaml-dev libgmp3-dev \
	php5 php5-dbg php5-common php5-mysql php5-mcrypt gperf
RUN apt-get clean && apt-get -y autoremove


# Downloading HHVM from source-code
RUN git clone git://github.com/facebook/hhvm.git hhvm-repo


# Scripts
ADD supervisor-config/ /etc/supervisor/conf.d/
ADD scripts/ /scripts/
RUN chmod 755 /scripts/*.sh


# Building HHVM
ENV HHVM_VERSION master
ENV CORE_NUMBER 4


# Building HHVM
WORKDIR /hhvm-repo
RUN git submodule update --init --recursive
RUN cmake . && make -j ${CORE_NUMBER} && make install


# Removing the pulled repository
WORKDIR /
RUN rm -rf hhvm-repo


# Exposing HHVM-FastCGI port
EXPOSE 9000


# Default command
CMD [""/scripts/start.sh""]
","Shell
100.0%",2015-08-23 04:21:53,2015-08-23 04:33:13,https://github.com/Armxy/docker-nginx-hhvm
1,ycho868/OMDB_app,,"FROM iojs:1.6


RUN apt-get install libpq-dev


COPY package.json /
RUN npm install


WORKDIR /sequelize
VOLUME /sequelize
","JavaScript
94.8%





CSS
5.2%",2015-08-10 23:42:21,2015-08-10 23:47:54,https://github.com/ycho868/OMDB_app
2,liubin/docker101,,"FROM liubin/ruby:2.2.2




MAINTAINER bin liu <liubin0329@gmail.com>


LABEL version=""0.0.1"" lang=""myapp""


COPY app.rb /app/app.rb


WORKDIR /app


RUN gem sources --remove https://rubygems.org/ \
  && gem sources -a http://ruby.taobao.org/


RUN gem install sinatra


EXPOSE 4567


CMD [""ruby"", ""app.rb""]


","Python
81.1%





Ruby
18.9%",2015-08-23 15:40:19,2017-11-23 07:29:31,https://github.com/liubin/docker101
3,liubin/docker101,,"FROM centos:7 


MAINTAINER bin liu <liubin0329@gmail.com>




# 单独添加一个文件
ADD files/file1.txt /dir1
ADD files/file2.txt /dir2/


# 添加多个文件
# Step 4 : ADD files/* /dir3
# When using ADD with more than one source file, the destination must be a directory and end with a /
# ADD files/* /dir3


ADD files/* /dir4/




# src为文件夹
ADD files /dir5
ADD files /dir6/
ADD files/ /dir7/


# 添加URL文件（带文件名）
ADD https://raw.githubusercontent.com/docker/docker/master/Dockerfile /url1


ADD https://raw.githubusercontent.com/docker/docker/master/Dockerfile /url2/




# 添加URL文件（不带文件名）
ADD https://github.com/ /url3


# Step 8 : ADD https://github.com/ /url4/
# Downloading 17.63 kB
# cannot determine filename from url: https://github.com/


# ADD https://github.com/ /url4/






","Python
81.1%





Ruby
18.9%",2015-08-23 15:40:19,2017-11-23 07:29:31,https://github.com/liubin/docker101
4,liubin/docker101,,"FROM centos:7 


MAINTAINER bin liu <liubin0329@gmail.com>


LABEL version=""2.2.2"" lang=""ruby""


ENV RUBY_MAJOR 2.2
ENV RUBY_VERSION 2.2.2


RUN yum install -y wget tar gcc g++ make automake autoconf curl-devel openssl-devel zlib-devel httpd-devel apr-devel apr-util-devel sqlite-devel


RUN cd /tmp \
    && wget http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.2.tar.gz \
    && tar zxvf ruby-2.2.2.tar.gz \
    && cd ruby-2.2.2 \
    && autoconf \
    && ./configure --disable-install-doc \
    && make \
    && make install \
    && rm -rf /tmp/ruby-2.2.2*


# skip installing gem documentation
RUN echo -e 'install: --no-document\nupdate: --no-document' >> ""$HOME/.gemrc""


ENV GEM_HOME /usr/local/bundle
ENV PATH $GEM_HOME/bin:$PATH


ENV BUNDLER_VERSION 1.10.6


RUN gem install bundler --version ""$BUNDLER_VERSION"" \
	&& bundle config --global path ""$GEM_HOME"" \
	&& bundle config --global bin ""$GEM_HOME/bin""


# don't create "".bundle"" in all our apps
ENV BUNDLE_APP_CONFIG $GEM_HOME


CMD [ ""irb"" ]


","Python
81.1%





Ruby
18.9%",2015-08-23 15:40:19,2017-11-23 07:29:31,https://github.com/liubin/docker101
5,liubin/docker101,,"# Docker101 course, Lesson-9
FROM python:2.7
ADD . /code
WORKDIR /code
RUN pip install -r requirements.txt
CMD python app.py
","Python
81.1%





Ruby
18.9%",2015-08-23 15:40:19,2017-11-23 07:29:31,https://github.com/liubin/docker101
6,liubin/docker101,,"FROM centos:7 


MAINTAINER bin liu <liubin0329@gmail.com>


RUN yum update -y


# 安装Java和Git
RUN yum install -y java-1.8.0-openjdk git


ENV JENKINS_HOME /opt/jenkins/data
ENV JENKINS_MIRROR http://mirrors.jenkins-ci.org


# 下载Jenkins的war包
RUN mkdir -p $JENKINS_HOME/plugins
RUN curl -sf -o /opt/jenkins/jenkins.war -L $JENKINS_MIRROR/war-stable/latest/jenkins.war


# 安装Jenkins插件
RUN for plugin in chucknorris greenballs scm-api git-client git ws-cleanup ;\
    do curl -sf -o $JENKINS_HOME/plugins/${plugin}.hpi \
       -L $JENKINS_MIRROR/plugins/${plugin}/latest/${plugin}.hpi ; done


EXPOSE 8080


# 添加启动命令
CMD [""java"", ""-jar"", ""/opt/jenkins/jenkins.war""]
","Python
81.1%





Ruby
18.9%",2015-08-23 15:40:19,2017-11-23 07:29:31,https://github.com/liubin/docker101
7,marmotz/docker-gulp,,"FROM marmotz/nodejs


USER root


# Install Bower & Gulp
RUN npm install -g bower gulp gulp-sass jspm


ADD init_gulp.sh /


USER nonrootuser


VOLUME [""/data/app""]
WORKDIR /data/app


CMD [""/init_gulp.sh""]
","Shell
100.0%",2015-08-30 08:36:11,2015-08-30 08:36:21,https://github.com/marmotz/docker-gulp
8,posita/vagrant-b2d-nfs-test,,"FROM debian:jessie
RUN install -d -m 755 /opt/test
COPY run-in-docker.sh /opt/
CMD /opt/run-in-docker.sh
","Shell
100.0%",2015-07-27 17:44:24,2015-07-27 23:59:39,https://github.com/posita/vagrant-b2d-nfs-test
9,mrlake/my-first-docker-build,,"FROM sdhibit/rpi-baseimage:latest
MAINTAINER Sam Lake <samspersonaladdress@gmail.com>


RUN set -x \
  && apt-get update \
  && apt-get upgrade -y \
  && apt-get install -y \
    unzip \
    wget \
    perl \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/* \
    /tmp/* \
    /var/tmp/*
 


# Install logitechmediaserver
#############################


RUN wget -O /tmp/logitechmediaserver_7.8.0_all.deb http://downloads.slimdevices.com/LogitechMediaServer_v7.8.0/logitechmediaserver_7.8.0_all.deb
RUN dpkg -i /tmp/logitechmediaserver_7.8.0_all.deb


# Configure supervisor to run logitechmediaserver
# ADD files/supervisord.conf /etc/supervisor/supervisord.conf
# ADD files/lms.conf /etc/supervisor/conf.d/lms.conf
# ADD files/boot.sh /usr/local/bin/boot.sh
# RUN chmod +x /usr/local/bin/boot.sh


# Restart lms on network up.  Needed when starting with --net=""none"" to add network later.
# ADD files/lms-restart /etc/network/if-up.d/lms-restart
# RUN chmod +x /etc/network/if-up.d/lms-restart


RUN rm -rf /tmp/*


# supervisor
# EXPOSE 9001
# logitechmediaserver
EXPOSE 9000 9090 3483


CMD [""/usr/local/bin/boot.sh""]
",,2015-07-16 12:03:32,2015-07-16 12:03:32,https://github.com/mrlake/my-first-docker-build
10,ShaneBurkhart/GoWebScaffold,,"FROM golang:1.4


MAINTAINER Shane Burkhart <shaneburkhart@gmail.com>


RUN apt-get update \
    && apt-get -y install npm \
    && apt-get -y install nodejs


RUN ln -s /usr/bin/nodejs /usr/bin/node


# TODO remove this into a dev env.
RUN go get github.com/codegangsta/gin
RUN go get bitbucket.org/liamstask/goose/cmd/goose


ADD . /go/src/github.com/ShaneBurkhart/PlanSource


ENV GOPATH /go/src/github.com/ShaneBurkhart/PlanSource/vendor:${GOPATH}


WORKDIR /go/src/github.com/ShaneBurkhart/PlanSource


RUN npm install
# Build JS
#RUN ./node_modules/.bin/gulp


EXPOSE 3000


CMD [""go"", ""run"", ""main.go""]
","Go
38.3%





HTML
32.8%





JavaScript
15.2%





CSS
11.9%





Makefile
1.6%





Nginx
0.2%",2015-07-26 19:56:31,2017-01-03 15:02:11,https://github.com/ShaneBurkhart/GoWebScaffold
11,wearespindle/coastguard,"Organization(name=None, id=10653309)","FROM postgres:9.3
MAINTAINER DevhouseSpindle


ADD sentry.sh /docker-entrypoint-initdb.d/
","Python
82.9%





Nginx
13.8%





Shell
3.3%",2015-07-22 08:49:57,2017-03-02 14:12:44,https://github.com/wearespindle/coastguard
12,wearespindle/coastguard,"Organization(name=None, id=10653309)","FROM nginx:1.9.3


COPY nginx.conf /etc/nginx/nginx.conf


COPY mycert.pem /etc/ssl/certs/mycert.pem
COPY mykey.key /etc/ssl/private/mykey.key
","Python
82.9%





Nginx
13.8%





Shell
3.3%",2015-07-22 08:49:57,2017-03-02 14:12:44,https://github.com/wearespindle/coastguard
13,atbaker/django-class-based-views-tutorial,,"FROM python:3.4


# Make source code directory
RUN mkdir -p /usr/src/app


# Install requirements
COPY requirements.txt /usr/src/app/
RUN pip install -r /usr/src/app/requirements.txt


COPY . /usr/src/app
WORKDIR /usr/src/app


# Run collectstatic
RUN python manage.py collectstatic --noinput


# Expose port 8000 by default
EXPOSE 8000


CMD [""gunicorn"", ""-c"", ""curd/settings/gunicorn.py"", ""curd.wsgi:application""]
","Python
54.6%





HTML
45.4%",2015-07-15 18:49:29,2017-05-17 17:23:46,https://github.com/atbaker/django-class-based-views-tutorial
14,bryanxu/go-zh.tools,,"# Copyright 2014 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.


# Base builder image: gobuilders/linux-x86-base


FROM debian:wheezy
MAINTAINER golang-dev <golang-dev@googlegroups.com>


ENV DEBIAN_FRONTEND noninteractive


ADD /scripts/install-apt-deps.sh /scripts/
RUN /scripts/install-apt-deps.sh


ADD /scripts/build-go-builder.sh /scripts/
RUN GO_REV=073fc578434b BUILDER_REV=8845ca94a310 /scripts/build-go-builder.sh && test -f /usr/local/bin/builder
","Go
95.3%





HTML
1.2%





JavaScript
1.2%





Assembly
0.9%





CSS
0.7%





Shell
0.3%





Other
0.4%",2015-07-19 04:51:30,2015-07-19 04:56:43,https://github.com/bryanxu/go-zh.tools
15,bryanxu/go-zh.tools,,"# Copyright 2014 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.


# gobuilders/linux-x86-clang for building with clang instead of gcc.


FROM debian:wheezy
MAINTAINER golang-dev <golang-dev@googlegroups.com>


ENV DEBIAN_FRONTEND noninteractive


ADD /sources/clang-deps.list /etc/apt/sources.list.d/


ADD /scripts/install-apt-deps.sh /scripts/
RUN /scripts/install-apt-deps.sh


ADD /scripts/build-go-builder.sh /scripts/
RUN GO_REV=073fc578434b BUILDER_REV=8845ca94a310 /scripts/build-go-builder.sh && test -f /usr/local/bin/builder


ENV CC /usr/bin/clang
","Go
95.3%





HTML
1.2%





JavaScript
1.2%





Assembly
0.9%





CSS
0.7%





Shell
0.3%





Other
0.4%",2015-07-19 04:51:30,2015-07-19 04:56:43,https://github.com/bryanxu/go-zh.tools
16,bryanxu/go-zh.tools,,"# Copyright 2014 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.


# gobuilders/linux-x86-gccgo for 32- and 64-bit gccgo.


FROM debian:wheezy
MAINTAINER golang-dev <golang-dev@googlegroups.com>


ENV DEBIAN_FRONTEND noninteractive


ADD /scripts/install-apt-deps.sh /scripts/
RUN /scripts/install-apt-deps.sh


ADD /scripts/install-gold.sh /scripts/
RUN /scripts/install-gold.sh


ADD /scripts/install-gccgo-builder.sh /scripts/
RUN /scripts/install-gccgo-builder.sh && test -f /usr/local/bin/builder
","Go
95.3%





HTML
1.2%





JavaScript
1.2%





Assembly
0.9%





CSS
0.7%





Shell
0.3%





Other
0.4%",2015-07-19 04:51:30,2015-07-19 04:56:43,https://github.com/bryanxu/go-zh.tools
17,bryanxu/go-zh.tools,,"# Copyright 2014 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.


# gobuilders/linux-x86-nacl for 32- and 64-bit nacl.
#
# We need more modern libc than Debian stable as used in base, so we're
# using Ubuntu LTS here.
#
# TODO(bradfitz): make both be Ubuntu? But we also want Debian, Fedora, 
# etc coverage., so deal with unifying these later, once there's a plan
# or a generator for them and the other builders are turned down.


FROM ubuntu:trusty
MAINTAINER golang-dev <golang-dev@googlegroups.com>


ENV DEBIAN_FRONTEND noninteractive


ADD /scripts/install-apt-deps.sh /scripts/
RUN /scripts/install-apt-deps.sh


ADD /scripts/build-go-builder.sh /scripts/
RUN GO_REV=073fc578434b BUILDER_REV=8845ca94a310 /scripts/build-go-builder.sh && test -f /usr/local/bin/builder


ADD build-command.pl /usr/local/bin/


ENV PATH /usr/local/bin:$GOROOT/bin:$PATH
","Go
95.3%





HTML
1.2%





JavaScript
1.2%





Assembly
0.9%





CSS
0.7%





Shell
0.3%





Other
0.4%",2015-07-19 04:51:30,2015-07-19 04:56:43,https://github.com/bryanxu/go-zh.tools
18,bryanxu/go-zh.tools,,"# Copyright 2014 The Go Authors. All rights reserved.
# Use of this source code is governed by a BSD-style
# license that can be found in the LICENSE file.


FROM debian:sid
MAINTAINER golang-dev <golang-dev@googlegroups.com>


ENV DEBIAN_FRONTEND noninteractive


ADD /scripts/install-apt-deps.sh /scripts/
RUN /scripts/install-apt-deps.sh


ADD /scripts/build-go-builder.sh /scripts/
RUN GO_REV=073fc578434b BUILDER_REV=8845ca94a310 /scripts/build-go-builder.sh && test -f /usr/local/bin/builder
","Go
95.3%





HTML
1.2%





JavaScript
1.2%





Assembly
0.9%





CSS
0.7%





Shell
0.3%





Other
0.4%",2015-07-19 04:51:30,2015-07-19 04:56:43,https://github.com/bryanxu/go-zh.tools
19,shihuacai1989/openim,,"FROM java:7
VOLUME /tmp
ADD openim-docker-0.1.jar app.jar
RUN bash -c 'touch /app.jar'
ENTRYPOINT [""java"",""-Djava.security.egd=file:/dev/./urandom"",""-jar"",""/app.jar""]
","Java
96.2%





JavaScript
2.8%





Other
1.0%",2015-07-21 13:36:13,2017-05-02 15:49:54,https://github.com/shihuacai1989/openim
20,shihuacai1989/openim,,"FROM java:8
VOLUME /tmp
ADD gs-spring-boot-docker-0.1.0.jar app.jar
RUN bash -c 'touch /app.jar'
ENTRYPOINT [""java"",""-Djava.security.egd=file:/dev/./urandom"",""-jar"",""/app.jar""]
","Java
96.2%





JavaScript
2.8%





Other
1.0%",2015-07-21 13:36:13,2017-05-02 15:49:54,https://github.com/shihuacai1989/openim
21,jciolek/docker-superghost,,"FROM ghost:0.6.4
MAINTAINER j.ciolek@webnicer.com
RUN apt-get update && apt-get install -y supervisor
RUN mkdir -p /var/log/supervisor
COPY supervisor/* /etc/supervisor/conf.d/
CMD [""/usr/bin/supervisord""]
",,2015-07-23 11:47:33,2015-07-23 11:47:33,https://github.com/jciolek/docker-superghost
22,tdraier/docker-unomi,,"FROM tdraier/ubuntu-java
MAINTAINER tdraier@jahia.com


COPY install.sh /home/jahia/install.sh
COPY startWithIp.sh /home/jahia/startWithIp.sh
USER root
WORKDIR /home/jahia
RUN ./install.sh
WORKDIR /home/jahia/unomi/bin


CMD [""sh"", ""./startWithIp.sh""]


EXPOSE 9443
EXPOSE 8181
EXPOSE 9200
EXPOSE 9001


","Shell
100.0%",2015-07-23 08:50:12,2017-08-02 20:50:24,https://github.com/tdraier/docker-unomi
23,expert360/ec2-net-utils,"Organization(name=None, id=3508483)","FROM ubuntu:trusty


MAINTAINER Expert360 <dev@expert360.com>


RUN apt-get update && \
    DEBIAN_FRONTEND=""noninteractive"" apt-get install --force-yes --assume-yes packaging-dev


# Create a user specifically for building packages
RUN groupadd -r expert360 && useradd -m -g expert360 expert360
USER expert360


# debuild needs GPG keychain to sign packages
ENV GNUPGHOME=/home/expert360/.gnupg \
    DEBEMAIL=dev@expert360.com \
    DEBFULLNAME=""Expert360 Dev Team""


COPY dput.cf /home/expert360/.dput.cf
VOLUME /home/expert360/.gnupg
WORKDIR /home/expert360
","Shell
94.8%





Makefile
5.2%",2015-07-17 06:24:09,2017-04-22 15:00:55,https://github.com/expert360/ec2-net-utils
24,gatblau/neus,,"#
# CentOS 7 with systemd
# builds a docker image which replaces the fake systemd in the centos base image with the real systemd
# Use for emulating Virtual machines running CentOS 7 or RHEL 7 for testing playbooks.
#
# Additional packages:
#   sudo
#   ssh
#   net-tools
#
FROM centos:7
MAINTAINER ""gatblau"" <admin@gatblau.org>
ENV container docker
RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \
rm -f /lib/systemd/system/multi-user.target.wants/*;\
rm -f /etc/systemd/system/*.wants/*;\
rm -f /lib/systemd/system/local-fs.target.wants/*; \
rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
rm -f /lib/systemd/system/basic.target.wants/*; \
rm -f /lib/systemd/system/anaconda.target.wants/*;
RUN yum update -y; \
    yum install -y openssh-server; \
    yum install -y sudo ; \
    yum install -y initscripts ; \
    yum install -y net-tools ; \
    yum clean all
VOLUME [ ""/sys/fs/cgroup"" ]
CMD [""/usr/sbin/init""]
","Shell
96.8%





Ruby
2.8%





Python
0.4%",2015-07-17 07:02:14,2017-03-22 10:53:44,https://github.com/gatblau/neus
25,AlphaNerd80/barrage,,"



###################################################
#	Docker File to build Nginx container
#	Debian Based
###################################################


FROM debian


Maintainer Steven Mustafa




# Update and install pre-reqs
RUN apt-get update
RUN apt-get install -y curl net-tools python openssl






# generate the 1GB random File
# CMD dd if=/dev/urandom of=/tmp/1G.img bs=64M count=16 iflag=fullblock


# ENV BIG_FILE /tmp/1G.img




# download pip
CMD CMD curl -O https://bootstrap.pypa.io/get-pip.py
# setup pip
CMD python get-pip.py
# install virtualenv and create in folder named appdo
CMD pip install virtualenv
CMD mkdir app 
CMD cd app
CMD virtualenv .venv
CMD source .venv/bin/activate
CMD pip install flask
ADD barrage.py .
ADD stress_thread.py .
CMD touch __init__.py
CMD python /app/barrage.py
# create virtual and install








# Install Nginx
#########


# download repo key


# RUN curl -O -L nginx.org/keys/nginx_signing.key
# RUN apt-key add nginx_signing.key
# RUN apt-get update -y 
# RUN apt-get install -y nginx 


# Remove the default config and a new one
# RUN rm -v /etc/nginx/nginx.conf


#copy local conf
# ADD nginx.conf /etc/nginx/
# RUN echo ""daemon off;"" >> /etc/nginx/nginx.conf




############################################################


# EXPOSE 80


# CMD service nginx start
","Python
100.0%",2015-07-16 19:32:12,2015-07-16 19:33:02,https://github.com/AlphaNerd80/barrage
26,IRT-SystemX/env-xvisor,"Organization(name=None, id=9263732)","#
# This file is part of Xvisor Build Environment.
# Copyright (C) 2015 Institut de Recherche Technologique SystemX
# Copyright (C) 2015 OpenWide
# All rights reserved.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this Xvisor Build Environment. If not, see
# <http://www.gnu.org/licenses/>.
#
# @file Dockerfile
#


FROM ubuntu:trusty


RUN apt-get update
RUN apt-get install -y git make wget python bc
RUN apt-get install -y realpath fakeroot libtool telnet genext2fs build-essential libncurses5-dev pkg-config libusb-1.0-0-dev gcc-multilib binutils-multiarch 


RUN echo 'cd /root/env-xvisor && ./configure -n && make xvisor-uimage' > /root/make_xvisor_uimage.sh


RUN chmod +x /root/make_xvisor_uimage.sh


","Makefile
37.2%





Python
32.1%





Shell
30.7%",2015-07-17 08:50:29,2016-03-02 10:00:38,https://github.com/IRT-SystemX/env-xvisor
27,nyoko708/banana-radio-docker,,,,2015-07-26 13:40:05,2015-07-26 13:40:05,https://github.com/nyoko708/banana-radio-docker
28,nyoko708/banana-radio-docker,,,,2015-07-26 13:40:05,2015-07-26 13:40:05,https://github.com/nyoko708/banana-radio-docker
29,nyoko708/banana-radio-docker,,,,2015-07-26 13:40:05,2015-07-26 13:40:05,https://github.com/nyoko708/banana-radio-docker
0,MichaelVillalobos/DailyLove,"Organization(name=None, id=14153462)","FROM ubuntu:14.04


# Upgrade OS and install dependencies
RUN apt-get update; \
    apt-get install -y \
            git \
            libpq-dev \
            python-dev \
            python-pip


# Without this requirements.txt breaks pip
RUN pip install -U pip
RUN pip install -U gunicorn


RUN mkdir /code
WORKDIR /code


# Install python app requirements
ADD requirements.txt /code/requirements.txt


# Make sure unrevisioned installs are added after cache buster
RUN pip install -Ur requirements.txt


# Copy the code (cache buster)
ADD . /code


EXPOSE 8000


CMD [""gunicorn"", ""--access-logfile=-"", ""--error-logfile=-"", \
 ""--bind=0.0.0.0:8000"", ""--workers=6"", ""--timeout=120"", \
 ""--reload app:app""]
","Python
62.6%





HTML
34.7%





Shell
2.7%",2015-09-06 21:43:48,2015-09-06 21:47:29,https://github.com/MichaelVillalobos/DailyLove
1,eugeneai/dockerfiles,,"## Container to debug archlinux containers
FROM eugeneai/ssh-server
MAINTAINER Evgeny Cherkashin <eugeneai@irnok.net>
ENV HOME /root


RUN pacman -Syu procps iproute2 net-tools mc zile nano websvn php php-apache grep --needed --noconfirm


RUN groupadd -g 977 git && useradd -g git -u 977 -d /git -m -r -s /usr/bin/bash git #git-shell git
RUN groupadd -g 976 bzr && useradd -g bzr -u 976 -d /bzr -m -r -s /usr/bin/bash bzr
RUN groupadd -g 975 svn && useradd -g svn -u 975 -d /svn -m -r -s /usr/bin/bash svn
RUN gpasswd -a http svn


RUN pacman -S git bzr subversion apache --needed --noconfirm


RUN echo ""git:git"" | chpasswd && echo ""bzr:bzr"" | chpasswd && echo ""svn:svn"" | chpasswd


RUN rm -rf /etc/update-motd.d /etc/motd /etc/motd.dynamic 
RUN ln -fs /dev/null /run/motd.dynamic


ADD ./services /services
ADD ./etc /etc
ADD ./srv /srv
RUN echo ""Include conf/httpd-local.conf"" >> /etc/httpd/conf/httpd.conf
RUN sed -i -e 's/^\(.*mpm_event_module.*\)$/#\1/' /etc/httpd/conf/httpd.conf
RUN mkdir /run/httpd && chown http:http /run/httpd




VOLUME [""/git"", ""/bzr"", ""/svn""]




","Shell
71.0%





Makefile
25.7%





PHP
3.3%",2015-09-08 14:12:35,2016-10-29 01:56:22,https://github.com/eugeneai/dockerfiles
2,OpaleNet/PHPSecurityChecker,"Organization(name=None, id=3267291)","FROM alpine:edge
MAINTAINER Yann Mad <yann@opale.net>


WORKDIR /usr/src/app
COPY composer.json /usr/src/app/
COPY composer.lock /usr/src/app/


RUN apk --update add git php-common php-ctype php-iconv php-json php-pcntl php-phar php-openssl php-opcache php-sockets curl && \
    curl -sS https://getcomposer.org/installer | php && \
    /usr/src/app/composer.phar install && \
    apk del build-base && rm -fr /usr/share/ri


RUN adduser -u 9000 -D app


WORKDIR /code
COPY . /usr/src/app


USER app
VOLUME /code


CMD [""/usr/src/app/bin/php-sensio-security-checker""]
","PHP
97.3%





Shell
2.7%",2015-09-14 13:54:55,2015-09-14 13:56:50,https://github.com/OpaleNet/PHPSecurityChecker
3,gitter-badger/implementable,,"FROM java:8u66-jdk


# Copy source code
RUN mkdir -p /src/src && mkdir -p /src/gradle
COPY gradle /src/gradle
COPY src /src/src
COPY build.gradle gradlew settings.gradle /src/
WORKDIR /src


# Build & remove the source code
RUN ./gradlew installDist && \
    mv ./build/install/implementable-idl / && \
    rm -rf /src


VOLUME /workdir
WORKDIR /workdir
ENTRYPOINT [""/implementable-idl/bin/implementable-idl""]


","Java
80.9%





ANTLR
19.1%",2015-09-02 19:13:49,2016-03-12 00:29:48,https://github.com/gitter-badger/implementable
4,corbolj/Virtual-Box-Automation,,"# Version 2.3


FROM centos:centos6
MAINTAINER Bernardo Gomez Palacio <bernardo.gomezpalacio@gmail.com>
ENV REFRESHED_AT 2015-03-19


# Install EPEL to have MySQL packages.
RUN yum install -y http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
# Install Zabbix release packages.
RUN yum install -y http://repo.zabbix.com/zabbix/2.4/rhel/6/x86_64/zabbix-release-2.4-1.el6.noarch.rpm
# Refresh
RUN yum makecache
# Installing Tools.
RUN yum -y -q install \
              monit \
              nmap  \
              traceroute \
              wget  \
              sudo


# Installing SNMP Utils
# RUN yum -y install libsnmp-dev libsnmp-base libsnmp-dev libsnmp-perl libnet-snmp-perl librrds-perl
RUN yum -y -q install \
              net-snmp-devel  \
              net-snmp-libs   \
              net-snmp        \
              net-snmp-perl   \
              net-snmp-python \
              net-snmp-utils


# Install Lamp Stack, including PHP5 SNMP
RUN yum -y -q install \
              mysql \
              mysql-server


# Install Apache and PHP5 with ldap support
RUN yum -y -q install \
              httpd \
              php \
              php-mysql \
              php-snmp  \
              php-ldap


# Install packages.
RUN yum -y -q install java-1.8.0-openjdk \
                      java-1.8.0-openjdk-devel


COPY ./profile.d/java.sh /etc/profile.d/java.sh
RUN chmod 755 /etc/profile.d/java.sh


#RUN /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.25-3.b17.el6_6.x86_64/jre/bin/java
# Install Zabbix Server and PHP UI.
# Be aware of the Zabbix version number in the  zabbix22-dbfiles-mysql package(!).
RUN yum -y -q install zabbix-agent  \
              zabbix-get            \
              zabbix-java-gateway   \
              zabbix-sender         \
              zabbix-server         \
              zabbix-server-mysql   \
              zabbix-web            \
              zabbix-web-mysql      \
              zabbix22-dbfiles-mysql


# YUM Cleanup
RUN yum clean all && rm -rf /tmp/*


# MySQL
COPY ./mysql/my.cnf /etc/mysql/conf.d/my.cnf
# Get the tuneup kit
# https://major.io/mysqltuner/
RUN wget http://mysqltuner.pl -O /usr/local/bin/mysqltuner.pl
RUN chmod 755 /usr/local/bin/mysqltuner.pl


COPY ./sudoers.d/    /etc/sudoers.d/
# Zabbix Conf Files
COPY ./zabbix/zabbix.ini 				        /etc/php.d/zabbix.ini
COPY ./zabbix/httpd_zabbix.conf  		    /etc/httpd/conf.d/zabbix.conf
COPY ./zabbix/zabbix.conf.php    		    /etc/zabbix/web/zabbix.conf.php
COPY ./zabbix/zabbix_agentd.conf 		    /etc/zabbix/zabbix_agentd.conf
COPY ./zabbix/zabbix_java_gateway.conf 	/etc/zabbix/zabbix_java_gateway.conf
COPY ./zabbix/zabbix_server.conf 		    /etc/zabbix/zabbix_server.conf


RUN chmod 640 /etc/zabbix/zabbix_server.conf
RUN chown root:zabbix /etc/zabbix/zabbix_server.conf


# Monit
ADD ./monitrc /etc/monitrc
RUN chmod 600 /etc/monitrc


# https://github.com/dotcloud/docker/issues/1240#issuecomment-21807183
RUN echo ""NETWORKING=yes"" > /etc/sysconfig/network


# Add the script that will start the repo.
ADD ./scripts/entrypoint.sh /bin/docker-zabbix
RUN chmod 755 /bin/docker-zabbix


# Expose the Ports used by
# * Zabbix services
# * Apache with Zabbix UI
# * Monit
EXPOSE 10051 10052 80 2812


VOLUME [""/var/lib/mysql"", ""/usr/lib/zabbix/alertscripts"", ""/usr/lib/zabbix/externalscripts"", ""/etc/zabbix/zabbix_agentd.d""]


ENTRYPOINT [""/bin/docker-zabbix""]
CMD [""run""]
","PowerShell
44.0%





Visual Basic
21.2%





Ruby
15.0%





HTML
14.0%





Shell
5.3%





PHP
0.5%",2015-09-03 13:56:46,2015-09-25 19:24:08,https://github.com/corbolj/Virtual-Box-Automation
5,chrisdurtschi/usana_couchbase_auth,,"FROM ubuntu


# make sure apt is up to date
RUN apt-get update


# install nodejs and npm
RUN apt-get install -y nodejs nodejs-legacy npm git git-core


ADD start.sh /tmp/


RUN chmod +x /tmp/start.sh


CMD ./tmp/start.sh
","JavaScript
96.8%





Shell
3.2%",2015-09-02 22:10:38,2016-01-19 20:57:37,https://github.com/chrisdurtschi/usana_couchbase_auth
6,prizyp/dockerfiles,,"FROM cnry/python:2.7


MAINTAINER devops@canary.is


RUN apt-get update \
  && apt-get --yes --no-install-recommends install \
    build-essential \
    ca-certificates \
    git \
    libcurl4-openssl-dev \
    openssh-client \
    libjansson-dev \
    libssl-dev \
    pkg-config \
    uuid-dev \
    python-dev \
    python-pip \
    wget \
  && rm -rf /var/lib/apt/lists/*


RUN \
  mkdir -m 0700 ~/.ssh \
  && ssh-keyscan -t rsa -H github.com > ~/.ssh/known_hosts


","Shell
100.0%",2015-09-18 20:32:37,2016-06-24 17:06:44,https://github.com/prizyp/dockerfiles
7,prizyp/dockerfiles,,"FROM debian:jessie


MAINTAINER devops@canary.is


RUN apt-get update \
  && apt-get --yes --no-install-recommends install \
    build-essential \
    time \
    git \
    unzip \
    libldap2-dev \
    libsasl2-dev \
    openssh-client \
    mercurial \
    erlang-dev \
    erlang-src \
    erlang-nox \
    xsltproc \
    zip \
    netcat \
    ant \
  && rm -rf /var/lib/apt/lists/*


RUN \
  mkdir -m 0700 ~/.ssh \
  && ssh-keyscan -t rsa -H github.com > ~/.ssh/known_hosts
","Shell
100.0%",2015-09-18 20:32:37,2016-06-24 17:06:44,https://github.com/prizyp/dockerfiles
8,prizyp/dockerfiles,,"FROM debian:jessie


MAINTAINER devops@canary.is


ENV DEBIAN_FRONTEND noninteractive
ENV FAKE_S3_ROOT    /srv/fake-s3


RUN mkdir -p ""$FAKE_S3_ROOT"" && chown daemon:daemon ""$FAKE_S3_ROOT""


WORKDIR $FAKE_S3_ROOT


RUN apt-get update \
  && apt-get -y install ruby rubygems-integration git \
  && rm -rf /var/lib/apt/lists/*


ENV FAKES3_VERSION 0.1.6.1
ENV FAKES3_BRANCH missing-content-type
ENV FAKES3_REPO https://github.com/bison/fake-s3.git


RUN git clone --branch $FAKES3_BRANCH $FAKES3_REPO /tmp/fake-s3 \
  && cd /tmp/fake-s3 \
  && gem build fakes3.gemspec \
  && gem install ./fakes3-$FAKES3_VERSION.gem


ENV FAKE_S3_PORT 8080


VOLUME [""/srv/fake-s3""]


USER daemon


CMD exec fakes3 server --port=""$FAKE_S3_PORT"" --root=""$FAKE_S3_ROOT""
","Shell
100.0%",2015-09-18 20:32:37,2016-06-24 17:06:44,https://github.com/prizyp/dockerfiles
9,prizyp/dockerfiles,,"FROM debian:jessie


ENV DEBIAN_FRONTEND  noninteractive


MAINTAINER devops@canary.is


RUN apt-get update \
  && apt-get --yes --no-install-recommends install \
    openjdk-7-jdk \
  && rm -rf /var/lib/apt/lists/*


ENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64
","Shell
100.0%",2015-09-18 20:32:37,2016-06-24 17:06:44,https://github.com/prizyp/dockerfiles
10,prizyp/dockerfiles,,"FROM cnry/python:2.7


ENV MOCK_S3_ROOT /srv/mock-s3


RUN mkdir -p ""$MOCK_S3_ROOT"" && chown daemon:daemon ""$MOCK_S3_ROOT""


WORKDIR $MOCK_S3_ROOT


RUN apt-get update \
  && apt-get -y install git \
  && rm -rf /var/lib/apt/lists/*


ENV MOCK_S3_REPO https://github.com/jserver/mock-s3.git


RUN git clone $MOCK_S3_REPO /tmp/mock-s3 \
  && cd /tmp/mock-s3 \
  && python setup.py install


ENV MOCK_S3_PORT 8080


VOLUME [""/srv/mock-s3""]


USER daemon


CMD exec mock_s3 --host 0.0.0.0 --port $MOCK_S3_PORT --root $MOCK_S3_ROOT
","Shell
100.0%",2015-09-18 20:32:37,2016-06-24 17:06:44,https://github.com/prizyp/dockerfiles
11,prizyp/dockerfiles,,"FROM debian:jessie


MAINTAINER devops@canary.is


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update && \
  apt-get -y install slapd ldap-utils ldapscripts && \
  rm -rf /var/lib/apt/lists/*


EXPOSE 389


COPY entrypoint.sh /entrypoint.sh


ENTRYPOINT [""/entrypoint.sh""]


CMD [""slapd"", ""-h"", ""ldap:/// ldapi:///"", \
 ""-u"", ""openldap"", ""-g"", ""openldap"",  \
 ""-F"", ""/etc/ldap/slapd.d"", ""-d"", ""0""]
","Shell
100.0%",2015-09-18 20:32:37,2016-06-24 17:06:44,https://github.com/prizyp/dockerfiles
12,prizyp/dockerfiles,,"FROM debian:jessie


ENV DEBIAN_FRONTEND  noninteractive
ENV PYTHONUNBUFFERED true
ENV VIRTUAL_ENV      /usr/local/virtualenv
ENV PATH             $VIRTUAL_ENV/bin:$PATH


MAINTAINER devops@canary.is


RUN apt-get update \
  && apt-get --yes --no-install-recommends install \
    gcc \
    g++ \
    libc6-dev \
    python2.7 \
    python2.7-dev \
    python-pip \
  && rm -rf /var/lib/apt/lists/*


RUN pip install virtualenv \
  && mkdir -p ""${VIRTUAL_ENV}"" \
  && virtualenv ""${VIRTUAL_ENV}""
","Shell
100.0%",2015-09-18 20:32:37,2016-06-24 17:06:44,https://github.com/prizyp/dockerfiles
13,prizyp/dockerfiles,,"FROM debian:jessie


ENV DEBIAN_FRONTEND  noninteractive
ENV PYTHONUNBUFFERED true
ENV VIRTUAL_ENV      /usr/local/virtualenv
ENV PATH             $VIRTUAL_ENV/bin:$PATH


MAINTAINER devops@canary.is


RUN apt-get update \
  && apt-get --yes --no-install-recommends install \
    rubygems \
    git \
    make \
    time \
    curl \
    openssh-client \
    build-essential \
    gcc \
    g++ \
    libc6-dev \
    python2.7 \
    python2.7-dev \
    python-pip \
    mysql-client \
    libmysqlclient-dev \
    libpq-dev \
    unzip \
    libev-dev \
    libldap2-dev \
    libsasl2-dev \
    libssl-dev \
    libffi-dev \
    mercurial \
    libgraphicsmagick++1-dev \
    libboost-python-dev \
    libxml2-dev \
    libxslt1-dev \
    zip \
    libevent-dev \
    libev-dev \
  && rm -rf /var/lib/apt/lists/*


RUN \
  mkdir -m 0700 ~/.ssh \
  && ssh-keyscan -t rsa -H github.com > ~/.ssh/known_hosts


RUN gem install fakes3


RUN pip install virtualenv \
  && mkdir -p ""${VIRTUAL_ENV}"" \
  && virtualenv ""${VIRTUAL_ENV}""


RUN pip install -U flake8 pip awscli mysql-python boto agile
","Shell
100.0%",2015-09-18 20:32:37,2016-06-24 17:06:44,https://github.com/prizyp/dockerfiles
14,prizyp/dockerfiles,,"FROM cnry/jdk


RUN adduser --quiet --system --uid 1000 --group --disabled-login \
  --home /srv/jboss jboss


WORKDIR /srv/jboss


RUN apt-get update \
  && apt-get --yes --no-install-recommends install \
    curl \
    unzip \
  && rm -rf /var/lib/apt/lists/*


USER jboss


ENV WILDFLY_VERSION 8.2.0.Final
ENV WILDFLY_URL http://download.jboss.org/wildfly/$WILDFLY_VERSION/wildfly-$WILDFLY_VERSION.tar.gz


RUN curl ""$WILDFLY_URL"" | tar zx && mv wildfly-$WILDFLY_VERSION wildfly


ENV DEPLOYMENTS_DIR /srv/jboss/wildfly/standalone/deployments


EXPOSE 8080 9990


CMD exec /srv/jboss/wildfly/bin/standalone.sh -b 0.0.0.0 $WILDFLY_OPTS
","Shell
100.0%",2015-09-18 20:32:37,2016-06-24 17:06:44,https://github.com/prizyp/dockerfiles
15,akitty/ubuntu-pii,,"FROM ubuntu-debootstrap:14.04
RUN \
	apt-get update && \
	apt-get install -y --no-install-recommends \
	ca-certificates \ 
	curl \
	wget \
	apt-transport-https \
	&& rm -rf /var/lib/apt/lists/*;




",,2015-09-18 17:02:36,2015-09-18 17:02:36,https://github.com/akitty/ubuntu-pii
16,cmaohuang/docker-firefox-java,,"FROM ubuntu:14.04


MAINTAINER James Huang


RUN export uid=1000 gid=1000 && \
    mkdir -p /home/firefox && \
    echo ""firefox:x:${uid}:${gid}:firefox,,,:/home/firefox:/bin/bash"" >> /etc/passwd && \
    echo ""firefox:x:${uid}:"" >> /etc/group && \
    echo ""firefox ALL=(ALL) NOPASSWD: ALL"" > /etc/sudoers.d/firefox && \
    chmod 0440 /etc/sudoers.d/firefox && \
    chown ${uid}:${gid} -R /home/firefox


RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive  apt-get install -y firefox \
    language-pack-zh-hant firefox-locale-zh-hant fonts-wqy-zenhei \
    openjdk-7-jre icedtea-plugin && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /var/cache/*


ENV HOME /home/firefox
WORKDIR /home/firefox


USER firefox
CMD /usr/bin/firefox
",,2015-09-18 14:30:54,2015-09-18 14:30:54,https://github.com/cmaohuang/docker-firefox-java
17,mRoca/docker-symfony-test,,"FROM debian:jessie


MAINTAINER Michel Roca <mroca.dh@gmail.com>


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update && apt-get install --no-install-recommends -y \
    php5-fpm \
    php5-curl \
    php5-intl \
    php5-gd \
    php5-mcrypt \
    php-apc \
    nginx \
    git \
    curl \
    tar \
    wget \
    ca-certificates \
    openssh-client \
 && apt-get autoremove -y && apt-get clean && rm -r /var/lib/apt/lists/*


# Composer
RUN curl -k -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer


# Nginx
RUN mkdir -p /var/lib/nginx /etc/nginx/sites-enabled /etc/nginx/sites-available /var/www
ADD nginx.conf /etc/nginx/nginx.conf
ADD default /etc/nginx/sites-available/default


# PHP
RUN sed -i ""s/;date.timezone =.*/date.timezone = UTC/"" /etc/php5/fpm/php.ini && \
    sed -i ""s/;date.timezone =.*/date.timezone = UTC/"" /etc/php5/cli/php.ini && \
    sed -i 's/;daemonize = yes/daemonize = no/g' /etc/php5/fpm/php-fpm.conf && \
    sed -i 's/post_max_size = 8M/post_max_size = 16M/g' /etc/php5/fpm/php.ini && \
    sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 16M/g' /etc/php5/fpm/php.ini && \
    sed -i 's/error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT/error_reporting = E_ALL/g' /etc/php5/fpm/php.ini && \
    sed -i ""s/display_errors = Off/display_errors = On/"" /etc/php5/fpm/php.ini && \
    sed -i ""s/max_execution_time = 30/max_execution_time = 300/"" /etc/php5/fpm/php.ini && \
    sed -i ""s/max_input_time = 60/max_input_time = 300/"" /etc/php5/fpm/php.ini && \
    sed -i ""s/memory_limit = 128M/memory_limit = 1024M/"" /etc/php5/fpm/php.ini && \
    sed -i ""s/default_socket_timeout = 60/default_socket_timeout = 300/"" /etc/php5/fpm/php.ini && \


    sed -i '/^;catch_workers_output/ccatch_workers_output = yes' /etc/php5/fpm/php-fpm.conf && \
    sed -i '/^;error_log/cerror_log = /var/log/php5-fpm.log' /etc/php5/fpm/php-fpm.conf && \


    sed -i '/^;php_admin_value\[error_log\]/cphp_admin_value[error_log] = /var/log/php5-fpm.log' /etc/php5/fpm/pool.d/www.conf && \
    sed -i '/^;php_admin_flag\[log_errors\]/cphp_admin_flag[log_errors] = on' /etc/php5/fpm/pool.d/www.conf


# php-cs-fixer
RUN curl http://get.sensiolabs.org/php-cs-fixer.phar -o php-cs-fixer \
    && chmod a+x php-cs-fixer \
    && mv php-cs-fixer /usr/local/bin/php-cs-fixer


ADD php-cs-fixer-diff-cache.sh /opt/php-cs-fixer-diff-cache.sh


# Start
ADD start.sh /opt/start.sh
RUN chmod +x /opt/*.sh


VOLUME [""/var/www""]
WORKDIR /var/www


EXPOSE 80


CMD [""/opt/start.sh""]
","Shell
82.7%





Nginx
17.3%",2015-09-16 07:32:06,2017-09-18 06:23:14,https://github.com/mRoca/docker-symfony-test
18,CEN3031-7B/HealthApp,"Organization(name=None, id=14204103)","FROM node:0.10


MAINTAINER Matthias Luebken, matthias@catalyst-zero.com


# Install gem sass for  grunt-contrib-sass
RUN apt-get update -qq && apt-get install -y build-essential
RUN apt-get install -y ruby
RUN gem install sass


WORKDIR /home/mean


# Install Mean.JS Prerequisites
RUN npm install -g grunt-cli
RUN npm install -g bower


# Install Mean.JS packages
ADD package.json /home/mean/package.json
RUN npm install


# Manually trigger bower. Why doesnt this work via npm install?
ADD .bowerrc /home/mean/.bowerrc
ADD bower.json /home/mean/bower.json
RUN bower install --config.interactive=false --allow-root


# Make everything available for start
ADD . /home/mean


# Set development environment as default
ENV NODE_ENV development


# Port 3000 for server
# Port 35729 for livereload
EXPOSE 3000 35729
CMD [""grunt""]
","JavaScript
71.9%





HTML
25.6%





CSS
2.3%





Shell
0.2%",2015-09-16 18:01:11,2017-10-02 20:13:14,https://github.com/CEN3031-7B/HealthApp
19,vshvedov/try-test,,"FROM ruby:2.2.2
RUN apt-get update -qq && apt-get install -y build-essential libpq-dev
RUN mkdir /apiapp
WORKDIR /apiapp
ADD Gemfile /apiapp/Gemfile
RUN bundle install
ADD . /apiapp
","Ruby
78.7%





HTML
16.0%





CSS
2.0%





JavaScript
1.9%





Nginx
1.4%",2015-09-19 21:23:43,2015-09-20 11:22:22,https://github.com/vshvedov/try-test
20,vshvedov/try-test,,"FROM nginx
COPY nginx.conf /etc/nginx/nginx.conf
","Ruby
78.7%





HTML
16.0%





CSS
2.0%





JavaScript
1.9%





Nginx
1.4%",2015-09-19 21:23:43,2015-09-20 11:22:22,https://github.com/vshvedov/try-test
21,tiagodeoliveira/reactive-voting,,"FROM java:8


ADD src /data/src
ADD gradle /data/gradle
COPY build.gradle /data/build.gradle
COPY settings.gradle /data/settings.gradle
COPY gradlew /data/gradlew


WORKDIR /data
RUN ./gradlew build
RUN ./gradlew installDist
RUN cp -R build/install/tiagodeoliveira /release
RUN rm -rf /data


WORKDIR /release


EXPOSE 8080
CMD bin/tiagodeoliveira
","Groovy
33.8%





JavaScript
29.4%





HTML
27.4%





CSS
9.1%





Shell
0.3%",2015-09-19 16:59:21,2015-11-06 11:16:41,https://github.com/tiagodeoliveira/reactive-voting
22,garystafford/spring-music-docker,,"# MongoDB image with host-based data volume


FROM mongo:latest


MAINTAINER Gary A. Stafford <garystafford@rochester.rr.com>
ENV REFRESHED_AT 2016-07-30


VOLUME [""/data/db""]
WORKDIR /data
CMD [""mongod"", ""--smallfiles""]
","Shell
100.0%",2015-09-04 01:29:41,2017-12-04 08:57:22,https://github.com/garystafford/spring-music-docker
23,garystafford/spring-music-docker,,"# NGINX image with build artifact


FROM nginx:latest


MAINTAINER Gary A. Stafford <garystafford@rochester.rr.com>
ENV REFRESHED_AT 2016-09-17


ENV GITHUB_REPO https://github.com/garystafford/spring-music/raw/build-artifacts
ENV STATIC_FILE spring-music-static.zip


RUN apt-get update -qq \
  && apt-get install -qqy curl wget unzip nano \
  && apt-get clean \
  \
  && wget -O /tmp/${STATIC_FILE} ${GITHUB_REPO}/${STATIC_FILE} \
  && unzip /tmp/${STATIC_FILE} -d /usr/share/nginx/assets/


COPY default.conf /etc/nginx/conf.d/default.conf


# tweak nginx image set-up, remove log symlinks
RUN rm /var/log/nginx/access.log /var/log/nginx/error.log


# install Filebeat
ENV FILEBEAT_VERSION=filebeat_1.2.3_amd64.deb
RUN curl -L -O https://download.elastic.co/beats/filebeat/${FILEBEAT_VERSION} \
 && dpkg -i ${FILEBEAT_VERSION} \
 && rm ${FILEBEAT_VERSION}


# configure Filebeat
ADD filebeat.yml /etc/filebeat/filebeat.yml


# CA cert
RUN mkdir -p /etc/pki/tls/certs
ADD logstash-beats.crt /etc/pki/tls/certs/logstash-beats.crt


# start Filebeat
ADD ./start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh
CMD [ ""/usr/local/bin/start.sh"" ]
","Shell
100.0%",2015-09-04 01:29:41,2017-12-04 08:57:22,https://github.com/garystafford/spring-music-docker
24,garystafford/spring-music-docker,,"# Apache Tomcat image with build artifact


FROM tomcat:8.5.4-jre8


MAINTAINER Gary A. Stafford <garystafford@rochester.rr.com>
ENV REFRESHED_AT 2016-09-17


ENV GITHUB_REPO https://github.com/garystafford/spring-music/raw/build-artifacts
ENV APP_FILE spring-music.war
ENV TERM xterm
ENV JAVA_OPTS -Djava.security.egd=file:/dev/./urandom


RUN apt-get update -qq \
  && apt-get install -qqy curl wget \
  && apt-get clean \
  \
  && touch /var/log/spring-music.log \
  && chmod 666 /var/log/spring-music.log \
  \
  && wget -q -O /usr/local/tomcat/webapps/ROOT.war ${GITHUB_REPO}/${APP_FILE} \
  && mv /usr/local/tomcat/webapps/ROOT /usr/local/tomcat/webapps/_ROOT


COPY tomcat-users.xml /usr/local/tomcat/conf/tomcat-users.xml


# install Filebeat
ENV FILEBEAT_VERSION=filebeat_1.2.3_amd64.deb
RUN curl -L -O https://download.elastic.co/beats/filebeat/${FILEBEAT_VERSION} \
 && dpkg -i ${FILEBEAT_VERSION} \
 && rm ${FILEBEAT_VERSION}


# configure Filebeat
ADD filebeat.yml /etc/filebeat/filebeat.yml


# CA cert
RUN mkdir -p /etc/pki/tls/certs
ADD logstash-beats.crt /etc/pki/tls/certs/logstash-beats.crt


# start Filebeat
ADD ./start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh
CMD [ ""/usr/local/bin/start.sh"" ]
","Shell
100.0%",2015-09-04 01:29:41,2017-12-04 08:57:22,https://github.com/garystafford/spring-music-docker
25,UKHomeOffice/docker-php-fpm,"Organization(name=None, id=3778081)","FROM quay.io/ukhomeofficedigital/centos-base


# Pass the php-fpm error log to stdout
RUN ln -sf /dev/stderr /var/log/php-fpm.log && \
    mkdir -p /var/log/php-fpm && \
    ln -sf /dev/stderr /var/log/php-fpm/www-error.log && \
    ln -sf /dev/stderr /var/log/php-fpm/error.log && \
    ln -sf /dev/stderr /var/log/php-fpm/www-slow.log && \


# Install PHP-FPM and libs
    yum install -y  \
      php-fpm \
      php-mbstring \
      php-mysql  \
      php-gd \
      php-xml \
      php-intl \
      php-apc \
      php-cli && \
    yum -y clean all && \
    sed -e 's/listen = 127.0.0.1:9000/listen = \/var\/run\/php-fpm\/php-fpm.socket/' -i /etc/php-fpm.d/www.conf


# Pass default CMD
CMD [""/usr/sbin/php-fpm"", ""--nodaemonize"", ""-d"", ""cgi.fix_pathinfo=0;""]
",,2015-09-10 11:35:58,2016-03-08 14:58:26,https://github.com/UKHomeOffice/docker-php-fpm
26,musghost/node-docker-application,,"# Set nginx base image
FROM nginx


# File Author / Maintainer
MAINTAINER Anand Mani Sankar


# Copy custom configuration file from the current directory
COPY nginx.conf /etc/nginx/nginx.conf
","JavaScript
53.8%





Nginx
46.2%",2015-08-31 06:44:27,2015-08-31 06:44:45,https://github.com/musghost/node-docker-application
27,musghost/node-docker-application,,"# Set the base image to Ubuntu
FROM    ubuntu


# File Author / Maintainer
MAINTAINER Anand Mani Sankar


# Install Node.js and other dependencies
RUN apt-get update && \
    apt-get -y install curl && \
    curl -sL https://deb.nodesource.com/setup | sudo bash - && \
    apt-get -y install python build-essential nodejs


# Install nodemon
RUN npm install -g nodemon


# Provides cached layer for node_modules
ADD package.json /tmp/package.json
RUN cd /tmp && npm install --save express redis
RUN mkdir -p /src && cp -a /tmp/node_modules /src/


# Define working directory
WORKDIR /src
ADD . /src


# Expose port
EXPOSE  8080


# Run app using nodemon
CMD [""nodemon"", ""/src/index.js""]
","JavaScript
53.8%





Nginx
46.2%",2015-08-31 06:44:27,2015-08-31 06:44:45,https://github.com/musghost/node-docker-application
28,futuresystems/ansible-role-nagios-client,"Organization(name=None, id=13457305)","

FROM phusion/baseimage:0.9.17


RUN apt-get update
RUN apt-get -y install python-dev python-pip httpie
RUN pip install jinja2 ansible


RUN mkdir -p /test/roles/nagios_client
ADD defaults /test/roles/nagios_client/defaults
ADD handlers /test/roles/nagios_client/handlers
ADD tasks /test/roles/nagios_client/tasks
ADD templates /test/roles/nagios_client/templates
ADD test /test/


WORKDIR /test
ENTRYPOINT ./run.sh
","Shell
100.0%",2015-08-31 16:17:10,2015-09-01 18:19:57,https://github.com/futuresystems/ansible-role-nagios-client
29,minimum-hsu/docker-owl-api,,"FROM minimum/openfalcon-golang


MAINTAINER minimum@cepave.com


ENV WORKDIR=$GOPATH/bin/ CONFIGFILE=cfg.json


# Install Packages
RUN \
  apt-get update && \
  apt-get install -y git gcc && \
  mkdir -p $GOPATH/src/github.com


# Build Owl API
RUN \
  git clone https://github.com/donh/open-falcon-api.git $GOPATH/src/github.com/owl-api && \
  cd $GOPATH/src/github.com/owl-api && \
  go get ./... && \
  go build .


WORKDIR $WORKDIR


#VOLUME $WORKDIR
COPY $CONFIGFILE ./


# Start
CMD [""./owl-api""]


",,2015-09-15 15:35:43,2015-09-15 15:35:43,https://github.com/minimum-hsu/docker-owl-api
0,mbutkereit/gulp-docker,,"FROM buildpack-deps:jessie


# verify gpg and sha256: http://nodejs.org/dist/v0.10.30/SHASUMS256.txt.asc
# gpg: aka ""Timothy J Fontaine (Work) <tj.fontaine@joyent.com>""
# gpg: aka ""Julien Gilli <jgilli@fastmail.fm>""
RUN set -ex \
        && for key in \
                7937DFD2AB06298B2293C3187D33FF9D0246406D \
                114F43EE0176B71C7BC219DD50A3051F888C628D \
        ; do \
                gpg --keyserver ha.pool.sks-keyservers.net --recv-keys ""$key""; \
        done


ENV NODE_VERSION 0.12.7
ENV NPM_VERSION 2.13.3
ENV GULP_VERSION 3.9.0
ENV BOWER_VERSION 1.5.2


RUN curl -SLO ""https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz"" \
        && curl -SLO ""https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"" \
        && gpg --verify SHASUMS256.txt.asc \
        && grep "" node-v$NODE_VERSION-linux-x64.tar.gz\$"" SHASUMS256.txt.asc | sha256sum -c - \
        && tar -xzf ""node-v$NODE_VERSION-linux-x64.tar.gz"" -C /usr/local --strip-components=1 \
        && rm ""node-v$NODE_VERSION-linux-x64.tar.gz"" SHASUMS256.txt.asc \
        && npm install -g npm@""$NPM_VERSION"" \
        && npm install -g gulp@""$GULP_VERSION"" \
        && npm install -g bower@""$BOWER_VERSION"" \
        && npm cache clear


CMD [ ""bash"" ]
",,2015-09-15 06:58:45,2016-06-02 17:13:07,https://github.com/mbutkereit/gulp-docker
1,mbutkereit/gulp-docker,,"FROM buildpack-deps:jessie-curl


# gpg keys listed at https://github.com/nodejs/node
RUN set -ex \
        && for key in \
                9554F04D7259F04124DE6B476D5A82AC7E37093B \
    		94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \
    		0034A06D9D9B0064CE8ADF6BF1747F4AD2306D93 \
    		FD3A5288F042B6850C66B31F09FE44734EB7990E \
    		71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \
    		DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
    		B9AE9905FFD7803F25714661B63B535A4C206CA9 \
    		C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
        ; do \
                gpg --keyserver ha.pool.sks-keyservers.net --recv-keys ""$key""; \
        done


ENV NODE_VERSION 6.2.0
ENV NPM_VERSION 3.9.5
ENV GULP_VERSION 3.9.1
ENV BOWER_VERSION 1.7.9


RUN buildDeps='xz-utils' \
    && set -x \
    && apt-get update && apt-get install -y $buildDeps --no-install-recommends \
    && rm -rf /var/lib/apt/lists/* \
    && curl -SLO ""https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz"" \
    && curl -SLO ""https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc"" \
    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
    && grep "" node-v$NODE_VERSION-linux-x64.tar.xz\$"" SHASUMS256.txt | sha256sum -c - \
    && tar -xJf ""node-v$NODE_VERSION-linux-x64.tar.xz"" -C /usr/local --strip-components=1 \
    && rm ""node-v$NODE_VERSION-linux-x64.tar.xz"" SHASUMS256.txt.asc SHASUMS256.txt \
    && apt-get purge -y --auto-remove $buildDeps \
    && npm install -g npm@""$NPM_VERSION"" \
    && npm install -g gulp@""$GULP_VERSION"" \
    && npm install -g bower@""$BOWER_VERSION"" \
    && npm cache clear


CMD [ ""bash"" ]
",,2015-09-15 06:58:45,2016-06-02 17:13:07,https://github.com/mbutkereit/gulp-docker
2,Agent-Isai/Plex,,"FROM flitter/init


RUN apt-get update && apt-get install -y build-essential libssl-dev git-core flex bison pkg-config


# make unprivileged user for Shaltúre to run in
RUN adduser --system --home /home/shalture shalture


ADD . /home/shalture/src


# Build Shaltúre
RUN chown -R shalture /home/shalture/src && cd \
    /home/shalture/src && \
    setuser shalture ./configure --enable-contrib --prefix /home/shalture/run &&\
    setuser shalture make && setuser shalture make install; true


# seed default configuration
ADD dist/shalture.conf.example /home/shalture/run/etc/shalture.conf
RUN chmod 666 /home/shalture/run/etc/*


# make runit service
RUN mkdir /etc/service/shalture && \
    echo ""setuser shalture /home/shalture/run/bin/shalture-services -n"" > /etc/service/shalture/run && \
    chmod a+x /etc/service/shalture/run


CMD /sbin/my_init
","C
82.9%





PHP
7.1%





Perl
4.9%





Perl 6
1.4%





Makefile
1.3%





Shell
1.1%





Other
1.3%",2015-10-11 22:20:30,2015-10-11 23:03:20,https://github.com/Agent-Isai/Plex
3,Rocla/Banana-editor-Online,,"#
# example Dockerfile for http://docs.docker.io/en/latest/examples/postgresql_service/
#


FROM ubuntu
MAINTAINER SvenDowideit@docker.com


# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc 
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8


# Add PostgreSQL's repository. It contains the most recent stable release
#     of PostgreSQL, ``9.3``.
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Update the Ubuntu and PostgreSQL repository indexes
RUN apt-get update


# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get -y -q install python-software-properties software-properties-common
RUN apt-get -y -q install postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3


# Note: The official Debian and Ubuntu images automatically ``apt-get clean``
# after each ``apt-get`` 


# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres


# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER docker WITH SUPERUSER PASSWORD 'docker';"" &&\
    createdb -O docker docker


# Adjust PostgreSQL configuration so that remote connections to the
# database are possible. 
RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf


# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


# Expose the PostgreSQL port
EXPOSE 5432


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME	[""/etc/postgresql"", ""/var/log/postgresql"", ""/var/lib/postgresql""]


# Set the default command to run when starting the container
CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/var/lib/postgresql/9.3/main"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","JavaScript
99.6%





HTML
0.2%





PHP
0.2%





LiveScript
0.0%





Makefile
0.0%





Objective-C
0.0%",2015-09-25 13:03:21,2016-08-29 14:52:49,https://github.com/Rocla/Banana-editor-Online
4,Rocla/Banana-editor-Online,,"#
# example Dockerfile for http://docs.docker.io/en/latest/examples/postgresql_service/
#


FROM ubuntu
MAINTAINER SvenDowideit@docker.com


# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc 
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8


# Add PostgreSQL's repository. It contains the most recent stable release
#     of PostgreSQL, ``9.3``.
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Update the Ubuntu and PostgreSQL repository indexes
RUN apt-get update


# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get -y -q install python-software-properties software-properties-common
RUN apt-get -y -q install postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3


# Note: The official Debian and Ubuntu images automatically ``apt-get clean``
# after each ``apt-get`` 


# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres


# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER docker WITH SUPERUSER PASSWORD 'docker';"" &&\
    createdb -O docker docker


# Adjust PostgreSQL configuration so that remote connections to the
# database are possible. 
RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf


# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


# Expose the PostgreSQL port
EXPOSE 5432


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME	[""/etc/postgresql"", ""/var/log/postgresql"", ""/var/lib/postgresql""]


# Set the default command to run when starting the container
CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/var/lib/postgresql/9.3/main"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","JavaScript
99.6%





HTML
0.2%





PHP
0.2%





LiveScript
0.0%





Makefile
0.0%





Objective-C
0.0%",2015-09-25 13:03:21,2016-08-29 14:52:49,https://github.com/Rocla/Banana-editor-Online
5,wkoszek/edu_docker,,"FROM ubuntu:14.04
MAINTAINER Wojciech A. Koszek <wojciech@koszek.com>
RUN apt-get update
RUN apt-get install -y nginx
RUN echo ""Hello"" > /usr/share/nginx/html/index.html
CMD [ ""nginx"" , ""-g"", ""daemon off;"" ]
EXPOSE 80
","Shell
100.0%",2015-09-29 07:16:57,2017-03-13 23:52:50,https://github.com/wkoszek/edu_docker
6,scaleway-community/scaleway-diaspora,"Organization(name=None, id=14197047)","## -*- docker-image-name: ""scaleway/ruby:latest"" -*-
FROM scaleway/ruby:latest
MAINTAINER Scaleway <opensource@scaleway.com> (@scaleway)


# Prepare rootfs for image-builder
RUN /usr/local/sbin/builder-enter


# Install packages
RUN apt-get -q update \
 && apt-get -y -q upgrade \
 && apt-get install -y -q \
	build-essential \
	git \
	curl \
	imagemagick \
	libmagickwand-dev \
	nodejs \
	redis-server \
	libcurl4-openssl-dev \
	libxml2-dev \
	libxslt-dev \
	libpq-dev \
	gawk \
	libreadline6-dev \
	libyaml-dev \
	libsqlite3-dev \
	sqlite3 \
	autoconf \
	libgdbm-dev \
	libncurses5-dev \
	automake \
	bison \
	libffi-dev \
	mysql-server \
	nginx \
	mailutils \
	libmysqlclient-dev \
	supervisor


# Create diaspora user
RUN adduser --disabled-password --shell /bin/bash --gecos 'diaspora' diaspora \
  && usermod -a -G rvm diaspora


# Install diaspora
RUN git clone -b master git://github.com/diaspora/diaspora.git /home/diaspora/diaspora \
 && cd /home/diaspora/diaspora \
 && cp config/database.yml.example config/database.yml \
 && cp config/diaspora.yml.example config/diaspora.yml


RUN chown -R diaspora:diaspora /home/diaspora/diaspora


ADD patches/home/diaspora/diaspora/config/ /home/diaspora/diaspora/config/


RUN su diaspora -c ""source /usr/local/rvm/scripts/rvm \
  && cd /home/diaspora/diaspora \
  && gem install bundler \
  && RAILS_ENV=production DB=mysql bundle install --without test development""


ADD ./patches/etc/ /etc/
ADD ./patches/usr/ /usr/


RUN ln -sf /etc/nginx/sites-available/diaspora /etc/nginx/sites-enabled/diaspora && \
    rm -f /etc/nginx/sites-enabled/default


RUN /etc/init.d/mysql start \
 && mysql -u root -e ""CREATE DATABASE IF NOT EXISTS diaspora_production DEFAULT CHARACTER SET utf8mb4 DEFAULT COLLATE utf8mb4_bin;"" \
 && su diaspora -c ""source /usr/local/rvm/scripts/rvm \
 && cd /home/diaspora/diaspora \
 && RAILS_ENV=production DB=mysql rake db:create db:schema:load \
 && RAILS_ENV=production DB=mysql bin/rake assets:precompile"" \
 && /etc/init.d/mysql stop


RUN /usr/local/sbin/builder-leave
","Shell
82.9%





Makefile
17.1%",2015-09-29 08:07:46,2015-09-29 11:28:46,https://github.com/scaleway-community/scaleway-diaspora
7,micahhausler/rabbit-herder,,"# Dockerfile for rabbit-herder
#
# To build:
# $ docker build -t micahhausler/rabbit-herder-builder -f Dockerfile.build .
# $ docker run --rm -v $(pwd):/usr/src/app micahhausler/rabbit-herder-builder
# $ docker build -t micahhausler/rabbit-herder .
#
# To run:
# $ docker run micahhausler/rabbit-herder


FROM busybox


MAINTAINER Micah Hausler, <micah.hausler@ambition.com>


COPY rabbit-herder /bin/rabbit-herder
RUN chmod 755 /bin/rabbit-herder


ENTRYPOINT [""/bin/rabbit-herder""]
","Go
95.8%





Makefile
4.2%",2015-10-08 00:33:59,2015-10-10 16:48:35,https://github.com/micahhausler/rabbit-herder
8,mike-neck/docker-images,,"FROM mikeneck/jdk8


RUN \
  groupadd -r dev && \
  useradd -m -g dev activator && \
  mkdir /home/activator/.activator && \
  mkdir /home/activator/.sbt/ && \
  mkdir /home/activator/.ivy2/ && \
  mkdir /home/activator/project


RUN \
  curl -L \
    https://downloads.typesafe.com/typesafe-activator/1.3.6/typesafe-activator-1.3.6.zip \
    -o activator.zip && \
  unzip -q activator.zip -d tmp && \
  mv tmp/activator-dist-1.3.6/ /home/activator/bin && \
  rm activator.zip


ENV PATH=$PATH:/home/activator/bin


VOLUME /home/activator/.activator
VOLUME /home/activator/.sbt
VOLUME /home/activator/.ivy2
VOLUME /home/activator/project


RUN \
  chown -R activator /home/activator/.activator && \
  chown -R activator /home/activator/.sbt && \
  chown -R activator /home/activator/.ivy2 && \
  chown -R activator /home/activator/project && \
  chown -R activator /home/activator/bin


USER activator
WORKDIR /home/activator


EXPOSE 8888
EXPOSE 9000


CMD [""/bin/bash""]
",,2015-10-06 01:39:32,2017-11-21 14:37:48,https://github.com/mike-neck/docker-images
9,mike-neck/docker-images,,"FROM mikeneck/jdk8


RUN \
  apt-get update && \
  apt-get install -y \
    pkg-config \
    g++ \
    zlib1g-dev && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/* && \
  groupadd -r build && \
  useradd -m -g build bazel


USER bazel
WORKDIR /home/bazel


RUN \
  curl -L \
    https://github.com/bazelbuild/bazel/releases/download/0.1.1/bazel-0.1.1-installer-linux-x86_64.sh \
    -o bazel-install.sh
RUN chmod 700 bazel-install.sh
RUN ./bazel-install.sh --user && \
  rm bazel-install.sh


ENV BAZEL_BIN=/home/bazel/bin
ENV PATH=$PATH:$BAZEL_BIN


CMD [""/bin/bash""]
",,2015-10-06 01:39:32,2017-11-21 14:37:48,https://github.com/mike-neck/docker-images
10,mike-neck/docker-images,,"FROM mikeneck/jdk8


RUN \
  groupadd -r repo && \
  useradd -m -g repo gitbucket && \
  mkdir /home/gitbucket/bin && \
  curl -L \
    https://github.com/gitbucket/gitbucket/releases/download/3.7/gitbucket.war \
    -o /home/gitbucket/bin/gitbucket.war && \
  mkdir /home/gitbucket/.gitbucket


VOLUME /home/gitbucket/.gitbucket


RUN \
  chown -R gitbucket /home/gitbucket && \
  chown gitbucket /home/gitbucket/.gitbucket && \
  chown gitbucket /home/gitbucket/bin/gitbucket.war


EXPOSE 8080
EXPOSE 29418


USER gitbucket
WORKDIR /home/gitbucket


ENTRYPOINT [""java"", ""-jar"", ""bin/gitbucket.war""]
",,2015-10-06 01:39:32,2017-11-21 14:37:48,https://github.com/mike-neck/docker-images
11,mike-neck/docker-images,,"FROM mikeneck/jdk8


MAINTAINER Shinya Mochida(mikeneck - twitter:@mike_neck)


RUN \
  groupadd -r build && \
  useradd -m -g build gradle


WORKDIR /home/gradle


RUN \
  curl -L https://services.gradle.org/distributions/gradle-2.9-all.zip -o gradle.zip


RUN \
  unzip -q gradle.zip -d tmp && \
  mkdir gradle && \
  mv tmp/gradle-2.9/bin gradle/ && \
  mv tmp/gradle-2.9/lib gradle/ && \
  mv tmp/gradle-2.9/init.d gradle/ && \
  rm -rf tmp && \
  rm gradle.zip && \
  mkdir /home/gradle/.gradle && \
  mkdir /home/gradle/project


VOLUME /home/gradle/.gradle
VOLUME /home/gradle/project


RUN \
  chown -R gradle /home/gradle/gradle && \
  chown gradle /home/gradle/.gradle && \
  chown gradle /home/gradle/project


USER gradle


ENV GRADLE_HOME /home/gradle/gradle
ENV PATH=$PATH:$GRADLE_HOME/bin


CMD [""/bin/bash""]
",,2015-10-06 01:39:32,2017-11-21 14:37:48,https://github.com/mike-neck/docker-images
12,mike-neck/docker-images,,"FROM ubuntu-debootstrap:15.10


RUN \
  apt-get update && \
  apt-get install -y software-properties-common && \
  echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections


RUN \
  add-apt-repository -y ppa:webupd8team/java && \
  apt-get update && \
  apt-get install -y \
    oracle-java8-installer \
    zip \
    curl \
    unzip && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/* && \
  rm -rf /var/cache/oracle-jdk8-installer


ENV JAVA_HOME /usr/lib/jvm/java-8-oracle


RUN \
  curl -LO http://www.startssl.com/certs/ca.crt && \
  curl -LO http://www.startssl.com/certs/sub.class1.server.ca.crt && \
  curl -LO http://www.startssl.com/certs/sub.class2.server.ca.crt && \
  curl -LO http://www.startssl.com/certs/sub.class3.server.ca.crt && \
  curl -LO http://www.startssl.com/certs/sub.class4.server.ca.crt


RUN \
  keytool -import -trustcacerts -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -noprompt -alias startcom.ca -file ca.crt && \
  keytool -import -trustcacerts -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -noprompt -alias startcom.ca.sub.class1 -file sub.class1.server.ca.crt && \
  keytool -import -trustcacerts -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -noprompt -alias startcom.ca.sub.class2 -file sub.class2.server.ca.crt && \
  keytool -import -trustcacerts -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -noprompt -alias startcom.ca.sub.class3 -file sub.class3.server.ca.crt && \
  keytool -import -trustcacerts -keystore $JAVA_HOME/jre/lib/security/cacerts -storepass changeit -noprompt -alias startcom.ca.sub.class4 -file sub.class4.server.ca.crt


RUN \
  rm -f ca.crt sub.class1.server.ca.crt sub.class2.server.ca.crt sub.class3.server.ca.crt sub.class4.server.ca.crt


CMD [""/bin/bash""]
",,2015-10-06 01:39:32,2017-11-21 14:37:48,https://github.com/mike-neck/docker-images
13,lotrfan/debian-verilator,,"FROM debian
MAINTAINER Jeffrey Tolar <tolar.jeffrey@gmail.com>


RUN apt-get update && apt-get install --yes build-essential flex bison  curl


RUN curl 'http://www.veripool.org/ftp/verilator-3.876.tgz' | tar -xz


RUN cd verilator-3.876 && ./configure --prefix=/usr && make && make install
",,2015-10-10 22:34:10,2015-10-10 22:34:10,https://github.com/lotrfan/debian-verilator
14,jonasjeeliasson/docker-java,,"FROM java:8u45-jre
EXPOSE 8080
VOLUME /data
ENTRYPOINT [""java"", ""-jar"", ""/data/app.jar""]
",,2015-09-25 14:17:58,2015-09-25 14:17:58,https://github.com/jonasjeeliasson/docker-java
15,chamunks/Docker-NeManager,,"#######################
## NeManager-Wrapper ##
#######################
FROM centos:7
MAINTAINER Chamunks <Chamunks@gmail.com>


RUN yum install java-1.8.0-openjdk.x86_64 gtk2.i686 wget -y && \
    wget -O /nema https://nemanager.s3.amazonaws.com/wrapper/lin/NeMa && \
    chmod +x /nema
VOLUME [""/backups"", ""/servers"", ""/jars""]


## Exposing a somewhat insane maximum of servers, assuming 32gB ram with 64 half
## gig servers.  This doesn't account for CPU bottlenecks or diskspace bottlenecks.
EXPOSE 25565-25629


## Wrapper Port
EXPOSE 20000


CMD [""/nema""]
","Shell
100.0%",2015-09-24 18:00:38,2015-09-25 20:24:13,https://github.com/chamunks/Docker-NeManager
16,unb-libraries/docker-tomcat,"Organization(name=None, id=371165)","FROM unblibraries/jdk:oracle8
MAINTAINER Jacob Sanford <jsanford_at_unb.ca>


ENV WAYBACK_HOST localhost


ENV JAVA_MAJOR_VERSION 8
ENV TOMCAT_VERSION 7.0.64
ENV TOMCAT_MAJOR_VERSION 7
ENV TOMCAT_NATIVE_VERSION 1.1.33
ENV APR_VERSION 1.5.2
ENV JAVA_OPTS=""-Djava.awt.headless=true -Xmx128M""


ENV TOMCAT_USER tomcat${TOMCAT_MAJOR_VERSION}
ENV APP_INSTALL_ROOT /var/opt
ENV CATALINA_HOME ${APP_INSTALL_ROOT}/apache-tomcat-${TOMCAT_VERSION}
ENV TOMCAT_BIN_PATH ${CATALINA_HOME}/bin
ENV TOMCAT_WEBAPPS_PATH ${CATALINA_HOME}/webapps
ENV JRE_HOME /usr/lib/jvm/java-${JAVA_MAJOR_VERSION}-oracle/jre


ENV APR_ARCHIVE_FILENAME apr-${APR_VERSION}.tar.gz  
ENV APR_DOWNLOAD_URL http://apache.sunsite.ualberta.ca/apr/${APR_ARCHIVE_FILENAME}
ENV TOMCAT_ARCHIVE_FILENAME apache-tomcat-${TOMCAT_VERSION}.tar.gz
ENV TOMCAT_DOWNLOAD_URL http://apache.mirror.gtcomm.net/tomcat/tomcat-${TOMCAT_MAJOR_VERSION}/v${TOMCAT_VERSION}/bin/${TOMCAT_ARCHIVE_FILENAME}


# Install required packages.
ENV DEBIAN_FRONTEND noninteractive
ENV DEBIAN_PRIORITY critical
ENV DEBCONF_NOWARNINGS yes
RUN apt-get update && \
  apt-get install -y git build-essential


# Setup install path.
RUN mkdir -p ${APP_INSTALL_ROOT}
WORKDIR ${APP_INSTALL_ROOT}


RUN wget ${APR_DOWNLOAD_URL} && tar xvzpf ${APR_ARCHIVE_FILENAME}
WORKDIR ${APP_INSTALL_ROOT}/apr-${APR_VERSION}
RUN ./configure && \
  make && \
  make test && \
  make install && \
  make clean


# Download Tomcat and extract.
WORKDIR ${APP_INSTALL_ROOT}
RUN wget ${TOMCAT_DOWNLOAD_URL} && tar xvzpf ${TOMCAT_ARCHIVE_FILENAME}


# Compile tomcat native libs and install, while disabling SSL.
WORKDIR ${TOMCAT_BIN_PATH}
RUN tar xvzpf tomcat-native.tar.gz
WORKDIR ${TOMCAT_BIN_PATH}/tomcat-native-${TOMCAT_NATIVE_VERSION}-src/jni/native
RUN ./configure --with-apr=/usr/local/apr --without-ssl --with-java-home=$JAVA_HOME
RUN make && \
  cp .libs/libtcnative-1.so /usr/lib && \
  make clean
RUN sed -i -e 's|Listener className=""org.apache.catalina.core.AprLifecycleListener"" SSLEngine=""on""|Listener className=""org.apache.catalina.core.AprLifecycleListener"" SSLEngine=""off""|g' ${CATALINA_HOME}/conf/server.xml


# Add phusion inits.
CMD [""/sbin/my_init""]
ADD services/ /etc/service/
RUN chmod -v +x /etc/service/*/run


# Add running user
RUN useradd -u 918 -U -s /bin/false ${TOMCAT_USER} && \
  usermod -G users ${TOMCAT_USER} && \
  chown -R ${TOMCAT_USER}:users ${APP_INSTALL_ROOT}


# Clean up.
RUN apt-get clean && \
  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


EXPOSE 8080
","Shell
100.0%",2015-09-17 15:32:22,2015-09-17 15:44:31,https://github.com/unb-libraries/docker-tomcat
17,tama-jp/mdEditor,,"#
# example Dockerfile for http://docs.docker.io/en/latest/examples/postgresql_service/
#


FROM ubuntu
MAINTAINER SvenDowideit@docker.com


# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc 
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8


# Add PostgreSQL's repository. It contains the most recent stable release
#     of PostgreSQL, ``9.3``.
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Update the Ubuntu and PostgreSQL repository indexes
RUN apt-get update


# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get -y -q install python-software-properties software-properties-common
RUN apt-get -y -q install postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3


# Note: The official Debian and Ubuntu images automatically ``apt-get clean``
# after each ``apt-get`` 


# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres


# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER docker WITH SUPERUSER PASSWORD 'docker';"" &&\
    createdb -O docker docker


# Adjust PostgreSQL configuration so that remote connections to the
# database are possible. 
RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf


# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


# Expose the PostgreSQL port
EXPOSE 5432


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME	[""/etc/postgresql"", ""/var/log/postgresql"", ""/var/lib/postgresql""]


# Set the default command to run when starting the container
CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/var/lib/postgresql/9.3/main"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","PHP
100.0%",2015-09-29 14:50:17,2016-01-30 14:56:16,https://github.com/tama-jp/mdEditor
18,slartibardfarst/SimpleNodeApp,,"FROM node:4.1.1


RUN mkdir -p /usr/src
WORKDIR /usr/src


COPY app /usr/src/app
COPY version_info /usr/src/version_info
RUN cd app; npm install


EXPOSE 3000
CMD [""node"", ""app/index.js""]
","JavaScript
100.0%",2015-09-26 02:09:52,2015-09-26 03:20:16,https://github.com/slartibardfarst/SimpleNodeApp
19,freemountain/php-dev,,"FROM debian:jessie


ENV RELEASE_DATE 2015-07-03
ENV DEBIAN_FRONTEND noninteractive
ENV APACHE_HTTPD ""exec /usr/sbin/apache2""
ENV TERM xterm
ENV APACHE_LOG_DIR ""/var/log/apache2/""


RUN apt-get -qq update
#RUN apt-get -y install
RUN apt-get -qq install \
    nano apache2 php5 ssmtp libapache2-mod-php5 php5-mysql php5-json php5-curl php5-gd \
    mysql-client mysql-server wget git\
    && \
  apt-get clean


RUN rm /etc/apache2/sites-enabled/000-default.conf
ADD 000-app.conf /etc/apache2/sites-available/000-app.conf
RUN ln -s /etc/apache2/sites-available/000-app.conf /etc/apache2/sites-enabled/000-app.conf
ADD 001-adminer.conf /etc/apache2/sites-available/001-adminer.conf
RUN ln -s /etc/apache2/sites-available/001-adminer.conf /etc/apache2/sites-enabled/001-adminer.conf
RUN a2enmod rewrite


#add start script
ADD ./start.sh /usr/local/bin/start.sh
RUN chmod +x /usr/local/bin/start.sh


#config mysql
RUN rm /etc/mysql/my.cnf
ADD my.cnf /etc/mysql/my.cnf


#create mysql user with DATABASE
ADD create_user.sql /create_user.sql
#RUN /usr/sbin/mysqld && mysql -u root < /create_user.sql


#install adminer
RUN mkdir /usr/share/adminer
RUN wget ""http://www.adminer.org/latest.php"" -O /usr/share/adminer/index.php
RUN echo ""Listen 88"" >> /etc/apache2/ports.conf


VOLUME [""/var/www"", ""/var/lib/mysql""]


EXPOSE 80
EXPOSE 88
EXPOSE 3306


CMD [""/usr/local/bin/start.sh""]
","Shell
100.0%",2015-09-21 16:59:05,2015-09-23 11:15:06,https://github.com/freemountain/php-dev
20,trueaccord/docker-images,"Organization(name=None, id=7609153)","FROM golang:1.5


RUN apt-get update && apt-get install -q -y libltdl-dev


RUN go get -u github.com/thesamet/cfssl/cmd/cfssl


RUN go get -u github.com/thesamet/cfssl/cmd/...


ENTRYPOINT [""cfssl""]


","Shell
100.0%",2015-09-20 23:45:28,2016-12-14 22:52:46,https://github.com/trueaccord/docker-images
21,trueaccord/docker-images,"Organization(name=None, id=7609153)","FROM python:2.7


RUN pip install awscli


RUN git clone https://github.com/colinbjohnson/aws-missing-tools.git /opt/aws-missing-tools


ENTRYPOINT [""/opt/aws-missing-tools/ec2-automate-backup/ec2-automate-backup.sh""]


","Shell
100.0%",2015-09-20 23:45:28,2016-12-14 22:52:46,https://github.com/trueaccord/docker-images
22,trueaccord/docker-images,"Organization(name=None, id=7609153)","FROM ubuntu:14.04


RUN apt-get update


RUN apt-get -y install curl


RUN curl -L https://toolbelt.treasuredata.com/sh/install-ubuntu-trusty-td-agent2.sh | sh


RUN apt-get install -y gcc make g++


RUN td-agent-gem install \
  gelf \
  fluent-plugin-bigquery \
  fluent-plugin-elasticsearch \
  fluent-plugin-forest \
  fluent-plugin-parser \
  fluent-plugin-s3 \
  fluent-plugin-secure-forward


RUN cd /etc/td-agent/plugin && \
    curl \
    https://raw.githubusercontent.com/emsearcy/fluent-plugin-gelf/master/lib/fluent/plugin/out_gelf.rb \
    -o out_gelf.rb


ENTRYPOINT [""td-agent""]


","Shell
100.0%",2015-09-20 23:45:28,2016-12-14 22:52:46,https://github.com/trueaccord/docker-images
23,trueaccord/docker-images,"Organization(name=None, id=7609153)","FROM ubuntu:15.10
MAINTAINER TrueAccord


RUN apt-get update && apt-get install -y unzip


ADD https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip ngrok.zip


RUN unzip ngrok.zip -d /bin && rm -f ngrok.zip && touch /.ngrok


","Shell
100.0%",2015-09-20 23:45:28,2016-12-14 22:52:46,https://github.com/trueaccord/docker-images
24,trueaccord/docker-images,"Organization(name=None, id=7609153)","FROM ubuntu


RUN apt-get update -y
RUN apt-get install -y proftpd


ENTRYPOINT [""proftpd"", ""--nodaemon""]


","Shell
100.0%",2015-09-20 23:45:28,2016-12-14 22:52:46,https://github.com/trueaccord/docker-images
25,javabilities/docker-zookeeper,,"FROM javabilities/docker-trusty
MAINTAINER Lloyd H. Meinholz <meinholz@gmail.com>


ENV DEBIAN_FRONTEND noninteractive
ENV ZOOKEEPER_VERSION 3.4.6


COPY download-zookeeper.sh /tmp/download-zookeeper.sh
RUN mkdir -p /app /data/zookeeper/logs && \
    /tmp/download-zookeeper.sh && \
    tar xf /tmp/zookeeper_${ZOOKEEPER_VERSION}.tgz -C /app && \
    mv /app/zookeeper-${ZOOKEEPER_VERSION} /app/zookeeper
COPY log4j.properties /app/zookeeper/conf/log4j.properties
COPY zoo.cfg /app/zookeeper/conf/zoo.cfg


RUN groupadd zookeeper && \
    useradd -d /app/zookeeper -g zookeeper -s /bin/false zookeeper && \
    chown -R zookeeper:zookeeper /app /data


EXPOSE 2181 2888 3888
VOLUME [""/app/zookeeper/conf"", ""/data/zookeeper""]


USER zookeeper
WORKDIR /app/zookeeper
ENTRYPOINT [""bin/zkServer.sh"", ""start-foreground""]
","Shell
100.0%",2015-09-10 18:26:00,2015-10-29 17:24:09,https://github.com/javabilities/docker-zookeeper
26,Nuordo/docker-php,"Organization(name=None, id=12166330)","FROM php:5.6.12-fpm


RUN apt-get update \
    && apt-get install -y git curl bzip2 vim libssl-dev zlib1g-dev postgresql libpq-dev libxrender1 libicu-dev g++ libjpeg-dev libjpeg62 libfontconfig-dev \
    && pecl install apcu-beta mongo \
    && echo extension=apcu.so > /usr/local/etc/php/conf.d/apcu.ini \
    && docker-php-ext-install zip mbstring intl pdo_mysql \
    && apt-get -y install php5-gd


ADD php.ini /usr/local/etc/php/php.ini


RUN curl -sS https://getcomposer.org/installer | php \
    && mv composer.phar /usr/bin/composer


WORKDIR /var/www/project
",,2015-09-12 18:05:41,2015-09-12 18:05:41,https://github.com/Nuordo/docker-php
27,sloiza/Taller2,,"FROM ubuntu:14.04


RUN DEBIAN_FRONTEND=noninteractive apt-get update  && \
    DEBIAN_FRONTEND=noninteractive apt-get -y install python-software-properties && \
    DEBIAN_FRONTEND=noninteractive apt-get -y install software-properties-common && \
    DEBIAN_FRONTEND=noninteractive add-apt-repository ppa:ubuntu-toolchain-r/test && \
    DEBIAN_FRONTEND=noninteractive add-apt-repository ppa:george-edison55/cmake-3.x && \
    DEBIAN_FRONTEND=noninteractive add-apt-repository ppa:fkrull/deadsnakes && \
    DEBIAN_FRONTEND=noninteractive apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y -qq wget g++ gcc-4.9 g++-4.9 libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev libgtest-dev cmake unzip python2.7 lcov python-pip && \
    DEBIAN_FRONTEND=noninteractive pip install coveralls && \
	DEBIAN_FRONTEND=noninteractive update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 50 && \
	DEBIAN_FRONTEND=noninteractive apt-get autoclean && \
	DEBIAN_FRONTEND=noninteractive apt-get autoremove 


RUN ls && wget https://github.com/sloiza/Taller2/archive/master.zip && ls && unzip master.zip && ls && \
	cd Taller2-master && chmod +x servidor/install_dependencies.sh  && ./servidor/install_dependencies.sh && cd
","C++
74.2%





Java
23.7%





Other
2.1%",2015-08-31 22:43:20,2015-11-20 02:37:42,https://github.com/sloiza/Taller2
28,experimental-platform/test-integration-dockerfile,"Organization(name=None, id=13465789)","FROM experimentalplatform/test-integration-baseimage:latest


ADD run_tests.sh /run_tests.sh
ADD Dockerfile-nginx /Dockerfile-nginx
ADD index.html /index.html
RUN chmod 755 /run_tests.sh


RUN mkdir -p /.ssh && ssh-keygen -C ""autogenerated $(date)"" -V ""+2h"" -N """" -f /.ssh/id_rsa
RUN cp -a /.ssh /root/


CMD [ ""/bin/bash"" ]
","Shell
88.3%





HTML
11.7%",2015-08-17 09:46:12,2015-08-17 09:57:29,https://github.com/experimental-platform/test-integration-dockerfile
29,bwidtmann/mercurius,,"FROM node:0.10-onbuild


EXPOSE 8080
","JavaScript
100.0%",2015-08-18 07:52:55,2015-08-18 07:58:51,https://github.com/bwidtmann/mercurius
0,progrium/docker-defunct,,"FROM alpine
ENTRYPOINT [""/bin/sh"", ""-c"", ""echo -e $MESSAGE; exit 1""]
",,2015-08-18 17:03:50,2015-08-18 17:03:50,https://github.com/progrium/docker-defunct
1,progrium/docker-defunct,,"FROM progrium/defunct
ENV MESSAGE ""!! Registrator has moved. Please use gliderlabs/registrator.\n!! More info: http://gliderlabs.com/registrator""
",,2015-08-18 17:03:50,2015-08-18 17:03:50,https://github.com/progrium/docker-defunct
2,jeurboy/docker-phpmongodb,,"FROM yoshz/apache-php:5.5


MAINTAINER jeurboy jeurboy@gmail.com


ENV MONGO_ADMIN_USERNAME        admin
ENV MONGO_ADMIN_PASSWORD        password


ENV MONGO_SERVER        localhost
ENV MONGO_PORT          27017
ENV MONGO_USERNAME      admin
ENV MONGO_PASSWORD      password


RUN git clone https://github.com/phpmongodb/phpmongodb.git && \
	rm /var/www/html/*  


RUN cp -rp  phpmongodb/* /var/www/html/ 


ADD sources/service_start /
RUN chmod +x /service_start


EXPOSE 80


CMD /service_start
","Shell
100.0%",2015-09-08 03:30:54,2015-09-08 03:50:07,https://github.com/jeurboy/docker-phpmongodb
3,satifanie/anyconnect,,"# shadowsocks
#
# VERSION 0.0.3


FROM ubuntu:14.04.3
MAINTAINER Lei Duan <satifanie@gmail.com>


RUN apt-get update && \
    apt-get  -y upgrade \




","Shell
97.5%





Python
2.5%",2015-09-07 11:31:03,2016-07-01 17:37:28,https://github.com/satifanie/anyconnect
4,satifanie/anyconnect,,"FROM ubuntu:trusty
MAINTAINER Wyatt Pan <wppurking@gmail.com>


RUN apt-get update
RUN apt-get install build-essential libwrap0-dev libpam0g-dev libdbus-1-dev libreadline-dev libnl-route-3-dev  libpcl1-dev libopts25-dev autogen libgnutls28 libgnutls28-dev libseccomp-dev iptables wget gnutls-bin libprotobuf-c0-dev protobuf-c-compiler libprotobuf-dev protobuf-compiler libprotoc-dev libtalloc-dev libhttp-parser-dev -y


RUN cd /root && wget http://www.infradead.org/ocserv/download.html && export ocserv_version=$(cat download.html | grep -o '[0-9]*\.[0-9]*\.[0-9]*') \
	&& wget ftp://ftp.infradead.org/pub/ocserv/ocserv-0.10.8.tar.xz && tar xvf ocserv-0.10.8.tar.xz \
	&& cd ocserv-$ocserv_version && ./configure --prefix=/usr --sysconfdir=/etc --with-local-talloc && make && make install \
	&& rm -rf /root/download.html && rm -rf ocserv-*


ADD ./certs /opt/certs
RUN certtool --generate-privkey --outfile /opt/certs/ca-key.pem && certtool --generate-self-signed --load-privkey /opt/certs/ca-key.pem --template /opt/certs/ca-tmp --outfile /opt/certs/ca-cert.pem && certtool --generate-privkey --outfile /opt/certs/server-key.pem && certtool --generate-certificate --load-privkey /opt/certs/server-key.pem --load-ca-certificate /opt/certs/ca-cert.pem --load-ca-privkey /opt/certs/ca-key.pem --template /opt/certs/serv-tmp --outfile /opt/certs/server-cert.pem


ADD ./bin /usr/local/bin
RUN chmod a+x /usr/local/bin/*


WORKDIR /etc/ocserv
CMD [""vpn_run""]
","Shell
97.5%





Python
2.5%",2015-09-07 11:31:03,2016-07-01 17:37:28,https://github.com/satifanie/anyconnect
5,squaremo/micro-wiki,,"FROM node
WORKDIR /home/micro-wiki
ADD *.js package.json ./
#COPY node_modules ./node_modules/
ENTRYPOINT [""node"", ""./load.js""]
","JavaScript
60.9%





Shell
35.6%





Makefile
3.5%",2015-09-07 15:45:34,2016-02-03 12:43:12,https://github.com/squaremo/micro-wiki
6,squaremo/micro-wiki,,"FROM node
WORKDIR /home/micro-wiki
ENV HTTP_PORT 80
ENV PROM_PORT 9090
ENTRYPOINT [""node"", ""./server.js""]
COPY node_modules ./node_modules/
COPY *.js package.json ./
","JavaScript
60.9%





Shell
35.6%





Makefile
3.5%",2015-09-07 15:45:34,2016-02-03 12:43:12,https://github.com/squaremo/micro-wiki
7,squaremo/micro-wiki,,"FROM node
WORKDIR /home/micro-wiki
ADD ./package.json ./*.js /home/micro-wiki/
COPY node_modules ./node_modules/
ENV HTTP_PORT 80
ENV PROM_PORT 9090
ENTRYPOINT [""node"", ""./preso.js""]
","JavaScript
60.9%





Shell
35.6%





Makefile
3.5%",2015-09-07 15:45:34,2016-02-03 12:43:12,https://github.com/squaremo/micro-wiki
8,madssor/dockertest,,"FROM java:8
VOLUME /tmp
ADD demo-0.1.0.jar app.jar
RUN bash -c 'touch /app.jar'
ENTRYPOINT [""java"",""-Djava.security.egd=file:/dev/./urandom"",""-jar"",""/app.jar""]
","Java
100.0%",2015-09-08 08:09:42,2015-09-08 08:20:46,https://github.com/madssor/dockertest
9,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


FROM secure:mozsecure:centos6:sha256 88cc1475bd58f6ff6f41d50b813c9998c4d3a7167a8a45f8bd0b4a8342dec0db:https://s3-us-west-2.amazonaws.com/moz-packages/docker-images/centos-6-20150615_2019-docker.tar.xz


RUN yum update -y && yum install -y gcc libyaml-devel python-devel rsync && yum clean all
RUN curl https://bootstrap.pypa.io/get-pip.py | python
# peep does not yet work with pip 7. Also, setuptools had a few releases
# where they broke imp module importing. Pin to old, known working,
# versions.
RUN pip install -U pip==6.0.8 setuptools==15.2
RUN pip install ansible
RUN mkdir /etc/ansible && echo -e '[local]\nlocalhost\n' > /etc/ansible/hosts
RUN mkdir /vct
ADD sync-and-build /sync-and-build
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
10,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


FROM secure:mozsecure:ubuntu14042:sha256 e08475e91c8b342dce147346a11db16357619ed914aaad4d82be2e6ab743a167:https://s3-us-west-2.amazonaws.com/moz-packages/docker-images/ubuntu-trusty-core-cloudimg-amd64-docker-20150630.tar.xz


RUN apt-get update && apt-get install -y curl gcc libyaml-dev python-dev rsync && apt-get clean
RUN curl https://bootstrap.pypa.io/get-pip.py | python2.7
RUN pip install ansible
RUN ln -s /usr/local/bin/ansible /usr/bin/ansible && ln -s /usr/local/bin/ansible-playbook /usr/bin/ansible-playbook
RUN mkdir /etc/ansible && /bin/echo -e '[local]\nlocalhost\n' > /etc/ansible/hosts
RUN mkdir /vct
ADD sync-and-build /sync-and-build
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
11,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


# This is a Docker container for running an autoland instance


FROM secure:mozsecure:ubuntu14042:sha256 e08475e91c8b342dce147346a11db16357619ed914aaad4d82be2e6ab743a167:https://s3-us-west-2.amazonaws.com/moz-packages/docker-images/ubuntu-trusty-core-cloudimg-amd64-docker-20150630.tar.xz


ENV VCT_HOME /home/ubuntu/version-control-tools
ENV AUTOLAND_HOME /home/ubuntu/version-control-tools/autoland


RUN /usr/sbin/groupadd -g 1000 ubuntu
RUN /usr/sbin/useradd --no-create-home -u 1000 -g 1000 ubuntu


RUN apt-get update && apt-get --no-install-recommends -y install \
  apache2 curl gcc libapache2-mod-wsgi openssh-client postgresql-client \
  python2.7-dev python-pip libffi6 libffi-dev libpq-dev ca-certificates


# Python
# %include autoland/requirements.txt
ADD extra/vct/autoland/requirements.txt ${AUTOLAND_HOME}/requirements.txt


# TODO: We should install pip this way rather than through the python-pip
#       package, but this has failed consistently for a week.
#RUN curl -SL 'https://bootstrap.pypa.io/get-pip.py' | python2
RUN pip install virtualenv
RUN virtualenv ${AUTOLAND_HOME}/venv
RUN ${AUTOLAND_HOME}/venv/bin/pip install -r ${AUTOLAND_HOME}/requirements.txt


# Apache
RUN a2enmod headers
RUN rm /etc/apache2/sites-enabled/*
ADD autoland.conf /etc/apache2/sites-enabled/autoland.conf
EXPOSE 80


# Hg
RUN pip install mercurial==3.4.2
RUN cd /home/ubuntu && hg clone -r 4140d680784e https://bitbucket.org/marmoute/mutable-history
RUN mkdir /repos && hg init /repos/try
ADD try-hgrc /repos/try/.hg/hgrc
ADD try_hook.sh /


# SSH
ADD ssh_config /root/.ssh/config
ADD autoland_id_rsa /root/.ssh/id_rsa
ADD autoland_id_rsa.pub /root/.ssh/id_rsa.pub
RUN chmod 600 -R /root/.ssh


#
ADD config.json ${AUTOLAND_HOME}/autoland/config.json
ADD clone-repo /clone-repo
ADD start-autoland.sh /start-autoland.sh
CMD [""/start-autoland.sh""]


# %include autoland/autoland/
# %include hgext/bootstrap.py
# %include hgext/reviewboard
# %include pylib/mozautomation
# %include pylib/mozhg
# %include run-tests
ADD extra/vct/autoland/autoland ${AUTOLAND_HOME}/autoland
ADD extra/vct/run-tests ${VCT_HOME}/run-tests
ADD extra/vct/hgext/bootstrap.py ${VCT_HOME}/hgext/bootstrap.py
ADD extra/vct/hgext/reviewboard ${VCT_HOME}/hgext/reviewboard
ADD extra/vct/pylib/mozautomation ${VCT_HOME}/pylib/mozautomation
ADD extra/vct/pylib/mozhg ${VCT_HOME}/pylib/mozhg
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
12,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


# This is a docker container for running a postgres server suitable for
# powering a autoland instance.


FROM postgres:9.4.3


# override this variable to store data inside the container rather than on a
# mounted volume.
ENV PGDATA /postgresql-data
RUN mkdir $PGDATA


# %include autoland/sql/schema.sql
ADD extra/vct/autoland/sql/schema.sql /docker-entrypoint-initdb.d/schema.sql
ADD createdb.sh /docker-entrypoint-initdb.d/createdb.sh
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
13,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


# The container is similar to bmodb, but it stores its data in the local
# image, not in a volume. This is necessary to work around a bug in
# volume garbage collection in Docker where the old volumes don't get
# deleted on container deletion.


FROM mysql:5.6.20


RUN mkdir /var/lib/mysql-local


ADD my.cnf /etc/mysql/my.cnf


ADD entrypoint.sh /entrypoint.sh


CMD [""mysqld"", ""--datadir=/var/lib/mysql-local"", ""--user=mysql""]
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
14,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


# This is a docker container for running a MySQL server suitable for
# powering a bugzilla.mozilla.org (BMO) instance. The container is
# pretty basic. It simply applies a custom MySQL configuration on top
# of the Docker-provided standard MySQL container.


FROM mysql:5.6.20


ADD my.cnf /etc/mysql/my.cnf
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
15,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


# This is a Docker container for running an HTTP server that behaves
# like https://bugzilla.mozilla.org/.
#
# Building
# ========
#
# The container can be built by running:
#
#   docker build .
#
# You'll likely want to tag the image for easy reuse:
#
#   docker build -t bmoweb .
#
# The container takes a long time to build. The two long poles are
# installing the numerous required system packages and CPAN packages
# required by Bugzilla. Run time can balloon significantly if you are on
# a slow internet connection. Build times of 10 minutes on modern
# machines are expected.
#
# Running
# =======
#
# The container requires a link to a container running a MySQL database
# linked to this container with the name ""bmodb"". That container should
# be exposing MySQL on port 3306.
#
# Assuming a MySQL server is running in the ""bmodb"" container and you
# wish to expose the HTTP server on port 80 of the current machine,
# start a container by running:
#
#   docker run -d --link bmodb:bmodb -p 80:80 bmoweb
#
# This first time you do this, you may wish to run interactively to
# verify everything is working:
#
#   docker run -it --link bmodb:bmodb bmoweb
#
# You should then be able to open http://localhost:80/ and log into
# Bugzilla using the admin credentials. The default username and
# password is: admin@example.com / password
#
# Bugzilla needs to construct absolute URLs that refer to the running
# instance. By default, we assume that URL is http://localhost:80/.
# If you are applying port mapping or are exposing Bugzilla on a
# different network interface, you'll need to specify the BMO_URL
# environment variable when starting the container so Bugzilla
# constructs proper URLs.
#
# If you want an interactive shell in the container, provide a command
# to use to override the container's default (which runs Apache):
#
#   docker run -it --link bmodb:bmodb bmoweb /bin/bash
#
# When running the container, the following environment variables can be
# set to influence behavior:
#
#   DB_USER
#     The username to use when connecting to MySQL.
#   DB_PASS
#     The password to use when connecting to MySQL.
#   DB_NAME
#     The database to store Bugzilla data in.
#   DB_TIMEOUT
#     How long to wait for the database server to become available.
#   ADMIN_EMAIL
#     The email address to use for the admin account.
#   ADMIN_PASSWORD
#     The password to use for the admin account.
#   BMO_URL
#     The URL that Bugzilla will be exposed as. Bugzilla needs to
#     dynamically construct URLs during HTTP response generation. The
#     value of this environment variable will form the prefix for all
#     URLs.
#   RESET_DATABASE
#     If set, the MySQL database will be dropped when the container starts.
#     Typically, the bmodb container will have persistent data and
#     restarts of this bmoweb container will inherit database data from
#     the last run.
#
# The defaults are set to work with the bmodb builder from the builder-bmodb
# sibling directory.
#
# For example:
#
#   docker run --link bmodb:bmodb -e RESET_DATABASE=1 bmoweb
#
# Known Issues
# ============
#
# Our base image is Ubuntu. We should be using CentOS or Fedora for maximum
# compatibility with Mozilla's actual deployment.
#
# We hard-code use of MySQL. Bugzilla supports other database engines.
#
# The Git clone is never updated after container build. Fixing this
# requires dealing with the Bugzilla patching more elegantly.
#
# There is no control over which Git commit to use.
#
# We blow away the Bugzilla data directory during container start.


FROM secure:mozsecure:ubuntu14042:sha256 e08475e91c8b342dce147346a11db16357619ed914aaad4d82be2e6ab743a167:https://s3-us-west-2.amazonaws.com/moz-packages/docker-images/ubuntu-trusty-core-cloudimg-amd64-docker-20150630.tar.xz


ADD CLOBBER /CLOBBER


ENV BUGZILLA_HOME /var/lib/bugzilla
ENV DB_USER root
ENV DB_PASS password
ENV DB_NAME bugs
ENV ADMIN_EMAIL admin@example.com
ENV ADMIN_PASSWORD password
ENV BMO_URL http://localhost:80/


RUN /usr/sbin/groupadd -g 1000 bugzilla
RUN /usr/sbin/useradd --no-create-home -u 1000 -g 1000 bugzilla


RUN apt-get update && apt-get --no-install-recommends -y install \
  apache2 build-essential cpanminus cvs g++ git graphviz \
  libapache2-mod-perl2 \
  libdaemon-generic-perl libfile-slurp-perl \
  libgd-dev libssl-dev \
  mysql-client patchutils perlmagick pkg-config python3-mysql.connector \
  python-psutil supervisor unzip wget


# ElasticSearch isn't available on CPAN. Patch Bugzilla to not install
# it.
#
# This needs to be before we fetch Git source code so that patch changes
# needed to apply against upstream result in fresh clone.
ADD elasticsearch.patch $BUGZILLA_HOME/elasticsearch.patch


RUN git clone https://git.mozilla.org/webtools/bmo/bugzilla.git $BUGZILLA_HOME/bugzilla


RUN cd $BUGZILLA_HOME/bugzilla && /usr/bin/patch -p1 < $BUGZILLA_HOME/elasticsearch.patch


# cpanm has problems with some packages. Install them from the OS.
RUN apt-get -y install \
  libsoap-lite-perl \
  libmath-bigint-gmp-perl \
  libmath-mpfr-perl \
  libmath-prime-util-gmp-perl


RUN cd $BUGZILLA_HOME/bugzilla && ./checksetup.pl --cpanfile


# Linux::Pid is a dependency for Apache::SizeLimit that for whatever
# reason isn't detected by CPAN.
# XPLRPC::Transport::HTTP is needed by xmlrpc.cgi. For whatever reason,
# this dependency isn't installed.
RUN cd $BUGZILLA_HOME/bugzilla && cpanm Linux::Pid XMLRPC::Transport::HTTP
RUN cd $BUGZILLA_HOME/bugzilla && cpanm \
  --installdeps \
  --with-recommends \
  --with-all-features \
  --without-feature oracle --without-feature sqlite \
  --without-feature pg \
  --notest \
  .


ADD checksetup_answers.txt $BUGZILLA_HOME/checksetup_answers.txt


# The .htaccess isn't compatible with Apache 2.4. We fix that.
ADD apache24.patch $BUGZILLA_HOME/apache24.patch


# Configure Apache
RUN rm /etc/apache2/sites-enabled/*
RUN /usr/sbin/a2dismod mpm_event && /usr/sbin/a2enmod mpm_prefork
RUN /usr/sbin/a2enmod expires
RUN /usr/sbin/a2enmod headers
RUN /usr/sbin/a2enmod rewrite


ADD bmodata.patch $BUGZILLA_HOME/bmodata.patch


# Default memory limit is too small. Bump it up otherwise processes get killed
# after serving requests.
ADD mod_perl.patch $BUGZILLA_HOME/mod_perl.patch


ADD bugzilla.conf /etc/apache2/sites-enabled/25-bugzilla.conf
ADD prefork.conf /etc/apache2/mods-available/mpm_prefork.conf


ADD set-urls /set-urls
ADD entrypoint.py /bmoweb_entrypoint.py
ADD run-apache.sh /run-apache.sh


ADD supervisord.conf /etc/supervisor/conf.d/docker.conf


EXPOSE 80


ENTRYPOINT [""/bmoweb_entrypoint.py""]
CMD [""/usr/bin/supervisord""]
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
16,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


# This is a Docker container for building Mercurial RPMs.


FROM secure:mozsecure:ubuntu14042:sha256 e08475e91c8b342dce147346a11db16357619ed914aaad4d82be2e6ab743a167:https://s3-us-west-2.amazonaws.com/moz-packages/docker-images/ubuntu-trusty-core-cloudimg-amd64-docker-20150630.tar.xz


RUN yum install -y createrepo gcc gettext make mercurial python-devel python-docutils rpm-build tar


RUN hg clone http://selenic.com/repo/hg /hg
RUN mkdir /hg-packages


ENV HG_VERSIONS 3.2.3 3.2.4 3.3.2


ADD entrypoint.sh /entrypoint.sh
ADD rpmserver.py /rpmserver.py


ENTRYPOINT [""/entrypoint.sh""]
EXPOSE 80
CMD [""/usr/bin/python"", ""/rpmserver.py""]
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
17,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


# Builds a Python chroot suitable for hgweb.


FROM secure:mozsecure:centos6:sha256 88cc1475bd58f6ff6f41d50b813c9998c4d3a7167a8a45f8bd0b4a8342dec0db:https://s3-us-west-2.amazonaws.com/moz-packages/docker-images/centos-6-20150615_2019-docker.tar.xz


# Install build dependencies.
RUN yum install -y bzip2-devel gcc libcgroup-devel make openssl-devel rsync tar wget zlib-devel


# Download and verify Python source code.
RUN wget https://www.python.org/ftp/python/2.7.10/Python-2.7.10.tgz
ADD Python-2.7.10.tgz.asc /Python-2.7.10.tgz.asc
ADD signer.gpg /signer.gpg
RUN gpg --import /signer.gpg
RUN gpg --verify /Python-2.7.10.tgz.asc


# Compile and install Python into a directory that will become the
# chroot.
RUN tar -xzf /Python-2.7.10.tgz
RUN cd /Python-2.7.10 && ./configure --prefix=/usr && make -j4 && make install DESTDIR=/python


# Install pip
RUN /python/usr/bin/python -m ensurepip


# Copy library dependencies.
RUN mkdir -p /python/lib64 /python/usr/lib64
RUN cp \
       /lib64/ld-linux-x86-64.so.2 \
       /lib64/libbz2.so.1 \
       /lib64/libc.so.6 \
       /lib64/libcom_err.so.2 \
       /lib64/libdl.so.2 \
       /lib64/libgssapi_krb5.so.2 \
       /lib64/libk5crypto.so.3 \
       /lib64/libkeyutils.so.1 \
       /lib64/libkrb5.so.3 \
       /lib64/libkrb5support.so.0 \
       /lib64/libm.so.6 \
       /lib64/libpthread.so.0 \
       /lib64/libresolv.so.2 \
       /lib64/libselinux.so.1 \
       /lib64/libutil.so.1 \
       /lib64/libz.so.1 \
       /python/lib64/
RUN cp /usr/lib64/libssl.so.10 \
       /usr/lib64/libcrypto.so.10 \
       /python/usr/lib64/


# Install peep
# %include ansible/files/peep.py
ADD extra/vct/ansible/files/peep.py /python/usr/bin/peep.py


# Install packages in virtualenv.
ADD requirements.txt /requirements.txt
RUN /python/usr/bin/python /python/usr/bin/peep.py install -r /requirements.txt


# Add additional support files and paths.
ADD hgrc /python/etc/mercurial/hgrc
RUN mkdir /python/repo_local
RUN ln -s /repo/hg /python/repo_local/mozilla


# Compile our executor program.
ADD mozbuild-eval.c /mozbuild-eval.c
RUN gcc -Wall -Wextra -Werror -o /mozbuild-eval -lcgroup /mozbuild-eval.c


ADD bootstrap /bootstrap
CMD [""/bootstrap""]
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
18,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


# This is a Docker container for running a Mozilla flavored LDAP server.


FROM secure:mozsecure:ubuntu14042:sha256 e08475e91c8b342dce147346a11db16357619ed914aaad4d82be2e6ab743a167:https://s3-us-west-2.amazonaws.com/moz-packages/docker-images/ubuntu-trusty-core-cloudimg-amd64-docker-20150630.tar.xz


RUN apt-get update && apt-get --no-install-recommends -y install slapd


RUN rm -rf /etc/ldap/slapd.d


ADD ldap.conf /etc/ldap/ldap.conf
ADD slapd.conf /etc/ldap/slapd.conf
ADD ssh_lpk.schema /etc/ldap/schema/ssh_lpk.schema
ADD mozilla.schema /etc/ldap/schema/mozilla.schema
RUN chown -R openldap:openldap /etc/ldap


# Seed the data.
RUN mkdir /var/slapd
RUN chown openldap:openldap /var/slapd
ADD mozilla.ldif /mozilla.ldif
RUN chown openldap:openldap /mozilla.ldif
RUN sudo -u openldap /usr/sbin/slapadd -v -f /etc/ldap/slapd.conf -l /mozilla.ldif


ADD entrypoint.sh /entrypoint.sh


EXPOSE 389


ENTRYPOINT [""/entrypoint.sh""]
CMD [""/usr/sbin/slapd"", ""-h"", ""ldap:///"", ""-g"", ""openldap"", ""-u"", ""openldap"", ""-f"", ""/etc/ldap/slapd.conf"", ""-d"", ""256""]
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
19,Nephyrin/bzexport,,"FROM secure:mozsecure:ubuntu14042:sha256 e08475e91c8b342dce147346a11db16357619ed914aaad4d82be2e6ab743a167:https://s3-us-west-2.amazonaws.com/moz-packages/docker-images/ubuntu-trusty-core-cloudimg-amd64-docker-20150630.tar.xz


ENV RABBITMQ_CONFIG_FILE /etc/rabbitmq/rabbitmq


RUN apt-get update && apt-get --no-install-recommends -y install rabbitmq-server


ADD rabbitmq.config /etc/rabbitmq/rabbitmq.config
RUN chmod 644 /etc/rabbitmq/rabbitmq.config


RUN rabbitmq-plugins enable rabbitmq_management


EXPOSE 5672
EXPOSE 15672


CMD [""/usr/sbin/rabbitmq-server""]
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
20,Nephyrin/bzexport,,"# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.


# This container holds a copy of all vct data.


FROM secure:mozsecure:ubuntu14042:sha256 e08475e91c8b342dce147346a11db16357619ed914aaad4d82be2e6ab743a167:https://s3-us-west-2.amazonaws.com/moz-packages/docker-images/ubuntu-trusty-core-cloudimg-amd64-docker-20150630.tar.xz


RUN apt-get update && apt-get install -y rsync


VOLUME /vct-mount
ADD run.sh /run.sh


CMD [""/run.sh""]
","Python
80.4%





Perl
12.1%





JavaScript
2.6%





Perl 6
1.9%





Shell
1.0%





CSS
0.6%





Other
1.4%",2015-09-11 20:55:42,2015-09-11 21:22:06,https://github.com/Nephyrin/bzexport
21,mr-deer/tickets-node,"Organization(name=None, id=15249661)","FROM node


RUN npm install nodemon -g


WORKDIR /src


ADD . /src


RUN npm install


EXPOSE 3000


CMD nodemon -L index.js
","JavaScript
100.0%",2015-09-26 07:08:47,2015-10-25 15:56:41,https://github.com/mr-deer/tickets-node
22,opendata-stuttgart/feinstaub-data-evaluation-client-python,"Organization(name=None, id=11635590)","FROM python:3.5-slim


USER root
RUN pip3 install --upgrade pip


ADD . /opt/code
WORKDIR /opt/code


RUN pip3 install -r /opt/code/requirements.txt


CMD bash start.sh
","Python
98.8%





Shell
1.2%",2015-09-23 15:16:03,2015-10-04 20:34:31,https://github.com/opendata-stuttgart/feinstaub-data-evaluation-client-python
23,markTward/planets,,"FROM ubuntu
",,2015-09-25 00:11:40,2015-09-25 00:11:40,https://github.com/markTward/planets
24,suzuki-shunsuke/ges-web-sdk,,"FROM debian:8.2
",,2015-09-25 01:16:25,2015-09-25 01:16:25,https://github.com/suzuki-shunsuke/ges-web-sdk
25,ngocbinh123/mean,,"FROM ubuntu:latest
MAINTAINER nnbinh0301@gmail.com


#install redis
RUN apt-get update
RUN apt-get install -y nodejs nodejs-legacy
RUN apt-get install npm
RUN sudo npm -g install daemon
RUN sudo npm -g install forever
RUN apt-get clean
#RUN sudo npm install -g mean-cli
RUN sudo npm -g install sails
COPY . src/
RUN cd src && npm init &&  npm install


","JavaScript
98.7%





Other
1.3%",2015-10-03 02:44:10,2015-10-03 02:46:49,https://github.com/ngocbinh123/mean
26,Seldszar/strapi-generate-new,,"FROM ubuntu


MAINTAINER Wistity team <hack@wistity.co>


RUN apt-get update
RUN apt-get install -y build-essential libssl-dev git curl
RUN git clone https://github.com/creationix/nvm.git


ENV NODE_VERSION v0.12.6


RUN echo 'source /nvm/nvm.sh && nvm install ${NODE_VERSION}' | bash -l


ENV PATH /nvm/${NODE_VERSION}/bin:${PATH}


COPY . .


RUN npm install


EXPOSE 3000


CMD [""npm"", ""start""]
","JavaScript
70.1%





HTML
29.9%",2015-10-13 18:28:22,2016-03-25 13:41:38,https://github.com/Seldszar/strapi-generate-new
27,yunhen/django_saltstack,,"FROM aexea/django-base-py2
MAINTAINER Aexea Carpentry


USER root


RUN apt-get update && apt-get install -y software-properties-common
RUN add-apt-repository -y ppa:saltstack/salt
RUN apt-get update
RUN apt-get install -y salt-master python-pip libgit2-dev libffi-dev salt-cloud redis-server python-git supervisor python3-pip python3-dev


RUN easy_install -U pip
RUN pip install python-simple-hipchat apache-libcloud boto dnspython cli53 redis raven python-dateutil
RUN pip3 install python-dateutil


ADD docker_files/supervisor.conf /etc/supervisor/conf.d/supervisor.conf


VOLUME [""/etc/salt/pki"", ""/var/cache/salt"", ""/var/log/salt"", ""/etc/salt/master.d"", ""/srv/salt""]


EXPOSE 4505 4506 8000


CMD [""supervisord"", ""-n""]
","Python
93.0%





HTML
6.2%





Other
0.8%",2015-10-15 15:10:28,2016-06-14 15:29:14,https://github.com/yunhen/django_saltstack
28,sfcoding/PersonalSite,"Organization(name=None, id=9371239)","# Use phusion/passenger-full as base image. To make your builds reproducible, make
# sure you lock down to a specific version, not to `latest`!
FROM phusion/passenger-full:0.9.15


# Set correct environment variables.
ENV HOME /root


# Use baseimage-docker's init process.
CMD [""/sbin/my_init""]


#Install Latex
#RUN apt-get update && apt-get install texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-base texlive-science texlive-xetex texlive-lang-italian texlive-lang-english -y


### In Dockerfile:
RUN mkdir -p /etc/my_init.d
ADD build/start_node.sh /etc/my_init.d/start_node.sh


RUN npm install -g nodemon


# use changes to package.json to force Docker not to use the cache
# when we change our application's nodejs dependencies:
ADD package.json /tmp/package.json
RUN cd /tmp && npm install && cp -a /tmp/node_modules /home/app


WORKDIR /home/app


EXPOSE 80


# Clean up APT when done.
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
","JavaScript
81.0%





HTML
8.9%





TeX
8.8%





Shell
1.1%





CSS
0.2%",2015-10-14 13:29:51,2016-10-23 18:22:07,https://github.com/sfcoding/PersonalSite
29,phirelight/docker-fsf,"Organization(name=None, id=12712894)","# This Docker image encapsulates the File Scanning Framework (FSF) by 
# Emerson Electric Company from https://github.com/EmersonElectricCo/fsf 
#
# To run this image after installing Docker using a standalone instance, use a command like 
# the following, replacing “~/fsf-workdir"" with the path to the location of your FSF
# working directory:
#
# sudo docker run --rm -it -v ~/fsf-workdir:/home/nonroot/workdir wzod/fsf
#
# To run this image using a networked instance, use a command like this after installing
# FSF on the host system:
#
# sudo docker run --rm -it -p 5800:5800 -v ~/fsf-workdir:/home/nonroot/workdir wzod/fsf
#
# Before running FSF, create the  ~/fsf-workdir and make it world-accessible
# (“chmod a+xwr"").
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


FROM ubuntu:14.04
MAINTAINER Phirelight (@PhirelightInc)


ENV DEBIAN_FRONTEND noninteractive


USER root
RUN apt-get -y install software-properties-common && \
  apt-add-repository -y multiverse && \
  apt-get -qq update && apt-get install -y --fix-missing \
  automake \
  build-essential \
  git \
  jq \
  libffi-dev \
  libtool \
  make \
  python-dev \
  libfuzzy-dev \
  python-pip \
  unrar \
  unzip \
  vim \
  wget


# Retrieve current version of Yara via wget, verify known good hash and install Yara
RUN cd /tmp && \
  wget -O yarav3.4.0.tar.gz ""https://github.com/plusvic/yara/archive/v3.4.0.tar.gz"" && \
  echo 528571ff721364229f34f6d1ff0eedc3cd5a2a75bb94727dc6578c6efe3d618b\ \ yarav3.4.0.tar.gz > sha256sum-yara && \
  sha256sum -c sha256sum-yara && \


  tar vxzf yarav3.4.0.tar.gz && \
  cd yara-3.4.0 && \
  ./bootstrap.sh && \
  ./configure && \
  make && \
  make install && \


  cd yara-python/ && \
  python setup.py build && \
  python setup.py install && \


# Retrieve current version of ssdeep via wget, verify known good hash and install ssdeep
  wget -O ssdeep-2.13.tar.gz ""http://sourceforge.net/projects/ssdeep/files/ssdeep-2.13/ssdeep-2.13.tar.gz/download"" && \
  echo 6e4ca94457cb50ff3343d4dd585473817a461a55a666da1c5a74667924f0f8c5\ \ ssdeep-2.13.tar.gz > sha256sum-ssdeep && \
  sha256sum -c sha256sum-ssdeep && \


  tar vxzf ssdeep-2.13.tar.gz && \
  cd ssdeep-2.13 && \
  ./configure && \
  make && \
  sudo make install


# Install additional dependencies
RUN pip install czipfile \
  pefile \
  hachoir-parser \
  hachoir-core \
  hachoir-regex \
  hachoir-metadata \
  hachoir-subfile \
  ConcurrentLogHandler \
  pypdf2 \
  xmltodict \
  rarfile \
  pylzma \
  oletools \
  PyGithub && \


  BUILD_LIB=1 pip install ssdeep


# Add nonroot user, clone repo and setup environment
RUN groupadd -r nonroot && \
  useradd -r -g nonroot -d /home/nonroot -s /sbin/nologin -c ""Nonroot User"" nonroot && \
  mkdir /home/nonroot && \
  chown -R nonroot:nonroot /home/nonroot


USER nonroot
RUN mkdir -pv /home/nonroot/workdir && \
  cd /home/nonroot && \
  git clone https://github.com/EmersonElectricCo/fsf.git && \
  cd fsf/ && \
  sed -i 's/\/FULL\/PATH\/TO/\/home\/nonroot\/fsf/' fsf-server/conf/config.py && \
  sed -i ""/^SCANNER\_CONFIG/ s/\/tmp/\/home\/nonroot\/workdir/"" fsf-server/conf/config.py && \
  git clone https://github.com/mkayoh/yarasorter && \
  git clone https://github.com/unusedPhD/GithubDownloader.git && \
  cd GithubDownloader && \
  mkdir temp && \
  python git_downloader.py -r repos.txt -w *.yar* -y rules.yara -o temp/ && \
  python ../yarasorter/sorter.py -f temp/* -o /home/nonroot/fsf/fsf-server/yara/ -r -t -n && \
  rm -rf /home/nonroot/fsf/fsf-server/yara/Dup_Files /home/nonroot/fsf/fsf-server/yara/Dup_rules /home/nonroot/fsf/fsf-server/yara/Dup_rulenames /home/nonroot/fsf/fsf-server/yara/Broken_rules \
  /home/nonroot/fsf/fsf-server/yara/Imports /home/nonroot/fsf/fsf-server/yara/Meta_files && \
  rm /home/nonroot/fsf/fsf-server/yara/rules.yara && \
  python ../yarasorter/create_meta.py -f /home/nonroot/fsf/fsf-server/yara/* -o /home/nonroot/fsf/fsf-server/yara/
 
USER root
RUN ldconfig && \
  ln -f -s /home/nonroot/fsf/fsf-server/main.py /usr/local/bin/ && \
  ln -f -s /home/nonroot/fsf/fsf-client/fsf_client.py /usr/local/bin/ && \
  apt-get remove -y --purge automake build-essential libtool && \
  apt-get autoremove -y --purge && \
  apt-get clean -y && \
  rm -rf /var/lib/apt/lists/*


USER nonroot
ENV HOME /home/nonroot
ENV USER nonroot
WORKDIR /home/nonroot/workdir


ENTRYPOINT sed -i ""/^SERVER_CONFIG/ s/127\.0\.0\.1/$(hostname -i)/"" /home/nonroot/fsf/fsf-client/conf/config.py && main.py start && printf ""\n\n"" && echo ""<----->"" && echo ""FSF server daemonized!"" &&  echo ""<----->"" && printf ""\n"" && echo ""Invoke fsf_client.py by giving it a file as an argumenti like so:"" && printf ""\n"" && echo ""fsf_client.py <file>""  && printf ""\n"" && echo ""Alternatively, Invoke fsf_client.py by giving it a file as an argument and pass to jq so you can interact extensively with the JSON output like so:"" && printf ""\n"" && echo ""fsf_client.py <file> | jq - C . | less -r"" && printf ""\n"" && /bin/bash
",,2015-10-14 11:33:11,2017-09-12 02:26:10,https://github.com/phirelight/docker-fsf
0,cusspvz/autotune.docker,,"FROM alpine:latest
MAINTAINER José Moreira <jose.moreira@findhit.com>
ADD tunesys /tunesys
RUN apk add --update docker && \
    rm -rf /var/cache/apk/*
RUN chmod +x /tunesys/run /tunesys/common /tunesys/tuner/*
ENV PROC=/proc


# CACHE
ENV TUNE_CACHE=1 \
    cache_loop_interval=60 \
    sys__vm__drop_caches=3


# TCP
ENV TUNE_TCP=1 \
    tcp_loop_interval=3600 \
    net__ipv4__ip_local_port_range_min=15000 \
    net__ipv4__ip_local_port_range_max=61000 \
    net__ipv4__tcp_fin_timeout=20 \
    net__ipv4__tcp_tw_recycle=1 \
    net__ipv4__tcp_tw_reuse=1 \
    net__ipv4__tcp_max_orphans=0 \
    net__ipv4__tcp_challenge_ack_limit=999999999


# DOCKER
ENV TUNE_DOCKER=1 \
    docker_remove_containers=1 \
    docker_remove_images=1 \
    docker_loop_interval=21600


WORKDIR /tunesys
CMD [ ""/tunesys/run"" ]
","Shell
87.4%





Makefile
12.6%",2015-10-22 21:53:22,2017-12-04 15:17:49,https://github.com/cusspvz/autotune.docker
1,git4razat/docker-ubuntu,,"From Ubuntu:14.04
",,2015-11-02 06:13:10,2015-11-02 06:13:10,https://github.com/git4razat/docker-ubuntu
2,zwxajh/redmine-docker,,"FROM ruby:2.2-slim


# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added
RUN groupadd -r redmine && useradd -r -g redmine redmine


# grab gosu for easy step-down from root
RUN gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
RUN curl -o /usr/local/bin/gosu -SL ""https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture)"" \
	&& curl -o /usr/local/bin/gosu.asc -SL ""https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture).asc"" \
	&& gpg --verify /usr/local/bin/gosu.asc \
	&& rm /usr/local/bin/gosu.asc \
	&& chmod +x /usr/local/bin/gosu


RUN set -x \
	&& curl -fSL ""https://github.com/krallin/tini/releases/download/v0.5.0/tini"" -o /usr/local/bin/tini \
	&& chmod +x /usr/local/bin/tini \
	&& tini -h


RUN apt-get update && apt-get install -y --no-install-recommends \
		imagemagick \
		libmysqlclient18 \
		libpq5 \
		libsqlite3-0 \
	&& rm -rf /var/lib/apt/lists/*


ENV RAILS_ENV production
WORKDIR /usr/src/redmine


ENV REDMINE_VERSION 3.1.1
ENV REDMINE_DOWNLOAD_MD5 24fd22a238c0236542a5c0ef730fc2bf


RUN curl -fSL ""http://www.redmine.org/releases/redmine-${REDMINE_VERSION}.tar.gz"" -o redmine.tar.gz \
	&& echo ""$REDMINE_DOWNLOAD_MD5 redmine.tar.gz"" | md5sum -c - \
	&& tar -xvf redmine.tar.gz --strip-components=1 \
	&& rm redmine.tar.gz files/delete.me log/delete.me \
	&& mkdir -p tmp/pdf public/plugin_assets \
	&& chown -R redmine:redmine ./


RUN buildDeps='\
		gcc \
		libmagickcore-dev \
		libmagickwand-dev \
		libmysqlclient-dev \
		libpq-dev \
		libsqlite3-dev \
		make \
		patch \
	' \
	&& set -ex \
	&& apt-get update && apt-get install -y $buildDeps --no-install-recommends \
	&& rm -rf /var/lib/apt/lists/* \
	&& bundle install --without development test \
	&& for adapter in mysql2 postgresql sqlite3; do \
		echo ""$RAILS_ENV:"" > ./config/database.yml; \
		echo ""  adapter: $adapter"" >> ./config/database.yml; \
		bundle install --without development test; \
	done \
	&& rm ./config/database.yml \
	&& apt-get purge -y --auto-remove $buildDeps




VOLUME /usr/src/redmine/files


COPY docker-entrypoint.sh /
RUN chmod 755 /docker-entrypoint.sh
ENTRYPOINT [""/docker-entrypoint.sh""]


EXPOSE 3000
CMD [""rails"", ""server"", ""-b"", ""0.0.0.0""]
","Shell
100.0%",2015-11-02 07:06:54,2015-11-02 07:09:45,https://github.com/zwxajh/redmine-docker
3,CloneXpert/localmarket,,,"JavaScript
77.8%





HTML
20.5%





CSS
1.7%",2015-10-31 10:45:22,2015-10-31 10:46:25,https://github.com/CloneXpert/localmarket
4,passcod/postier,,"FROM frolvlad/alpine-glibc
MAINTAINER Félix Saparelli <me@passcod.name>
CMD [""postier""]
VOLUME /hooks


RUN apk add --update openssl curl xz &&\
    rm -rf /var/cache/apk/* &&\
    curl -L https://github.com/passcod/postier/releases/download/v1.0.1/postier-1.0.1-linux-amd64.xz > postier.xz &&\
    xz -d postier.xz &&\
    mv postier /bin/ &&\
    apk --purge del curl xz &&\
    chmod +x /bin/postier
","Rust
99.1%





Shell
0.9%",2015-10-29 05:04:49,2017-11-26 13:00:01,https://github.com/passcod/postier
5,jbydeley/pipe,,"FROM golang:latest


ADD . /go/src/HelloWorld


WORKDIR /go/src/HelloWorld/
RUN go build
CMD ./HelloWorld


EXPOSE 3000
","Go
100.0%",2015-10-20 19:14:44,2017-08-08 19:03:51,https://github.com/jbydeley/pipe
6,Bplotka/mesos-modules-dev,,"FROM ubuntu-upstart:14.04
MAINTAINER bplotka <bartlomiej.plotka@intel.com>


# Install Dependencies


RUN apt-get update -q --fix-missing
RUN apt-get -qy install software-properties-common # (for add-apt-repository)
RUN add-apt-repository ppa:george-edison55/cmake-3.x
RUN apt-get update -q
RUN apt-cache policy cmake
RUN apt-get -qy install \
  build-essential                         \
  autoconf                                \
  automake                                \
  cmake=3.2.2-2ubuntu2~ubuntu14.04.1~ppa1 \
  ca-certificates                         \
  gdb                                     \
  wget                                    \
  git-core                                \
  libcurl4-nss-dev                        \
  libsasl2-dev                            \
  libtool                                 \
  libsvn-dev                              \
  libapr1-dev                             \
  libgoogle-glog-dev                      \
  libboost-dev                            \
  protobuf-compiler                       \
  libprotobuf-dev                         \
  make                                    \
  python                                  \
  python2.7                               \
  libpython-dev                           \
  python-dev                              \
  python-protobuf                         \
  python-setuptools                       \
  heimdal-clients                         \
  libsasl2-modules-gssapi-heimdal         \
  unzip                                   \
  clang-3.5                               \
  vim                                     \
  libboost-python-dev                     \
  --no-install-recommends


# Install the picojson headers
RUN wget https://raw.githubusercontent.com/kazuho/picojson/v1.3.0/picojson.h -O /usr/local/include/picojson.h


# Prepare to build Mesos
RUN mkdir -p /mesos
RUN mkdir -p /tmp
RUN mkdir -p /usr/share/java/
RUN wget http://search.maven.org/remotecontent?filepath=com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar -O protobuf.jar
RUN mv protobuf.jar /usr/share/java/


WORKDIR /mesos


# Clone Mesos (master branch)
RUN git clone git://git.apache.org/mesos.git /mesos
RUN cd /mesos && git checkout tags/0.24.1 && git log -n 1


# Bootstrap
RUN ./bootstrap


# Configure
RUN mkdir build && cd build && ../configure --disable-java --disable-optimize --without-included-zookeeper --with-glog=/usr/local --with-protobuf=/usr --with-boost=/usr/local


# Build Mesos
RUN cd build && make -j 4 install


# Install python eggs
RUN easy_install /mesos/build/src/python/dist/mesos.interface-*.egg
RUN easy_install /mesos/build/src/python/dist/mesos.native-*.egg


",,2015-10-26 15:01:10,2016-02-16 00:08:17,https://github.com/Bplotka/mesos-modules-dev
7,Bplotka/mesos-modules-dev,,"FROM ubuntu-upstart:14.04
MAINTAINER bplotka <bartlomiej.plotka@intel.com>


# Install Dependencies


RUN apt-get update -q --fix-missing
RUN apt-get -qy install software-properties-common # (for add-apt-repository)
RUN add-apt-repository ppa:george-edison55/cmake-3.x
RUN apt-get update -q
RUN apt-cache policy cmake
RUN apt-get -qy install \
  build-essential                         \
  autoconf                                \
  automake                                \
  cmake=3.2.2-2ubuntu2~ubuntu14.04.1~ppa1 \
  ca-certificates                         \
  gdb                                     \
  wget                                    \
  git-core                                \
  libcurl4-nss-dev                        \
  libsasl2-dev                            \
  libtool                                 \
  libsvn-dev                              \
  libapr1-dev                             \
  libgoogle-glog-dev                      \
  libboost-dev                            \
  protobuf-compiler                       \
  libprotobuf-dev                         \
  make                                    \
  python                                  \
  python2.7                               \
  libpython-dev                           \
  python-dev                              \
  python-protobuf                         \
  python-setuptools                       \
  heimdal-clients                         \
  libsasl2-modules-gssapi-heimdal         \
  unzip                                   \
  clang-3.5                               \
  vim                                     \
  libboost-python-dev                     \
  --no-install-recommends


# Install the picojson headers
RUN wget https://raw.githubusercontent.com/kazuho/picojson/v1.3.0/picojson.h -O /usr/local/include/picojson.h


# Prepare to build Mesos
RUN mkdir -p /mesos
RUN mkdir -p /tmp
RUN mkdir -p /usr/share/java/
RUN wget http://search.maven.org/remotecontent?filepath=com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar -O protobuf.jar
RUN mv protobuf.jar /usr/share/java/


WORKDIR /mesos


# Clone Mesos (master branch)
RUN git clone git://git.apache.org/mesos.git /mesos
RUN cd /mesos && git checkout tags/0.24.1 && git log -n 1


# Bootstrap
RUN ./bootstrap


# Configure
RUN mkdir build && cd build && ../configure --disable-java --disable-optimize --without-included-zookeeper --with-glog=/usr/local --with-protobuf=/usr --with-boost=/usr/local


# Build Mesos
RUN cd build && make -j 4 install


# Install python eggs
RUN easy_install /mesos/build/src/python/dist/mesos.interface-*.egg
RUN easy_install /mesos/build/src/python/dist/mesos.native-*.egg


",,2015-10-26 15:01:10,2016-02-16 00:08:17,https://github.com/Bplotka/mesos-modules-dev
8,Bplotka/mesos-modules-dev,,"FROM ubuntu-upstart:14.04
MAINTAINER bplotka <bartlomiej.plotka@intel.com>


# Install Dependencies
RUN apt-get update -q --fix-missing && \
    apt-get -qy install software-properties-common # (for add-apt-repository)
RUN add-apt-repository ppa:george-edison55/cmake-3.x
RUN apt-get update -q && \
    apt-cache policy cmake && \
    apt-get -qy install \
  build-essential                         \
  autoconf                                \
  automake                                \
  cmake=3.2.2-2ubuntu2~ubuntu14.04.1~ppa1 \
  ca-certificates                         \
  gdb                                     \
  wget                                    \
  git-core                                \
  libcurl4-nss-dev                        \
  libsasl2-dev                            \
  libtool                                 \
  libsvn-dev                              \
  libapr1-dev                             \
  libgoogle-glog-dev                      \
  libboost-dev                            \
  protobuf-compiler                       \
  libprotobuf-dev                         \
  make                                    \
  python                                  \
  python2.7                               \
  libpython-dev                           \
  python-dev                              \
  python-protobuf                         \
  python-setuptools                       \
  heimdal-clients                         \
  libsasl2-modules-gssapi-heimdal         \
  unzip                                   \
  clang-3.5                               \
  vim                                     \
  libboost-python-dev                     \
  --no-install-recommends


# Install the picojson headers
RUN wget https://raw.githubusercontent.com/kazuho/picojson/v1.3.0/picojson.h -O /usr/local/include/picojson.h


# Prepare to build Mesos
RUN mkdir -p /mesos
RUN mkdir -p /tmp
RUN mkdir -p /usr/share/java/
RUN wget http://search.maven.org/remotecontent?filepath=com/google/protobuf/protobuf-java/2.5.0/protobuf-java-2.5.0.jar -O protobuf.jar
RUN mv protobuf.jar /usr/share/java/


WORKDIR /mesos


# Clone Mesos (master branch)
RUN git clone https://github.com/Bplotka/mesos.git /mesos
RUN cd /mesos && git checkout perf-fix-0.24.1 && git log -n 1


# Bootstrap
RUN ./bootstrap


# Configure
RUN mkdir build && cd build && ../configure --disable-java --disable-optimize --without-included-zookeeper --with-glog=/usr/local --with-protobuf=/usr --with-boost=/usr/local


# Build Mesos
RUN cd build && make -j 4 install


# Install python eggs
RUN easy_install /mesos/build/src/python/dist/mesos.interface-*.egg
RUN easy_install /mesos/build/src/python/dist/mesos.native-*.egg


",,2015-10-26 15:01:10,2016-02-16 00:08:17,https://github.com/Bplotka/mesos-modules-dev
9,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN 17.0-rc1


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
10,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN 17.0-rc2


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
11,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN 17.0


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
12,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN 17.1


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
13,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN 17.3


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
14,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN 17.4


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
15,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN 17.5


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
16,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN 18.0


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
17,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN 18.1


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
18,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-0


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
19,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-10


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
20,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-1a


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
21,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-2


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
22,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-3


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
23,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-4


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
24,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-5


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
25,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-6


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
26,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-7


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
27,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-8


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
28,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R10B-9


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
29,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R11B-0


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
0,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R11B-1


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
1,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R11B-2


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
2,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R11B-3


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
3,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R11B-4


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
4,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R11B-5


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
5,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R12B-0


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
6,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R12B-1


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
7,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R12B-2


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
8,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R12B-3


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
9,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R12B-4


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
10,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R12B-5


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
11,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R13A


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
12,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R13B


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
13,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R13B01


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
14,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R13B02-1


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
15,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R13B02


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
16,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R13B03


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
17,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R13B04


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
18,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R14A


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
19,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R14B


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
20,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R14B01


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
21,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R14B02


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
22,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R14B03


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
23,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R14B04


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
24,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R14B_erts-5.8.1.1


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
25,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R15B


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
26,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R15B01


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
27,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R15B02


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
28,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R15B02_with_MSVCR100_installer_fix


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
29,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R15B03-1


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
0,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R15B03


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
1,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R16A_RELEASE_CANDIDATE


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
2,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R16B


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
3,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R16B01


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
4,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R16B02


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
5,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R16B03-1


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
6,studzien/erlang,,"FROM ubuntu:14.04


ENV ERLANG_VSN R16B03


RUN apt-get update && \
    apt-get install -y curl \
                       build-essential \
                       libncurses5-dev \
                       libssl-dev \
                       unixodbc-dev


RUN curl -O https://raw.githubusercontent.com/yrashk/kerl/master/kerl && \
    chmod a+x kerl && \
    ./kerl build ${ERLANG_VSN} ${ERLANG_VSN} && \
    ./kerl install ${ERLANG_VSN} /opt/erlang


ENV PATH /opt/erlang/bin:$PATH
","Shell
99.2%





Makefile
0.8%",2015-10-25 10:21:22,2016-10-13 02:13:45,https://github.com/studzien/erlang
7,brightbox/docker-machine-driver-brightbox,"Organization(name=None, id=39067)","FROM golang:1.5


ENV REPO github.com/brightbox/docker-machine-driver-brightbox


RUN go get github.com/aktau/github-release \
	github.com/brightbox/gobrightbox \
	github.com/docker/machine \
	golang.org/x/net/context \
	golang.org/x/oauth2


WORKDIR /go/src/${REPO}
ADD . /go/src/${REPO}
","Go
91.8%





Makefile
8.2%",2015-11-02 15:11:46,2015-11-16 00:23:47,https://github.com/brightbox/docker-machine-driver-brightbox
8,wafflestudio/hayacook-server,"Organization(name=None, id=1299328)","###
# swagger-ui-builder - https://github.com/swagger-api/swagger-ui/
# Container for building the swagger-ui static site
#
# Build: docker build -t swagger-ui-builder .
# Run:   docker run -v $PWD/dist:/build/dist swagger-ui-builder
#
###


FROM    ubuntu:14.04
MAINTAINER dnephin@gmail.com


ENV     DEBIAN_FRONTEND noninteractive


RUN     apt-get update && apt-get install -y git npm nodejs openjdk-7-jre
RUN     ln -s /usr/bin/nodejs /usr/local/bin/node


WORKDIR /build
ADD     package.json    /build/package.json
RUN     npm install
ADD     .   /build
CMD     ./node_modules/gulp/bin/gulp.js serve
","JavaScript
90.5%





CSS
8.4%





HTML
1.1%",2015-10-30 05:48:43,2016-02-05 09:23:54,https://github.com/wafflestudio/hayacook-server
9,hieutrtr/dockerize_all,,"FROM centos:6.7


RUN yum -y update
ADD yum_list /yum_list
ADD yum.repos.d /etc/yum.repos.d
ADD rpm-gpg /etc/pki/rpm-gpg
RUN yum -y install $(cat /yum_list)


ENTRYPOINT []
","Shell
100.0%",2015-10-31 06:03:04,2015-10-31 09:37:28,https://github.com/hieutrtr/dockerize_all
10,azclick/yebo_sdk,"Organization(name=None, id=4580796)","FROM node:4.0.0


# Define User
ENV USER root


# Note: npm is v2.7.6
RUN npm install -g gulp


RUN echo ""deb http://us.archive.ubuntu.com/ubuntu/ precise-updates main restricted"" | tee -a /etc/apt/sources.list.d/precise-updates.list
RUN apt-get update -qq
RUN apt-get install -y python2.7-dev


# install watchman
RUN \
	git clone https://github.com/facebook/watchman.git &&\
	cd watchman &&\
	git checkout v3.7.0 &&\
	./autogen.sh &&\
	./configure &&\
	make &&\
	make install


# Define APP NAME
ENV APP_HOME /yebo_sdk


# Create folder
RUN mkdir /$APP_HOME


# Define workdir
WORKDIR /$APP_HOME


# Add files
ADD . /$APP_HOME
","JavaScript
99.8%





HTML
0.2%",2015-10-29 17:41:29,2016-01-27 17:26:31,https://github.com/azclick/yebo_sdk
11,aviyashchin/liquidity.ai,,"FROM ubuntu:14.04
MAINTAINER Avi Yashchin  <avi.yashchin@gmail.com>


RUN mkdir /srv/m3 && \
	cd /srv/m3


RUN git clone https://github.com/aviyashchin/liquidity.ai.git
","Jupyter Notebook
99.1%





Other
0.9%",2015-11-10 18:31:07,2017-06-17 01:59:24,https://github.com/aviyashchin/liquidity.ai
12,ysboss/baseimage,,"# add a base image
FROM centos:7


# install dependencies of swan model
RUN yum -y install \ 
           perl \
           wget \
           make \
           gcc-gfortran \
           openmpi \
           openmpi-devel.x86_64 \
           openssh-clients \
           openssh-server 
ENV PATH $PATH:/usr/lib64/openmpi/bin 
ENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/lib64/openmpi/lib










",,2015-11-11 17:49:36,2015-11-11 17:49:36,https://github.com/ysboss/baseimage
13,T0niMichel/rapidflask-orchestra,,"FROM nginx
ADD sites-enabled/rapidflask /etc/nginx/conf.d/default.conf
","Python
64.0%





HTML
35.0%





Shell
1.0%",2015-11-11 19:26:06,2015-11-11 19:32:20,https://github.com/T0niMichel/rapidflask-orchestra
14,T0niMichel/rapidflask-orchestra,,"FROM tonimichel/rapidflask
ONBUILD RUN chown rapidflask:rapidflask /srv/rapidflask/ -R
ONBUILD RUN rm -rf /srv/rapidflask/migrations/
","Python
64.0%





HTML
35.0%





Shell
1.0%",2015-11-11 19:26:06,2015-11-11 19:32:20,https://github.com/T0niMichel/rapidflask-orchestra
15,GoogleCloudPlatform/flask-talisman,"Organization(name=None, id=2810941)","FROM gcr.io/google_appengine/python
RUN virtualenv /env -p python3.4


# Set virtualenv environment variables. This is equivalent to running
# source /env/bin/activate
ENV VIRTUAL_ENV /env
ENV PATH /env/bin:$PATH


ADD requirements.txt /app/
RUN pip install -r requirements.txt
ADD . /app/
CMD gunicorn -c gunicorn.conf.py -b :$PORT main:app
","Python
96.1%





HTML
3.9%",2015-11-12 23:40:25,2017-11-14 08:03:37,https://github.com/GoogleCloudPlatform/flask-talisman
16,vwiart/synapps-datascience,,"FROM fedora:latest
MAINTAINER http://synapps.io


ENV JAVA_HOME=/usr/java/default
ENV HADOOP_HOME=/home/hadoop/hadoop
ENV HADOOP_COMMON_HOME=/home/hadoop/hadoop
ENV HADOOP_CONF_DIR=/home/hadoop/hadoop/etc/hadoop
ENV HADOOP_HDFS_HOME=/home/hadoop/hadoop
ENV HADOOP_MAPRED_HOME=/home/hadoop/hadoop
ENV HADOOP_YARN_HOME=/home/hadoop/hadoop
ENV SPARK_HOME=/usr/share/apache-spark
ENV PATH=$PATH;$HADOOP_HOME/bin;$HADOOP_HOME/sbin


# Update distro and install req. soft
RUN dnf distro-sync -y
RUN dnf install -y openssh-server openssh-clients rsync which procps findutils tar hostname


# Creating Workdir
RUN useradd -ms /bin/bash hadoop


# downloading stuff
ADD resources/sshd_config /etc/ssh/sshd_config
ADD resources/install.sh /home/hadoop/install.sh
WORKDIR /home/hadoop
RUN /home/hadoop/install.sh
ADD resources/startup.sh /home/hadoop/startup.sh
ADD resources/spark-repl.sh /home/hadoop/spark-repl.sh
VOLUME [""/var/lib/hdfs"", ""/root/.ssh"" ,""/home/hadoop/hadoop/etc/hadoop""]


EXPOSE 50070 8088 8080 7077


CMD [""/home/hadoop/startup.sh"", ""-d""]
","Shell
93.2%





XSLT
6.8%",2015-10-26 20:31:49,2015-11-29 16:03:44,https://github.com/vwiart/synapps-datascience
17,bipt-urt/CC,"Organization(name=None, id=15630041)","FROM centos:latest
","CSS
76.8%





PHP
22.2%





Other
1.0%",2015-11-03 12:08:16,2016-07-12 19:00:14,https://github.com/bipt-urt/CC
18,fgracia/l4d2-server-docker,,"FROM fgracia/steamcmd


ENV LOGIN anonymous
ENV PASSWORD """"


RUN mkdir -p /opt/l4d2


WORKDIR /opt/steamcmd/bin
RUN ./steamcmd.sh +login $LOGIN $PASSWORD +force_install_dir /opt/l4d2 +app_update 222860 validate +quit


VOLUME [""/opt/l4d2""]


CMD [""/opt/l4d2/srcds"", ""-console"", ""-game left4dead2"", ""-maxplayers 8"", ""+sv_lan 0"", ""+map c5m1_waterfront""]
",,2015-11-05 22:36:20,2015-11-05 22:36:20,https://github.com/fgracia/l4d2-server-docker
19,jakriz/node-events-map,,"FROM node:onbuild


EXPOSE 3000
","JavaScript
82.8%





HTML
8.7%





CSS
4.3%





Ruby
4.2%",2015-11-09 01:01:41,2017-03-22 11:22:23,https://github.com/jakriz/node-events-map
20,qida/docker-ecshop-src,,"FROM ubuntu:trusty
MAINTAINER Allen <sunqida@foxmail.com>


# Install base packages
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get -yq install \
        git \
        zip \
        curl \
        apache2 \
        libapache2-mod-php5 \
        php5-mysql \
        php5-mcrypt \
        php5-gd \
        php5-curl \
        php-pear \
        php-apc && \
    rm -rf /var/lib/apt/lists/* && \
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN /usr/sbin/php5enmod mcrypt
RUN echo ""ServerName localhost"" >> /etc/apache2/apache2.conf && \
    sed -i ""s/variables_order.*/variables_order = \""EGPCS\""/g"" /etc/php5/apache2/php.ini


ENV ALLOW_OVERRIDE **False**


# Add image configuration and scripts
ADD run.sh /run.sh
RUN chmod 755 /*.sh


# Configure /app folder with sample app
RUN mkdir -p /app/kod && rm -fr /var/www/html && ln -s /app /var/www/html
RUN git clone https://github.com/kalcaddle/KODExplorer.git /app/kod
#RUN mkdir -p /app/upload
#VOLUME /app/upload
#download ecshop
WORKDIR /app
ADD http://7xo5s9.dl1.z0.glb.clouddn.com/ecshop-2.7.3.zip /app
RUN unzip /app/ecshop-2.7.3.zip -d /app
EXPOSE 80
CMD [""/run.sh""]
#http://download.ecshop.com/2.7.3/ECShop_V2.7.3_UTF8_release1106.rar
","Shell
100.0%",2015-11-08 10:08:27,2015-11-09 02:38:43,https://github.com/qida/docker-ecshop-src
21,bvpelt/virtuoso,,"FROM fedora:23
MAINTAINER dockerpinguin <bart.vanpelt@gmail.com>


RUN dnf -y update && \
	dnf clean all


RUN dnf -y install \
	virtuoso-opensource \
	virtuoso-opensource-apps \
	virtuoso-opensource-utils \
	virtuoso-opensource-conductor


WORKDIR /var/lib/virtuoso/db


EXPOSE 1111 8890


COPY ./odbc.ini /etc/odbc.ini
COPY ./virtuoso.sh /


ENTRYPOINT [""/virtuoso.sh""]
","Shell
100.0%",2015-11-13 21:02:23,2015-11-13 21:05:43,https://github.com/bvpelt/virtuoso
22,jasonbrooks/ovirt-stg,,"FROM centos
MAINTAINER Garrett LeSage <garrett@redhat.com>


# User & group IDs — should match local user
ENV UID 1000
ENV GID 1000


# Install necessary deps
RUN yum install -y git rsync ruby-devel rubygems gcc-c++ curl-devel rubygem-bundler make patch tar


# Set up working directory
RUN mkdir -p /opt/website
WORKDIR /opt/website


# Add generic ""docker"" user & set permissions
RUN groupadd docker -g $GID
RUN useradd docker -u $UID -g $GID
RUN mkdir -p /home/docker && chown -R docker:docker /home/docker
RUN chown docker:docker /opt/website


# Switch to ""docker"" user
USER docker


# Set bundle path to map to local working dir
ENV BUNDLE_PATH /opt/website/.gem-docker


# Expose Middleman dev port
EXPOSE 4567:4567


# Running the server is the default command
# (This can be overridden at runtime, of course.)
CMD [""./run-server.sh""]
","HTML
58.7%





CSS
24.2%





Ruby
15.7%





Other
1.4%",2015-11-14 00:30:55,2015-11-14 00:43:53,https://github.com/jasonbrooks/ovirt-stg
23,scopeCode/pets,,"FROM iojs:1.6


RUN apt-get install libpq-dev


COPY package.json /
RUN npm install


WORKDIR /sequelize
VOLUME /sequelize
","JavaScript
93.3%





HTML
6.3%





CSS
0.4%",2015-11-11 01:19:32,2015-11-11 02:38:41,https://github.com/scopeCode/pets
24,scopeCode/pets,,"FROM iojs:1.6


RUN apt-get install libpq-dev


COPY package.json /
RUN npm install


WORKDIR /sequelize
VOLUME /sequelize
","JavaScript
93.3%





HTML
6.3%





CSS
0.4%",2015-11-11 01:19:32,2015-11-11 02:38:41,https://github.com/scopeCode/pets
25,mjvdende/jenkins-mesos-slave,,"FROM garland/mesosphere-docker-mesos-master
ENTRYPOINT [""mesos-slave""]
RUN useradd -m -u 1000 jenkins
",,2015-10-16 14:35:25,2015-10-16 14:35:25,https://github.com/mjvdende/jenkins-mesos-slave
26,robotmay/kyoto-tycoon,,"FROM debian:jessie
MAINTAINER Robert May <rob@afternoonrobot.co.uk>


RUN apt-get update && \
    apt-get install -y wget make gcc build-essential liblzo2-2 liblzma5 liblua5.1-0 liblua5.1.0-dev zlib1g-dev


RUN cd /tmp && \
    wget https://github.com/sapo/kyoto/archive/snapshot-20150317.tar.gz && \
    tar xzvf snapshot-20150317.tar.gz && \
    cd kyoto-snapshot-20150317 && \
    make deb && \
    cd build && \
    dpkg --force-depends -i kyoto-tycoon-*.deb 


EXPOSE 1978


ENTRYPOINT [""ktserver""]
",,2015-10-15 16:29:04,2015-10-15 16:29:04,https://github.com/robotmay/kyoto-tycoon
27,pchlebda/spring-boot,,"FROM java:7
VOLUME /tmp
ADD eureka-0.0.1-SNAPSHOT.jar /app.jar
RUN bash -c 'touch /app.jar'
EXPOSE 8761
ENTRYPOINT [""java"",""-Djava.security.egd=file:/dev/./urandom"",""-jar"",""/app.jar""]
","Shell
51.8%





Batchfile
35.9%





Java
12.3%",2015-10-18 16:23:33,2016-06-24 18:58:18,https://github.com/pchlebda/spring-boot
28,hetznerZA/observium-docker,"Organization(name=None, id=3939441)","FROM ubuntu:trusty


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update && \
    apt-get dist-upgrade -y && \
    apt-get install -y wget libapache2-mod-php5 php5-cli php5-mysql php5-gd php5-mcrypt php5-json php-pear snmp fping mysql-server \
                       mysql-client python-mysqldb rrdtool subversion whois mtr-tiny ipmitool graphviz imagemagick && \
    mkdir -p /opt/observium && cd /opt && \
    wget http://www.observium.org/observium-community-latest.tar.gz && \
    tar zxvf observium-community-latest.tar.gz


RUN cd /opt/observium


EXPOSE 80
",,2015-10-27 11:47:04,2015-10-27 11:47:04,https://github.com/hetznerZA/observium-docker
29,vorburger/Docker,,"# FROM java:openjdk-8-jdk
FROM maven:3.3.3-jdk-8 
MAINTAINER Michael Vorburger <mike@vorburger.ch>


# Workaround for https://github.com/docker/docker/issues/9299
ENV TERM xterm


ENV ANT_VERSION 1.9.6
ENV ANT_HOME /usr/share/ant


RUN curl -fsSL http://www.eu.apache.org/dist/ant/binaries/apache-ant-$ANT_VERSION-bin.tar.gz | tar xzf - -C /usr/share \
  && ls -l /usr/share \
  && mv /usr/share/apache-ant-$ANT_VERSION /usr/share/ant \
  && ln -s /usr/share/ant/bin/ant /usr/bin/ant


COPY selftest/* /build/
RUN cd /build && ./selftest.sh && rm -rf /build


","Shell
80.8%





Java
19.2%",2015-10-02 23:38:59,2016-05-20 00:52:07,https://github.com/vorburger/Docker
0,vorburger/Docker,,"FROM fedora
MAINTAINER Michael Vorburger <vorburger@redhat.com>


# Inspired by
#    https://github.com/fedora-cloud/Fedora-Dockerfiles/blob/master/java-openjdk-8/Dockerfile
#    https://github.com/fedora-cloud/Fedora-Dockerfiles/blob/master/maven/Dockerfile


RUN dnf -y update && dnf clean all
RUN dnf -y install tar gzip git java java-devel && dnf clean all
ENV JAVA_HOME /usr/lib/jvm/java-openjdk


ENV MAVEN_VERSION 3.3.9
RUN curl -sSL http://www-eu.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar xzf - -C /usr/share \
&& mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven \
&& ln -s /usr/share/maven/bin/mvn /usr/bin/mvn


# https://wiki.opendaylight.org/view/GettingStarted:Development_Environment_Setup#Edit_your_.7E.2F.m2.2Fsettings.xml
RUN mkdir ~/.m2; curl https://raw.githubusercontent.com/opendaylight/odlparent/master/settings.xml --output ~/.m2/settings.xml


CMD [""bash""]


","Shell
80.8%





Java
19.2%",2015-10-02 23:38:59,2016-05-20 00:52:07,https://github.com/vorburger/Docker
1,vorburger/Docker,,"FROM fedora
MAINTAINER Michael Vorburger <vorburger@redhat.com>


# Inspired by https://github.com/fedora-cloud/Fedora-Dockerfiles/blob/master/java-openjdk-8/Dockerfile


RUN dnf -y update && dnf clean all
RUN dnf -y install procps-ng tar gzip java java-devel && dnf clean all
ENV JAVA_HOME /usr/lib/jvm/java-openjdk




# Inspired by https://github.com/sonatype/docker-nexus/blob/master/oss/Dockerfile


ENV NEXUS_VERSION 2.13.0-01
ENV RUN_AS_USER root
RUN mkdir -p /opt/sonatype/nexus \
  && curl --fail --silent --location --retry 3 \
    https://download.sonatype.com/nexus/oss/nexus-${NEXUS_VERSION}-bundle.tar.gz \
  | gunzip \
  | tar x -C /tmp nexus-${NEXUS_VERSION} \
  && mv /tmp/nexus-${NEXUS_VERSION}/* /opt/sonatype/nexus/ \
  && rm -rf /tmp/nexus-${NEXUS_VERSION}


EXPOSE 8081


CMD /opt/sonatype/nexus/bin/nexus console


","Shell
80.8%





Java
19.2%",2015-10-02 23:38:59,2016-05-20 00:52:07,https://github.com/vorburger/Docker
2,vorburger/Docker,,"FROM vorburger:java8-buildtools
MAINTAINER Michael Vorburger <mike@vorburger.ch>


RUN git clone https://github.com/walterhiggins/ScriptCraft.git \
 && cd ScriptCraft \
 && ant


","Shell
80.8%





Java
19.2%",2015-10-02 23:38:59,2016-05-20 00:52:07,https://github.com/vorburger/Docker
3,vorburger/Docker,,"FROM vorburger:scriptcraft-build
MAINTAINER Michael Vorburger <mike@vorburger.ch>


RUN cd ScriptCraft \
 && cp lib/canarymod*.jar target/canarymod.zip \
 && git checkout . \
 && git fetch origin pull/257/head:pr257_Blockly \
 && git checkout pr257_Blockly \
 && ant


","Shell
80.8%





Java
19.2%",2015-10-02 23:38:59,2016-05-20 00:52:07,https://github.com/vorburger/Docker
4,vorburger/Docker,,"FROM jenkins
# TODO jenkins:alpine ?  
MAINTAINER Michael Vorburger <vorburger@redhat.com>


USER root
ADD http://archive.apache.org/dist/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz /usr/share/
RUN cd /usr/share/ ; tar xvzf apache-maven-3.3.9-bin.tar.gz
RUN rm /usr/share/apache-maven-3.3.9-bin.tar.gz
RUN ln -s /usr/share/apache-maven-3.3.9/bin/mvn /usr/local/bin/mvn
USER jenkins


COPY jobs/yangide/config.xml /usr/share/jenkins/ref/jobs/yangide/config.xml
COPY plugins.txt /usr/share/jenkins/ref/
RUN /usr/local/bin/plugins.sh /usr/share/jenkins/ref/plugins.txt


# broke again ;( due to a weird Jenkins hudson.remoting.RequestAbortedException: java.io.StreamCorruptedException: invalid stream header: 0A0A0A0A
# COPY integrationtest.sh /usr/share/jenkins/integrationtest.sh
# RUN /usr/share/jenkins/integrationtest.sh
","Shell
80.8%





Java
19.2%",2015-10-02 23:38:59,2016-05-20 00:52:07,https://github.com/vorburger/Docker
5,rvaralda/search-go,,"FROM golang:1.5.1
ADD .  /app
WORKDIR /app
RUN go get -d
RUN go build -o es es.go
CMD [""/app/es""]
EXPOSE 9000
","Go
94.2%





HTML
5.8%",2015-10-18 19:35:25,2015-10-18 19:35:41,https://github.com/rvaralda/search-go
6,carbono-io/nogueira-producer,"Organization(name=None, id=13806075)","FROM node:4.1.2
COPY . /nogueira-producer
WORKDIR /nogueira-producer
RUN npm install


EXPOSE 9471


CMD [""/bin/sh"", ""-c"", ""node .""]
","JavaScript
100.0%",2015-11-05 16:48:10,2015-11-05 16:57:01,https://github.com/carbono-io/nogueira-producer
7,sroze/profile,,"FROM php:7-apache


# PHP extension
RUN requirements=""libpq-dev zlib1g-dev libicu-dev git"" \
    && apt-get update && apt-get install -y $requirements && rm -rf /var/lib/apt/lists/* \
    && docker-php-ext-install pdo_pgsql \
    && docker-php-ext-install mbstring \
    && docker-php-ext-install intl \
    && docker-php-ext-install zip \
    && docker-php-ext-install opcache \
    && docker-php-ext-install bcmath \
    && apt-get purge --auto-remove -y


# Apache configuration
RUN a2enmod rewrite
ADD docker/apache-vhost.conf /etc/apache2/sites-enabled/default.conf


# PHP confiugration
ADD docker/php.ini /usr/local/etc/php/php.ini


# Install composer
RUN curl -sS https://getcomposer.org/installer | php \
    && mv composer.phar /usr/bin/composer


# Add the application
ADD . /app
WORKDIR /app


# Remove cache and logs if some and fixes permissions
RUN ((rm -rf var/cache/* && rm -rf var/logs/*) || true) \
    && chown www-data . var/cache var/logs


# Install dependencies
RUN composer install -o


# Set image endpoint
CMD [""/app/docker/run.sh""]
","PHP
74.9%





ApacheConf
15.7%





Shell
5.4%





HTML
4.0%",2015-11-08 16:54:01,2015-11-08 16:54:16,https://github.com/sroze/profile
8,Kapeel/Sailfish,,"# Sailfish 
# VERSION               0.9.2
# 


FROM      ubuntu:14.04.3
MAINTAINER Kapeel Chougule


LABEL Description=""This image is used for running Sailfish RNA seq qauntification tool ""
RUN apt-get update && apt-get install -y build-essential git cmake curl unzip zlib1g-dev wget python libtbb-dev libjemalloc-dev libgoogle-perftools-dev \
pkg-config libbz2-dev
#libhdf5-dev pkg-config liblzma-dev apt-get install libbz2-dev curl unzip
ADD Sailfish_align.pl /usr/bin/
ADD Sailfish_align_with_gz.pl /usr/bi/
RUN [ ""chmod"", ""+x"",  ""/usr/bin/Sailfish_align.pl"" ]
RUN [ ""chmod"", ""+x"",  ""/usr/bin/Sailfish_align_with_gz.pl"" ] \
&& git clone https://github.com/kingsfordgroup/sailfish.git \
&& cd sailfish \
&& mkdir build \
&& cd build \
&& cmake -DFETCH_BOOST=TRUE .. \
&& make \
&& make install \
&& export PATH=$PATH:/root/sailfish/bin \
&& export PATH=$PATH:/root/sailfish/bin \
&& set +o posix


ENTRYPOINT [""sailfish"",""-h""]
","Perl
100.0%",2015-11-06 15:52:39,2016-07-15 18:54:34,https://github.com/Kapeel/Sailfish
9,gbitzes/owncloud-docker,,"FROM owncloud:9.0.1


RUN apt-get update && apt-get install -y \
    vim \
    sudo \
    && rm -rf /var/lib/apt/lists/*


# Fix SSL
RUN sed -i -e 's/\t\t\(.*${APACHE_LOG_DIR}.*\)/\t\t###\1/' /etc/apache2/sites-available/default-ssl.conf
RUN sed -i -e 's!/etc/ssl/certs/ssl-cert-snakeoil.pem!/var/owncloud/ssl/apache.pem!' /etc/apache2/sites-available/default-ssl.conf
RUN sed -i -e 's!/etc/ssl/private/ssl-cert-snakeoil.key!/var/owncloud/ssl/apache.key!' /etc/apache2/sites-available/default-ssl.conf


RUN a2enmod rewrite
RUN a2ensite default-ssl.conf
RUN a2enmod ssl


COPY docker-entrypoint.sh /entrypoint.sh


ENTRYPOINT [""/entrypoint.sh""]
CMD [""apache2-foreground""]
","Shell
100.0%",2015-11-09 19:45:01,2016-04-23 16:04:58,https://github.com/gbitzes/owncloud-docker
10,rgardler/docker-tests,,"FROM php:5.6-apache


COPY ./www /var/www/
","Shell
63.4%





PHP
36.6%",2015-11-07 22:42:37,2015-11-08 00:48:57,https://github.com/rgardler/docker-tests
11,mshige1979/docker_lamp,,"# centos
FROM mshige1979/centos:centos6
MAINTAINER mshige1979


# pacakge install
RUN yum install -y \
  openssh-server \
  httpd \
  supervisor


# mysql
RUN yum install -y http://dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm
RUN yum install -y mysql-community-*


# php
RUN yum install -y --enablerepo=remi-php56 \
  php \
  php-opcache \
  php-devel \
  php-mbstring \
  php-mcrypt \
  php-mysqlnd \
  php-phpunit-PHPUnit \
  php-pecl-xdebug \
  php-pecl-xhprof


# sshd init
RUN sed -ri 's/^#PermitRootLogin yes/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN echo 'root:root' | chpasswd
RUN ssh-keygen -t rsa -N """" -f /etc/ssh/ssh_host_rsa_key


# php
RUN echo '<?php phpinfo(); ?>' > /var/www/html/info.php


# mysql init
RUN /etc/init.d/mysqld start \
  && mysqladmin -u root password 'password' \
  && (echo 'grant all privileges on *.* to root@""%"" identified by ""password"" with grant option;' | mysql -u root -ppassword) \
  && /etc/init.d/mysqld stop


# supervisord init
RUN echo '' >> /etc/supervisord.conf && \
    echo '[program:httpd]' >> /etc/supervisord.conf && \
    echo 'command=/usr/sbin/httpd -D FOREGROUND' >> /etc/supervisord.conf && \
    echo '' >> /etc/supervisord.conf && \
    echo '[program:sshd]' >> /etc/supervisord.conf && \
    echo 'command=/usr/sbin/sshd -D' >> /etc/supervisord.conf && \
    echo '' >> /etc/supervisord.conf && \
    echo '[program:mysqld]' >> /etc/supervisord.conf && \
    echo 'command=/usr/bin/mysqld_safe' >> /etc/supervisord.conf && \
    echo '' >> /etc/supervisord.conf


# port
EXPOSE 22 80 3306


# run
CMD [""/usr/bin/supervisord"", ""-n""]


",,2015-11-12 11:00:21,2015-11-12 11:00:21,https://github.com/mshige1979/docker_lamp
12,bradleybossard/docker-cfdg,,"FROM ubuntu:15.04


MAINTAINER Bradley Bossard <bradleybossard@gmail.com>


RUN apt-get update


RUN apt-get install -y git \
                       flex \
                       bison \
                       libpng-dev \
                       build-essential


WORKDIR /root


RUN git clone https://github.com/MtnViewJohn/context-free.git


WORKDIR /root/context-free


RUN make


RUN cp ./cfdg /usr/bin/


RUN cfdg -s 500 input/mtree.cfdg mtree.png


",,2015-11-17 00:57:05,2015-11-17 00:57:05,https://github.com/bradleybossard/docker-cfdg
13,antirek/docker-compose,,"FROM antirek/astolua


RUN apt-get install -y lame sox


ADD after_start.sh /after_start.sh


RUN chmod +x /after_start.sh


CMD [""/after_start.sh""]
","Lua
82.8%





Shell
11.5%





JavaScript
5.7%",2015-11-17 03:49:15,2016-01-14 07:49:19,https://github.com/antirek/docker-compose
14,antirek/docker-compose,,"FROM ubuntu:14.04.3


MAINTAINER Sergey Dmitriev <serge.dmitriev@gmail.com>


RUN apt-get install -y mysql-server




ADD after_start.sh /after_start.sh


RUN chmod +x /after_start.sh


CMD [""/after_start.sh""]
","Lua
82.8%





Shell
11.5%





JavaScript
5.7%",2015-11-17 03:49:15,2016-01-14 07:49:19,https://github.com/antirek/docker-compose
15,antirek/docker-compose,,"FROM node:5.0.0-wheezy


RUN cd /tmp && \
	git clone https://github.com/antirek/viola-configurator.git


WORKDIR /tmp/viola-configurator


RUN npm install mongoose


RUN npm install


RUN npm install bower -g


RUN bower install --allow-root


RUN npm install gulp -g


RUN gulp


","Lua
82.8%





Shell
11.5%





JavaScript
5.7%",2015-11-17 03:49:15,2016-01-14 07:49:19,https://github.com/antirek/docker-compose
16,hanxi/ws-gateway,,"FROM centos:centos6
MAINTAINER hanxi <hanxi.info@gmail.com>


RUN yum -y install openssh-server epel-release && \
    yum -y install nodejs npm && \
    yum -y install pwgen && \
    rm -f /etc/ssh/ssh_host_dsa_key /etc/ssh/ssh_host_rsa_key && \
    ssh-keygen -q -N """" -t dsa -f /etc/ssh/ssh_host_dsa_key && \
    ssh-keygen -q -N """" -t rsa -f /etc/ssh/ssh_host_rsa_key && \
    sed -i ""s/#UsePrivilegeSeparation.*/UsePrivilegeSeparation no/g"" /etc/ssh/sshd_config && \
    sed -i ""s/UsePAM.*/UsePAM no/g"" /etc/ssh/sshd_config


ADD set_root_pw.sh /set_root_pw.sh
ADD run.sh /run.sh
RUN chmod +x /*.sh
ADD . /src


WORKDIR /src
RUN npm install


ENV AUTHORIZED_KEYS **None**
ENV WSPORT 8080
ENV HTTPPORT 80


EXPOSE 22
EXPOSE 80
EXPOSE 8080


CMD [""/run.sh""]
","JavaScript
72.3%





HTML
16.2%





Shell
11.5%",2015-12-11 06:34:47,2015-12-11 06:35:17,https://github.com/hanxi/ws-gateway
17,cironunes/a2-ts-hello-world,,"FROM node:latest


RUN npm i -g npm
RUN npm i -g phantomjs


RUN apt-get update && apt-get install -y git


RUN git clone https://github.com/ember-cli/ember-cli.git ~/ember-cli
RUN cd ~/ember-cli && npm i


ENTRYPOINT [""/bin/bash""]
","JavaScript
82.0%





HTML
18.0%",2015-12-11 03:23:53,2015-12-11 12:13:35,https://github.com/cironunes/a2-ts-hello-world
18,mapk0y/docker-nginx-sample-publish,,"FROM nginx:1.9
MAINTAINER mapk0y@gmail.com


COPY rocketchat.conf /etc/nginx/conf.d/
# for docker logs
RUN ln -snvf /dev/stdout /var/log/nginx/proxy.access.log
",,2015-11-27 16:13:59,2015-11-27 16:13:59,https://github.com/mapk0y/docker-nginx-sample-publish
19,santoshaitha/sangolang,,"FROM golang:1.5
EXPOSE 8888
WORKDIR /go/src/app
COPY . /go/src/app
RUN ["".shipped/build""]
CMD .shipped/run
","Go
67.6%





Shell
32.4%",2015-12-11 17:59:54,2015-12-11 19:47:07,https://github.com/santoshaitha/sangolang
20,lojzik/dockerfile-php-cli,,"FROM debian:jessie
RUN apt-get update \ 
    && apt-get install -y \
        php-pear \
        php5-cli \
        php5-common \
        php5-curl \
        php5-gd \
        php5-imap \
        php5-intl \
        php5-ldap \
        php5-mysqlnd \
        php5-pgsql \
        php5-recode \
        php5-sqlite \
        php5-tidy \
        php5-xmlrpc \
        php5-xsl \
    && apt-get -y clean \
    && apt-get -y purge \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*          


#CMD [""/bin/bash""]
",,2015-12-11 16:11:08,2015-12-11 16:11:08,https://github.com/lojzik/dockerfile-php-cli
21,patpatpatpatpat/digestus,,"FROM python:3.5


ENV PYTHONUNBUFFERED 1


# Requirements have to be pulled and installed here, otherwise caching won't work
COPY ./requirements /requirements


RUN pip install -r /requirements/production.txt


RUN groupadd -r django && useradd -r -g django django
COPY . /app
RUN chown -R django /app


COPY ./compose/django/gunicorn.sh /gunicorn.sh
COPY ./compose/django/entrypoint.sh /entrypoint.sh


RUN chmod +x /entrypoint.sh && chown django /entrypoint.sh
RUN chmod +x /gunicorn.sh && chown django /gunicorn.sh


WORKDIR /app


ENTRYPOINT [""/entrypoint.sh""]
","Python
73.3%





HTML
17.8%





Shell
3.8%





JavaScript
2.7%





CSS
1.5%





Nginx
0.9%",2015-11-23 12:59:07,2016-04-12 06:29:37,https://github.com/patpatpatpatpat/digestus
22,patpatpatpatpat/digestus,,"FROM nginx:latest
ADD nginx.conf /etc/nginx/nginx.conf
","Python
73.3%





HTML
17.8%





Shell
3.8%





JavaScript
2.7%





CSS
1.5%





Nginx
0.9%",2015-11-23 12:59:07,2016-04-12 06:29:37,https://github.com/patpatpatpatpat/digestus
23,Burste/sailsDemo,,"FROM miiixr/picklete_env
COPY ./ /nodjsSample
WORKDIR /nodjsSample


RUN /bin/bash -l -c 'npm i'
RUN /bin/bash -l -c 'node_modules/.bin/grunt prod'


ENV PORT ""1337""
ENV NODE_ENV ""production""
ENV DOMAIN_HOST ""localhost:1337""


EXPOSE 1337
CMD /bin/bash -l -c 'npm start'
","JavaScript
61.3%





HTML
38.6%





CSS
0.1%",2015-11-24 09:38:23,2015-11-24 09:47:33,https://github.com/Burste/sailsDemo
24,ViaQ/nulecule-fluentd,"Organization(name=None, id=15320289)","FROM projectatomic/atomicapp:0.1.12
MAINTAINER The ViaQ Community <community@TBA>


LABEL io.projectatomic.nulecule.providers=""docker"" \
      io.projectatomic.nulecule.specversion=""0.0.2""


ADD /Nulecule /Dockerfile /application-entity/
ADD /artifacts /application-entity/artifacts
","Shell
100.0%",2015-11-23 21:28:20,2016-01-27 14:56:59,https://github.com/ViaQ/nulecule-fluentd
25,P-jiao/P-project,,"FROM centos:6
MAINTAINER Takayuki Miwa <i@tkyk.name>


ENV code_root /code
ENV httpd_conf ${code_root}/config/httpd.conf


RUN rpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
RUN rpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
RUN yum install -y httpd
RUN yum install --enablerepo=epel,remi-php56,remi -y \
                              php \
                              php-cli \
                              php-gd \
                              php-mbstring \
                              php-mcrypt \
                              php-mysqlnd \
                              php-pdo \
                              php-xml \
                              php-xdebug \
                              tcpdump
RUN sed -i -e ""s|^;date.timezone =.*$|date.timezone = PRC |"" /etc/php.ini
RUN mv /usr/sbin/tcpdump /usr/local/bin
ADD . $code_root
RUN test -e $httpd_conf && echo ""Include $httpd_conf"" >> /etc/httpd/conf/httpd.conf
EXPOSE 80
CMD [""/usr/sbin/apachectl"", ""-D"", ""FOREGROUND""]


","PHP
98.4%





Other
1.6%",2015-11-24 01:10:43,2015-11-24 08:19:28,https://github.com/P-jiao/P-project
26,jtblin/aws-mock-metadata,,"FROM alpine:3.3
MAINTAINER Jerome Touffe-Blin <jtblin@gmail.com>


RUN apk --update add ca-certificates \
	&& rm -rf /var/cache/apk/*


ADD /bin/aws-mock-metadata-linux /bin/aws-mock-metadata


EXPOSE 45000
ENTRYPOINT [""aws-mock-metadata""]
","Go
64.0%





Shell
18.2%





Makefile
17.8%",2015-11-22 09:42:50,2017-11-05 19:19:24,https://github.com/jtblin/aws-mock-metadata
27,MCHacker/Code-Hub_Ghost,,"FROM node:0.10-slim


RUN groupadd user && useradd --create-home --home-dir /home/user -g user user


RUN set -x \
	&& apt-get update \
	&& apt-get install -y --no-install-recommends curl ca-certificates \
	&& rm -rf /var/lib/apt/lists/*


# grab gosu for easy step-down from root
RUN gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
RUN arch=""$(dpkg --print-architecture)"" \
	&& set -x \
	&& curl -o /usr/local/bin/gosu -SL ""https://github.com/tianon/gosu/releases/download/1.2/gosu-$arch"" \
	&& curl -o /usr/local/bin/gosu.asc -SL ""https://github.com/tianon/gosu/releases/download/1.2/gosu-$arch.asc"" \
	&& gpg --verify /usr/local/bin/gosu.asc \
	&& rm /usr/local/bin/gosu.asc \
	&& chmod +x /usr/local/bin/gosu


ENV GHOST_SOURCE /usr/src/ghost
WORKDIR $GHOST_SOURCE


ENV GHOST_VERSION 0.6.0


RUN buildDeps=' \
		gcc \
		make \
		python \
		unzip \
	' \
	&& set -x \
	&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \
	&& curl -sSL ""https://ghost.org/archives/ghost-${GHOST_VERSION}.zip"" -o ghost.zip \
	&& unzip ghost.zip \
	&& npm install --production \
	&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \
	&& rm ghost.zip \
	&& npm cache clean \
	&& rm -rf /tmp/npm*


ENV GHOST_CONTENT /var/lib/ghost
RUN mkdir -p ""$GHOST_CONTENT"" && chown -R user:user ""$GHOST_CONTENT"" ""$GHOST_SOURCE""
ADD config.js /var/lib/ghost/
#VOLUME $GHOST_CONTENT


COPY docker-entrypoint.sh /entrypoint.sh
ENTRYPOINT [""/entrypoint.sh""]


EXPOSE 2368
CMD [""npm"", ""start"", ""--production""]
","JavaScript
87.7%





HTML
6.3%





CSS
5.4%





Other
0.6%",2015-12-11 11:52:41,2015-12-11 11:54:41,https://github.com/MCHacker/Code-Hub_Ghost
28,mabahamo/docker-tinytinyrss,,"FROM php:5.6-apache
MAINTAINER Manuel Bahamondez ""manuel@bahamondez.com""
WORKDIR /usr/src
RUN apt-get update && apt-get install -y wget unzip libmcrypt-dev libpq-dev postgresql-client && apt-get clean
RUN docker-php-ext-install pgsql mbstring mcrypt
RUN wget https://tt-rss.org/gitlab/fox/tt-rss/repository/archive.zip?ref=master -O archive.zip; unzip archive.zip; rm -f archive.zip
RUN mv tt-rss.git /var/www/html/ttrss
RUN echo ""Hello World!"" > /var/www/html/index.html
RUN chown -R www-data:www-data /var/www/html/ttrss
",,2015-12-06 22:00:32,2015-12-07 03:05:06,https://github.com/mabahamo/docker-tinytinyrss
29,waylonm/deluge,,"FROM ubuntu:latest
MAINTAINER waylonm <waylon90@gmail.com>


RUN 	apt-get install -qy software-properties-common && \
        add-apt-repository ppa:deluge-team/ppa && \
	apt-get update -q && \
	apt-get install -qy deluged deluge-web


ADD start.sh /start.sh


VOLUME [""/data""]


#Torrent Port
EXPOSE 53160
EXPOSE 53160/udp


#WebUI
EXPOSE 8112


#Daemon
EXPOSE 58846


CMD [""/start.sh""]
","Shell
100.0%",2015-12-06 10:59:15,2015-12-06 11:14:03,https://github.com/waylonm/deluge
0,yamotonalds/hound_test,,"FROM ruby:2.2
ENV HOME /root
WORKDIR $HOME


RUN apt-get update && apt-get install git
RUN git clone https://github.com/thoughtbot/hound.git
WORKDIR $HOME/hound
RUN echo 'gem ""therubyracer""' >> Gemfile && echo 'gem ""foreman""' >> Gemfile
RUN gem install bundler
RUN bundle install --without test development


ENV RAILS_ENV production
ADD .env $HOME/hound/


CMD bundle exec rake db:create && bundle exec rake db:migrate && bundle exec rake assets:precompile && bundle exec foreman start


",,2015-12-06 13:49:54,2015-12-06 13:49:54,https://github.com/yamotonalds/hound_test
1,dmitrinesterenko/ruby_snapshot_docker,,"FROM ubuntu:14.04
MAINTAINER Dmitri Nesterenko <me@dmitri.co>


RUN apt-get update && apt-get -y install \
  gcc \
  make \
  vim \
  wget
WORKDIR /tmp
# Install the GlobalSign Domain Validation certificate
# and use it during the download
COPY GlobalSign_Domain_Validation_CA.pem /etc/ssl/certs/GlobalSign_Domain_Validation_CA.pem
RUN wget --ca-certificate=/etc/ssl/certs/GlobalSign_Domain_Validation_CA.pem https://ftp.ruby-lang.org/pub/ruby/snapshot.tar.gz
RUN tar xvf snapshot.tar.gz
WORKDIR /tmp/snapshot
RUN ./configure
RUN make
RUN make install
RUN rm -rf /tmp/snapshot
RUN rm -rf /tmp/snapshot.tar.gz
ENTRYPOINT [""irb""]
#ENTRYPOINT [""ruby"", ""-v""]
#CMD [""irb""]
","Ruby
65.7%





Shell
34.3%",2015-11-27 05:49:21,2015-11-27 07:36:36,https://github.com/dmitrinesterenko/ruby_snapshot_docker
2,bezelga/counting,,"FROM alpine:latest


RUN apk add --update ruby ruby-bundler\
                    ruby-io-console \
                    && rm -rf /var/cache/apk/*


RUN mkdir /app
WORKDIR /app
ADD . /app


RUN bundle install


EXPOSE 4567
CMD bundle exec rackup -p 4567 --host 0.0.0.0
","Ruby
100.0%",2015-11-26 23:30:38,2015-11-26 23:31:52,https://github.com/bezelga/counting
3,vando/docker-nagios3,,"FROM debian:8.2
MAINTAINER Facundo Bianco < vando [at] van [dot] do >


#ENV NAGIOSUSER nagiosadmin
#ENV NAGIOSPASS admin
ENV TERM xterm


COPY bin/* /usr/local/bin/
RUN find /usr/local/bin -type f -not -executable -exec chmod +x {} \;


RUN export DEBIAN_FRONTEND=noninteractive ; apt-get update && \
    apt-get install -y --no-install-recommends \
    apache2 exim4 monitoring-plugins-basic nagios3 nagios-images


RUN dpkg-statoverride --update --add nagios www-data 2710 /var/lib/nagios3/rw
RUN dpkg-statoverride --update --add nagios nagios 751 /var/lib/nagios3


COPY conf/update-exim4.conf.conf /etc/exim4/update-exim4.conf.conf
COPY conf/passwd.client /etc/exim4/passwd.client


COPY conf/000-nagios3.conf /etc/apache2/sites-available/
RUN rm /etc/apache2/sites-enabled/000-default.conf
RUN ln -sr /etc/apache2/sites-available/000-nagios3.conf /etc/apache2/sites-enabled


RUN htpasswd -bc /etc/nagios3/users.htpasswd ${NAGIOSUSER:-nagiosadmin} ${NAGIOSPASS:-admin}


EXPOSE 80
CMD [""/usr/local/bin/nagios3.run""]
","Shell
100.0%",2015-12-02 13:14:25,2015-12-02 13:19:15,https://github.com/vando/docker-nagios3
4,rewardle/python,"Organization(name=None, id=12688396)","FROM debian:jessie
MAINTAINER Kevin Littlejohn <kevin@littlejohn.id.au>


RUN apt-get -yq update \
  && apt-get -yq install git groff less python python-dev python-pip libyaml-dev jq libmysqlclient-dev curl \
  && pip install awscli MySQL-python boto3 \
  && curl -O -L http://dev.mysql.com/get/Downloads/Connector-Python/mysql-connector-python_2.1.3-1debian8.2_all.deb \
  && dpkg -i mysql-connector-python_2.1.3-1debian8.2_all.deb \
  && rm mysql-connector-python_2.1.3-1debian8.2_all.deb


RUN aws configure set region ap-southeast-2


WORKDIR /app
",,2015-12-02 00:16:59,2016-06-16 14:06:16,https://github.com/rewardle/python
5,alexvaluyskiy/fantlab_bookcases,,"FROM        perl:5.22
MAINTAINER  Alex Valuyskiy olval@ciklum.com


RUN cpanm Mojolicious
RUN cpanm common::sense


RUN cachebuster=cb89cc2 git clone https://github.com/ravengerUA/fantlab_bookcases.git
RUN cd fantlab_bookcases


EXPOSE 3000


WORKDIR fantlab_bookcases
CMD morbo script/fantlab_bookcases -l http://*:3000
","Perl
67.5%





Perl 6
29.9%





HTML
2.2%





Batchfile
0.4%",2015-11-18 17:03:32,2015-11-19 13:20:30,https://github.com/alexvaluyskiy/fantlab_bookcases
6,elend80/docker-debian-nginx-hhvm-wordpress,,"FROM elend80/docker-debian-nginx-hhvm:latest
MAINTAINER ""Youngho Byun (echoes)"" <elend80@gmail.com>


ENV TERM xterm


RUN mkdir /var/www
RUN cp /usr/share/nginx/html/50x.html /var/www/50x.html
RUN rm -rf /usr/share/nginx/html


ADD nginx.conf /etc/nginx/nginx.conf


ADD default.conf /etc/nginx/conf.d/default.conf


RUN adduser www-data www-data


# Wordpress


ADD https://wordpress.org/latest.tar.gz /tmp/latest.tar.gz
RUN cd tmp && tar xvf latest.tar.gz && \
    mv /tmp/wordpress/* /var/www && \
    rm -rf wordpress/* && \
    rm latest.tar.gz && \
    chown -R www-data:www-data /var/www


ADD wp-config-sample.php /var/www/wp-config-sample.php


EXPOSE 80
EXPOSE 443


CMD [""/usr/bin/supervisord""]
","PHP
80.9%





Nginx
19.1%",2015-11-18 08:54:04,2016-01-19 06:06:20,https://github.com/elend80/docker-debian-nginx-hhvm-wordpress
7,exsules/docker-base,"Organization(name=None, id=6639393)","# Exsules Base image is a alpine image with all the dependencies needed by Exsules Platform
#
# VERSION               0.0.1


FROM       alpine:3.2
MAINTAINER exsules <contact@exsules.com>


# Set locale
ENV LC_ALL en_US.UTF-8
ENV LANG en_US.utf8


# First install apt needed utility package
RUN apk add --update \
  git \
  sudo \
  postgresql-client \
  postgresql-dev \
  curl \
  unzip \
  wget && \
  rm -rf /var/cache/apk/*


ENV S6_VERSION 1.16.0.0


RUN curl -sSL https://github.com/just-containers/s6-overlay/releases/download/v${S6_VERSION}/s6-overlay-amd64.tar.gz -o /tmp/s6-overlay.tar.gz
RUN tar -zxf /tmp/s6-overlay.tar.gz -C /


#RUN mkdir -p /var/run/sshd && echo 'root:exsulesbasecontainer' | chpasswd


# Update/Upgrad all packages on each build
ENTRYPOINT [""/init""]


ONBUILD RUN apk update && apk upgrade
",,2015-11-18 11:33:02,2015-11-18 11:33:02,https://github.com/exsules/docker-base
8,besn0847/armswarm,,"FROM hypriot/rpi-alpine-scratch


RUN apk update && \
	apk add openvpn socat supervisor


ADD ./bin/ /bin/
ADD ./etc/supervisord.conf /etc/
ADD ./etc/openvpn/docker.ovpn /etc/openvpn/
ADD ./etc/ssl/ /etc/ssl/
ADD ./etc/supervisor.d/agent.ini /etc/supervisor.d/


CMD /usr/bin/supervisord --nodaemon --configuration /etc/supervisord.conf  
","JavaScript
53.1%





CSS
44.7%





HTML
2.2%",2015-11-27 15:31:57,2016-08-14 08:31:50,https://github.com/besn0847/armswarm
9,besn0847/armswarm,,"FROM alpine


RUN apk update && \
	apk add openvpn socat supervisor


ADD ./bin/ /bin/
ADD ./etc/supervisord.conf /etc/
ADD ./etc/openvpn/docker.ovpn /etc/openvpn/
ADD ./etc/ssl/ /etc/ssl/
ADD ./etc/supervisor.d/agent.ini /etc/supervisor.d/


CMD /usr/bin/supervisord --nodaemon --configuration /etc/supervisord.conf  
","JavaScript
53.1%





CSS
44.7%





HTML
2.2%",2015-11-27 15:31:57,2016-08-14 08:31:50,https://github.com/besn0847/armswarm
10,besn0847/armswarm,,"FROM besn0847/alpinevpn


RUN echo ""@testing http://nl.alpinelinux.org/alpine/edge/testing"" >> /etc/apk/repositories && \ 
	apk update && \
        apk add openvpn socat supervisor consul@testing && \
	mkdir /data 


ADD ./bin/ /bin/
ADD ./etc/openvpn/ /etc/openvpn/
ADD ./etc/ssl/ /etc/ssl/
ADD ./etc/supervisor.d/ /etc/supervisor.d/
ADD ./static/ /static/


CMD /usr/bin/supervisord --nodaemon --configuration /etc/supervisord.conf


","JavaScript
53.1%





CSS
44.7%





HTML
2.2%",2015-11-27 15:31:57,2016-08-14 08:31:50,https://github.com/besn0847/armswarm
11,epifanio/GSOC2015,,"FROM andrewosh/binder-base


MAINTAINER Massimo Di Stefano <epiesasha@me.com>


USER root


ADD install_script/apt-get-update.sh /tmp/apt-get-update.sh
RUN /tmp/apt-get-update.sh


ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8


#RUN /usr/bin/gem install gist
#RUN /usr/bin/gem install fpm




#RUN useradd -m -s /bin/bash main
RUN echo ""root:root"" | chpasswd
RUN echo ""main:main"" | chpasswd


#RUN wget --quiet https://github.com/krallin/tini/releases/download/v0.6.0/tini && \
#    echo ""d5ed732199c36a1189320e6c4859f0169e950692f451c03e7854243b95f4234b *tini"" | sha256sum -c - && \
#    mv tini /usr/local/bin/tini && \
#    chmod +x /usr/local/bin/tini
 


USER main


ENV HOME /home/main
ENV SHELL /bin/bash


ENV USER main
WORKDIR $HOME


# add osgeolive data
ADD install_script/getdata.sh /tmp/getdata.sh
RUN bash /tmp/getdata.sh


# add GSOC notebooks
RUN mkdir -p /home/main/notebooks/GSOC/docs
COPY GSOC /home/main/notebooks/GSOC
COPY docs/images /home/main/notebooks/GSOC/docs/images


# setup postgresql
USER root


RUN useradd -m -s /bin/bash postgres
RUN echo ""postgres:postgres"" | chpasswd






RUN apt-get -qq update && apt-get -qq install -yq --no-install-recommends postgresql-9.4 \
                                                  postgresql-client-9.4 \
                                                  postgresql-contrib-9.4 \
                                                  postgis postgresql-9.4-postgis-2.1 \
                                                  postgresql-contrib \
                                                  nano && apt-get clean
 
#ADD install_script/install_db.sh /tmp/install_db.sh
#RUN /tmp/install_db.sh


USER postgres


# start db and make new user and db (osgeo) listening from all host
RUN /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER main WITH SUPERUSER PASSWORD 'main';"" &&\
    createdb -O main main


# add naturalhear data into postgis
ADD install_script/natualearth.sh /tmp/natualearth.sh
RUN /tmp/natualearth.sh


RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.4/main/pg_hba.conf
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.4/main/postgresql.conf


EXPOSE 5432


USER main


RUN wget --progress=dot:mega https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh --output-document=/home/main/Miniconda3-latest-Linux-x86_64.sh
RUN bash /home/main/Miniconda3-latest-Linux-x86_64.sh -b && rm -rf /home/main/Miniconda3-latest-Linux-x86_64.sh


ENV PATH $HOME/miniconda3/bin:$PATH


# [geos gdal proj4 readline sphinx freetype] Total:        175.0 MB
RUN conda install -y gcc geos gdal proj4 readline sphinx freetype


# add some DOCS from osgeolive
COPY docs /tmp/docs
ADD install_script/build_docs.sh /tmp/build_docs.sh
RUN /tmp/build_docs.sh


ADD install_script/start-notebook.sh /home/main/start-notebook.sh


## Install Julia kernel


#RUN julia -e 'Pkg.add(""IJulia"")' && julia -e 'Pkg.add(""Gadfly"")' && julia -e 'Pkg.add(""RDatasets"")'


## Install R kernel (and r-essential packages ~ 110mb) Total:       174.5 MB
RUN conda install -y -c r r-essentials


#ADD script/installRpackages.sh /tmp/installRpackages.sh
#RUN bash /tmp/installRpackages.sh


ADD install_script/condalist.txt /tmp/condalist.txt
RUN conda install -y --file /tmp/condalist.txt


ADD install_script/condalist-IOOS.txt /tmp/condalist-IOOS.txt
RUN conda install -y -c IOOS --file /tmp/condalist-IOOS.txt


USER root
RUN apt-get -y install libreadline6-dev


USER main
ADD install_script/requirements.txt /tmp/requirements.txt
RUN pip install -r /tmp/requirements.txt


#
# RUN pip install git+https://github.com/calysto/octave_kernel --user


COPY install_script/pygrass /home/main/.local/share/jupyter/kernels/pygrass




RUN pip install -U ipywidgets --user
#


RUN python -m bash_kernel.install


ADD install_script/cesiumwidget.sh /tmp/cesiumwidget.sh
RUN /tmp/cesiumwidget.sh


#ADD install_script/install_nbextension.sh /tmp/install_nbextension.sh
#RUN /tmp/install_nbextension.sh




USER root


#ADD install_script/install_ossim.sh /tmp/install_ossim.sh
#RUN /tmp/install_ossim.sh


RUN apt-get install -y ossim-core


RUN chmod a+x /home/main/start-notebook.sh
ADD install_script/pgstart.sh /usr/local/bin/pgstart.sh
COPY GSOC /home/main/notebooks/GSOC
COPY docs/images /home/main/notebooks/GSOC/docs/images
RUN chmod -R 777 /home/main/notebooks
RUN chown -R main:main /home/main/notebooks


#RUN /usr/bin/pip install ipykernel
RUN /home/main/miniconda3/bin/conda clean -pt -y
RUN rm -rf /tmp/*
RUN apt-get clean


RUN apt-get install -y mlocate
RUN updatedb


USER main


#EXPOSE 8888


ENV LD_LIBRARY_PATH /usr/lib/grass70/lib:/usr/local/lib:/usr/lib/:$LD_LIBRARY_PATH
ENV PYTHONPATH /usr/lib/grass70/etc/python:$PYTHONPATH
ENV GISBASE /usr/lib/grass70/
ENV PATH /usr/local/bin:/usr/lib/grass70/bin:/usr/lib/grass70/scripts:$PATH
ENV GIS_LOCK 77
ENV GISRC /home/main/.grass7/rc
ENV GISDBASE /home/main/notebooks/data/grass7data/
ENV OSSIM_PREFS_FILE /usr/local/share/ossim/ossim_preference


#WORKDIR /home/main/notebooks
#ENTRYPOINT [""tini"", ""--""]
#CMD [""/home/main/start-notebook.sh""]
","Jupyter Notebook
91.9%





Python
4.4%





HTML
3.5%





Other
0.2%",2015-11-27 21:56:15,2016-05-31 02:47:26,https://github.com/epifanio/GSOC2015
12,articulate/docker-kong-wait,"Organization(name=None, id=766431)","FROM mashape/kong:0.5.4
MAINTAINER Brian Stolz, bstolz@articulate.com


ENV CASSANDRA_HOSTNAME cassandra
ENV CASSANDRA_PORT 9042


COPY start_kong /usr/bin/start_kong


CMD start_kong
","Shell
100.0%",2015-11-25 16:58:29,2017-06-29 05:02:30,https://github.com/articulate/docker-kong-wait
13,articulate/docker-kong-wait,"Organization(name=None, id=766431)","FROM mashape/kong:0.6.1
MAINTAINER Brian Stolz, bstolz@articulate.com


ENV CASSANDRA_HOSTNAME cassandra
ENV CASSANDRA_PORT 9042


COPY start_kong /usr/bin/start_kong


CMD start_kong
","Shell
100.0%",2015-11-25 16:58:29,2017-06-29 05:02:30,https://github.com/articulate/docker-kong-wait
14,ostretsov/zabbix,,"FROM phusion/baseimage:0.9.17


RUN apt-get update 


RUN apt-get install -y \
    postgresql \
    apache2 \
    php5 php5-gd php5-pgsql \
    wget \
    ttf-dejavu-core \
    && echo ""work_mem = 128MB"" >>/etc/postgresql/9.3/main/postgresql.conf && echo ""maintenance_work_mem = 256MB"" >>/etc/postgresql/9.3/main/postgresql.conf


RUN wget http://repo.zabbix.com/zabbix/2.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_2.4-1+trusty_all.deb && \
    dpkg -i zabbix-release_2.4-1+trusty_all.deb && \
    apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        zabbix-server-pgsql \
        zabbix-frontend-php \
    && sed -ri ""s/# php_value date\.timezone Europe\/Riga/php_value date.timezone Europe\/Moscow/"" /etc/apache2/conf-available/zabbix.conf \
    && sed -ri ""s/local\s+all\s+all\s+peer/local\tall\tall\tmd5/"" /etc/postgresql/9.3/main/pg_hba.conf
","Makefile
52.9%





Shell
47.1%",2015-11-25 08:23:45,2016-10-20 16:12:22,https://github.com/ostretsov/zabbix
15,cherry4477/datahub_user,,"FROM ubuntu




ENV CATALINA_HOME /usr/local/tomcat
ENV PATH $CATALINA_HOME/bin:$PATH
RUN mkdir -p ""$CATALINA_HOME""
WORKDIR $CATALINA_HOME


# see https://www.apache.org/dist/tomcat/tomcat-8/KEYS
RUN gpg --keyserver pool.sks-keyservers.net --recv-keys \
	05AB33110949707C93A279E3D3EFE6B686867BA6 \
	07E48665A34DCAFAE522E5E6266191C37C037D42 \
	47309207D818FFD8DCD3F83F1931D684307A10A5 \
	541FBE7D8F78B25E055DDEE13C370389288584E7 \
	61B832AC2F1C5A90F0F9B00A1C506407564C17A3 \
	713DA88BE50911535FE716F5208B0AB1D63011C7 \
	79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED \
	9BA44C2621385CB966EBA586F72C284D731FABEE \
	A27677289986DB50844682F8ACB77FC2E86E29AC \
	A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 \
	DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 \
	F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE \
	F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23


ENV TOMCAT_MAJOR 7
ENV TOMCAT_VERSION 7.0.65
ENV TOMCAT_TGZ_URL https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz


RUN set -x \
	&& apt-get install curl -y \
	&& curl -fSL ""$TOMCAT_TGZ_URL"" -o tomcat.tar.gz \
	&& curl -fSL ""$TOMCAT_TGZ_URL.asc"" -o tomcat.tar.gz.asc \
	&& gpg --verify tomcat.tar.gz.asc \
	&& tar -xvf tomcat.tar.gz --strip-components=1 \
	&& rm bin/*.bat \
	&& rm tomcat.tar.gz*


ENV MAVEN_VERSION 3.3.3


RUN curl -fsSL http://archive.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar xzf - -C /usr/share \
  && mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven \
  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn


EXPOSE 8080


ENV MAVEN_HOME /usr/share/maven
ENV JAVA_HOME  /usr/local/tomcat/jdk1.7.0_67
RUN curl -fSL https://s3.cn-north-1.amazonaws.com.cn/complier/jdk.tar.gz -o jdk.tar.gz\
    && tar -xf jdk.tar.gz


ADD . ./webapps


RUN cd  ./webapps/ \
    && mvn  install


run cd ./webapps/ \
    && mkdir  data \
    && chmod 666 data \
    && mv ./server.xml /usr/local/tomcat/conf/ \
    && mv ./target/datahub_user-1.0-SNAPSHOT .


VOLUME /usr/local/tomcat/webapps/data


RUN chmod +x ./webapps/start.sh




ENV SERVICE_NAME=datahub_user


CMD [""./webapps/start.sh""]
","Java
98.6%





Shell
1.4%",2015-11-26 07:07:55,2015-11-26 07:07:56,https://github.com/cherry4477/datahub_user
16,januswel/docker-centos,,"FROM centos:7
MAINTAINER janus_wel <janus.wel.3@gmail.com>


RUN yum -y update && yum clean all
",,2015-11-26 14:51:15,2015-11-26 14:51:15,https://github.com/januswel/docker-centos
17,kmcnally26/docker-tomcat7,,"FROM centos:centos6
MAINTAINER Kevin McNally ""kevin.mcnally@lastminute.com""
ENV REFRESHED_AT 2015-12-02-15:02


RUN yum -y install wget tar java-1.7.0-openjdk


ENV TOMCAT_VERSION 7.0.55
RUN wget -q https://archive.apache.org/dist/tomcat/tomcat-7/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz \ 
        -O /tmp/catalina.tar.gz
RUN tar xzf /tmp/catalina.tar.gz -C /opt
RUN ln -s /opt/apache-tomcat-${TOMCAT_VERSION} /opt/tomcat
RUN rm /tmp/catalina.tar.gz
RUN rm -rf /opt/tomcat/webapps/examples /opt/tomcat/webapps/docs


ENV CATALINA_HOME /opt/tomcat
ENV PATH $PATH:$CATALINA_HOME/bin


EXPOSE 8080
CMD $CATALINA_HOME/bin/catalina.sh run
","HTML
62.8%





Java
37.2%",2015-12-03 13:31:53,2015-12-03 14:11:33,https://github.com/kmcnally26/docker-tomcat7
18,micheldebree/lab2-web,,"FROM nginx
MAINTAINER M&M mvdb@mvdb.com


COPY index.html /usr/share/nginx/html/
","HTML
100.0%",2015-12-01 11:47:11,2015-12-01 11:56:35,https://github.com/micheldebree/lab2-web
19,bradleybossard/reverse-engineering,,"FROM bradleybossard/docker-common-devbox


RUN apt-get update && apt-get install -y gcc
","Assembly
93.1%





C
6.9%",2015-12-31 00:39:51,2015-12-31 01:09:00,https://github.com/bradleybossard/reverse-engineering
20,Videodrome666/revisitedminer,,"#
# Dockerfile for cpuminer
# usage: docker run creack/cpuminer --url xxxx --user xxxx --pass xxxx
# ex: docker run creack/cpuminer --url stratum+tcp://ltc.pool.com:80 --user creack.worker1 --pass abcdef
#
#


FROM            ubuntu:14.04
MAINTAINER      Guillaume J. Charmes <guillaume@charmes.net>


RUN             apt-get update -qq && \
                apt-get install -qqy automake libcurl4-openssl-dev git make


RUN             git clone https://github.com/pooler/cpuminer


RUN             cd cpuminer && \
                ./autogen.sh && \
                ./configure CFLAGS=""-O3"" && \
                make


WORKDIR         /cpuminer
ENTRYPOINT      [""./minerd""]
","Assembly
60.1%





C
38.4%





Other
1.3%





Other
0.2%",2016-01-02 14:47:58,2016-01-02 14:49:35,https://github.com/Videodrome666/revisitedminer
21,bingoarun/mesos-demo-app,,"FROM ubuntu
MAINTAINER Arun prasath <arunprasath33@gmail.com>
RUN apt-get update && apt-get install -y \
    python \
    python-pip
RUN pip install flask
RUN pip install apscheduler==2.1.2
WORKDIR /root/
COPY app.py /root/app.py
EXPOSE 1234
CMD python /root/app.py
","Python
100.0%",2015-12-29 05:48:43,2015-12-29 06:15:59,https://github.com/bingoarun/mesos-demo-app
22,PierrickPuimeanChieze/OurMemory,,"FROM httpd:2.4
COPY ./site/ /usr/local/apache2/htdocs/
","JavaScript
49.8%





HTML
29.2%





CSS
21.0%",2015-12-25 23:49:56,2016-04-22 17:17:30,https://github.com/PierrickPuimeanChieze/OurMemory
23,zchee/vimhelp-jp-submodules,,"FROM ubuntu:wily
MAINTAINER zchee <k@zchee.io>


# Copy all current directory


# Install dependency packages
# Generate vim helptags use update.vim
RUN set -ex \
	&& sed -i 's/http:\/\/archive.ubuntu.com\/ubuntu/http:\/\/ubuntutym.u-toyama.ac.jp\/ubuntu/g' /etc/apt/sources.list \
	&& apt-get update \
	&& apt-get install -y \
		git vim \
	\
	&& git clone https://github.com/zchee/vimhelp-jp-submodules.git /usr/src/doc \
	&& cd /usr/src/doc \
	&& git submodule update --init --force \
	&& git remote set-url origin git@github.com:zchee/vimhelp-jp-submodules.git \
	\
	&& vim -c ""source %"" -c ""qa!"" -- update.vim >/dev/null


# Volume share /usr/src/doc directory
VOLUME /usr/src/doc
CMD [""/bin/bash""]
","Vim script
100.0%",2016-01-04 18:28:14,2016-06-10 14:20:30,https://github.com/zchee/vimhelp-jp-submodules
24,Shraddha512/AdvancedDocker,,"FROM    centos:centos6


# Enable EPEL for Node.js
RUN     rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
# Install Node.js and npm
RUN     yum install -y npm


# Bundle app source
COPY . /src
# Install app dependencies
RUN cd /src; npm install


EXPOSE  8080
CMD [""node"", ""/src/main.js"", ""8080""]
","Shell
97.5%





JavaScript
2.5%",2015-11-22 21:52:25,2015-11-23 04:09:34,https://github.com/Shraddha512/AdvancedDocker
25,Shraddha512/AdvancedDocker,,"FROM    centos:centos6


# Enable EPEL for Node.js
RUN     rpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm
# Install Node.js and npm
RUN     yum install -y npm


# Bundle app source
COPY . /src
# Install app dependencies
RUN cd /src; npm install


EXPOSE  8080
CMD [""node"", ""/src/main.js"", ""8080""]
","Shell
97.5%





JavaScript
2.5%",2015-11-22 21:52:25,2015-11-23 04:09:34,https://github.com/Shraddha512/AdvancedDocker
26,Shraddha512/AdvancedDocker,,"FROM ubuntu:14.04
MAINTAINER Shraddha Naik


RUN apt-get update  
RUN apt-get install -y socat
RUN touch temp.txt 
RUN echo ""Hello this is Shraddha Naik"" > temp.txt


CMD socat TCP-LISTEN:9001 SYSTEM:'cat temp.txt'
","Shell
97.5%





JavaScript
2.5%",2015-11-22 21:52:25,2015-11-23 04:09:34,https://github.com/Shraddha512/AdvancedDocker
27,Shraddha512/AdvancedDocker,,"FROM ubuntu:14.04
MAINTAINER Shraddha Naik


RUN apt-get -y install curl
","Shell
97.5%





JavaScript
2.5%",2015-11-22 21:52:25,2015-11-23 04:09:34,https://github.com/Shraddha512/AdvancedDocker
28,gacosta89/knightsTour,,"FROM node:argon
EXPOSE 3000
WORKDIR ""/home/knightsTour""
ADD . ./
RUN cd /home/knightsTour && npm install
CMD [""npm"", ""start""]
","JavaScript
98.6%





HTML
1.4%",2015-12-18 19:25:22,2017-12-04 12:40:28,https://github.com/gacosta89/knightsTour
29,shaileshagr/test,,,"Java
100.0%",2015-12-18 23:32:26,2015-12-19 00:06:37,https://github.com/shaileshagr/test
0,volteoind/smartport,"Organization(name=None, id=16285292)","###
# swagger-ui-builder - https://github.com/swagger-api/swagger-ui/
# Container for building the swagger-ui static site
#
# Build: docker build -t swagger-ui-builder .
# Run:   docker run -v $PWD/dist:/build/dist swagger-ui-builder
#
###


FROM    ubuntu:14.04
MAINTAINER dnephin@gmail.com


ENV     DEBIAN_FRONTEND noninteractive


RUN     apt-get update && apt-get install -y git npm nodejs openjdk-7-jre
RUN     ln -s /usr/bin/nodejs /usr/local/bin/node


WORKDIR /build
ADD     package.json    /build/package.json
RUN     npm install
ADD     .   /build
CMD     ./node_modules/gulp/bin/gulp.js serve
","Java
42.0%





JavaScript
29.6%





HTML
19.5%





ApacheConf
4.8%





Shell
1.4%





Batchfile
1.0%





Other
1.7%",2015-12-17 13:45:48,2015-12-17 14:06:04,https://github.com/volteoind/smartport
1,paulo-raca/spark-slides,,"FROM debian:jessie
MAINTAINER Getty Images ""https://github.com/gettyimages""


RUN apt-get update \
  && apt-get install -y curl net-tools unzip python \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*


# JAVA
ENV JAVA_HOME /usr/jdk1.8.0_31
ENV PATH $PATH:$JAVA_HOME/bin
RUN curl -sL --retry 3 --insecure \
  --header ""Cookie: oraclelicense=accept-securebackup-cookie;"" \
 ""http://download.oracle.com/otn-pub/java/jdk/8u31-b13/server-jre-8u31-linux-x64.tar.gz"" \
  | gunzip \
  | tar x -C /usr/ \
  && ln -s $JAVA_HOME /usr/java \
  && rm -rf $JAVA_HOME/man


# SPARK
ENV SPARK_VERSION 1.5.2
ENV HADOOP_VERSION 2.6
ENV SPARK_PACKAGE $SPARK_VERSION-bin-hadoop$HADOOP_VERSION
ENV SPARK_HOME /usr/spark-$SPARK_PACKAGE
ENV PATH $PATH:$SPARK_HOME/bin
RUN curl -sL --retry 3 \
 ""http://mirrors.ibiblio.org/apache/spark/spark-$SPARK_VERSION/spark-$SPARK_PACKAGE.tgz"" \
  | gunzip \
  | tar x -C /usr/ \
  && ln -s $SPARK_HOME /usr/spark


# HADOOP/S3
RUN curl -sL --retry 3 ""http://central.maven.org/maven2/org/apache/hadoop/hadoop-aws/2.6.0/hadoop-aws-2.6.0.jar"" -o $SPARK_HOME/lib/hadoop-aws-2.6.0.jar \
 && curl -sL --retry 3 ""http://central.maven.org/maven2/com/amazonaws/aws-java-sdk/1.7.14/aws-java-sdk-1.7.14.jar"" -o $SPARK_HOME/lib/aws-java-sdk-1.7.14.jar \
 && curl -sL --retry 3 ""http://central.maven.org/maven2/com/google/collections/google-collections/1.0/google-collections-1.0.jar"" -o $SPARK_HOME/lib/google-collections-1.0.jar \
 && curl -sL --retry 3 ""http://central.maven.org/maven2/joda-time/joda-time/2.8.2/joda-time-2.8.2.jar"" -o $SPARK_HOME/lib/joda-time-2.8.2.jar


CMD /usr/spark/bin/spark-class org.apache.spark.deploy.master.Master
","Java
91.9%





HTML
8.1%",2015-12-17 13:23:56,2015-12-17 13:26:34,https://github.com/paulo-raca/spark-slides
2,kurron/docker-ant,,"FROM kurron/docker-jetbrains-base:latest


MAINTAINER Ron Kurr <kurr@kurron.org>


LABEL org.kurron.ide.name=""Apache Ant"" org.kurron.ide.version=1.9.6


ADD http://mirrors.ibiblio.org/apache/ant/binaries/apache-ant-1.9.6-bin.tar.gz /tmp/ide.tar.gz


RUN mkdir -p /opt/ant && \
    tar zxvf /tmp/ide.tar.gz --strip-components=1 -C /opt/ant && \
    rm /tmp/ide.tar.gz


ENV ANT_HOME=/opt/ant


VOLUME [""/pwd""]


USER developer:developer
WORKDIR /pwd
ENTRYPOINT [""/opt/ant/bin/ant""]
CMD [""-version""]
","Shell
100.0%",2015-12-17 01:22:17,2015-12-17 01:23:33,https://github.com/kurron/docker-ant
3,josl/COMPARE-Uploader-Docker,,"FROM python:2.7
RUN apt-get -qq update && apt-get install -y -qq --no-install-recommends vim
ENV PYTHONUNBUFFERED 1
RUN mkdir /code
WORKDIR /code
ADD requirements.txt /code/
RUN pip install -r requirements.txt
# RUN pip install -U djangorestframework-jwt
ADD . /code/
","ApacheConf
54.2%





HTML
28.0%





Python
17.0%





Other
0.8%",2015-12-15 18:29:50,2016-02-11 10:16:33,https://github.com/josl/COMPARE-Uploader-Docker
4,bubbl/odoo-centos,,"FROM bbania/centos:base
MAINTAINER ""Bart Bania"" <contact@bartbania.com>


ENV OPENERP_SERVER /etc/odoo/openerp-server.conf
ENV ODOO_VERSION 9.0
ENV ODOO_RELEASE 20160214


RUN yum install -y python-pip xorg-x11-fonts-75dpi xorg-x11-fonts-Type1 nodejs npm git libpng libX11 libXext libXrender
RUN wget -O /tmp/wkhtmltox.rpm http://download.gna.org/wkhtmltopdf/0.12/0.12.2.1/wkhtmltox-0.12.2.1_linux-centos7-amd64.rpm && \
    yum localinstall -y /tmp/wkhtmltox.rpm
RUN rpm -ihU http://yum.postgresql.org/9.4/redhat/rhel-7-x86_64/pgdg-centos94-9.4-2.noarch.rpm && \
    yum install -y postgresql94.x86_64
RUN wget --no-check-certificate -O /tmp/odoo.rpm https://nightly.odoo.com/${ODOO_VERSION}/nightly/rpm/odoo_${ODOO_VERSION}c.${ODOO_RELEASE}.noarch.rpm && \
    yum localinstall -y /tmp/odoo.rpm && \
    rm -rf /tmp/odoo.rpm


COPY ./configs/entrypoint.sh /
COPY ./configs/openerp-server.conf /etc/odoo/


RUN mkdir -p /mnt/extra-addons


RUN chown odoo /etc/odoo/openerp-server.conf && \
    chown -R odoo:odoo /var/lib/odoo && \
    chown -R odoo: /mnt/extra-addons


VOLUME [ ""/var/lib/odoo"", ""/mnt/extra-addons"" ]


EXPOSE 8069


USER odoo


ENTRYPOINT [""/entrypoint.sh""]
CMD [""openerp-server""]


","Shell
100.0%",2015-12-15 11:08:12,2016-02-13 13:31:16,https://github.com/bubbl/odoo-centos
5,decentninja/Sssb-watcher,,"FROM clojure
COPY . /usr/src/app
WORKDIR /usr/src/app
CMD [""lein"", ""run""]
","Clojure
100.0%",2015-12-21 00:09:40,2017-02-02 23:10:00,https://github.com/decentninja/Sssb-watcher
6,grayzone/screening,,"FROM grayzone/beego


MAINTAINER Albert Wang




# Install Database libs
RUN go get -u -v github.com/lib/pq
RUN go get -u -v github.com/mattn/go-sqlite3






ADD . /go/src/github.com/grayzone/screening


WORKDIR /go/src/github.com/grayzone/screening


RUN go build github.com/grayzone/screening


RUN rm -rf /go/src/github.com/grayzone/screening/.git
RUN rm -rf /go/src/github.com/grayzone/screening/controllers
RUN rm -rf /go/src/github.com/grayzone/screening/routers
RUN rm -rf /go/src/github.com/grayzone/screening/models
RUN rm -rf /go/src/github.com/grayzone/screening/tests
RUN rm -rf /go/src/github.com/grayzone/screening/main.go


RUN rm -rf /go/src/github.com/grayzone/screening/Dockerfile
RUN rm -rf /go/src/github.com/grayzone/screening/docker-compose.yml


EXPOSE 8080


ENTRYPOINT [""/go/src/github.com/grayzone/screening/screening""]


","Smarty
39.4%





JavaScript
29.2%





Go
28.2%





Shell
3.2%",2015-12-23 05:56:07,2016-01-18 06:55:48,https://github.com/grayzone/screening
7,sarum90/promise,,"



FROM ubuntu:16.04


MAINTAINER Marcus Ewert <sarum90@gmail.com>


RUN apt-get update && apt-get install -y clang-3.7 clang-3.7-doc libclang-common-3.7-dev libclang-3.7-dev libclang1-3.7 libclang1-3.7-dbg libllvm-3.7-ocaml-dev libllvm3.7 libllvm3.7-dbg lldb-3.7 llvm-3.7 llvm-3.7-dev llvm-3.7-doc llvm-3.7-examples llvm-3.7-runtime clang-modernize-3.7 clang-format-3.7 python-clang-3.7 lldb-3.7-dev liblldb-3.7-dbg git
","C++
83.8%





Shell
14.3%





Makefile
1.9%",2015-12-22 07:39:55,2016-03-06 18:23:02,https://github.com/sarum90/promise
8,LeisureLink/ubuntu-node-build-machine,"Organization(name=None, id=6556889)","FROM ubuntu:14.04
MAINTAINER LeisureLink Tech <techteam@leisurelink.com>


ENV NODE_VERSION 4.2.4


COPY rootfs /


ADD https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz /tmp/node-v${NODE_VERSION}-linux-x64.tar.gz


RUN set -ex && \
  cd /tmp && \
  tar -xzf /tmp/node-v${NODE_VERSION}-linux-x64.tar.gz -C /usr/local --strip-components=1 && \
  apt-get update && \
  apt-get install -y openssl git libssl-dev libkrb5-dev python-dev linux-headers-4.2.0-22-generic build-essential && \
  ssh-keyscan -t rsa github.com >> /etc/ssh/ssh_known_hosts && \
  chmod +x /opt/lib/perform-build.sh && \
  ln -s /opt/lib/perform-build.sh /usr/local/bin/perform-build && \
  groupadd node && \
  useradd -m -g node node && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/* \
         /var/tmp/* \
         /tmp/*


VOLUME [""/source""]


USER node
WORKDIR /source
CMD [""perform-build""]
","Shell
100.0%",2015-12-24 15:19:17,2015-12-24 15:25:31,https://github.com/LeisureLink/ubuntu-node-build-machine
9,Francescu/blog-admin,,"FROM node:latest


MAINTAINER Francescu


WORKDIR /home/app/blog-admin
ADD . /home/app/blog-admin


RUN npm config set registry http://registry.npmjs.org/


#install npm dependencies
RUN npm install
RUN npm install -g bower gulp-cli
RUN bower install --allow-root


RUN npm rebuild node-sass


#install dist website
RUN gulp build


# Tell Docker we are going to use this port
EXPOSE 9000


# The command to run our app when the container is run
CMD [""node"", ""dist/server/server.js""]
","JavaScript
91.1%





HTML
6.4%





CSS
2.5%",2016-01-03 17:55:40,2016-01-03 17:56:13,https://github.com/Francescu/blog-admin
10,olgabrani/jk-lina,,"FROM node


RUN apt-get update && apt-get install -y --no-install-recommends ruby rubygems ruby-dev
RUN gem install jekyll


ADD . /src
WORKDIR /src


CMD [""jekyll"", ""serve"", ""-H"", ""0.0.0.0""]
","CSS
67.0%





HTML
33.0%",2016-01-03 19:12:21,2016-01-03 19:13:31,https://github.com/olgabrani/jk-lina
11,leanix/docker-pivotal-burndown,"Organization(name=None, id=3152978)","FROM maven:3.3.3-jdk-8-onbuild
CMD [""java"",""-jar"",""/usr/src/app/target/pivotal-burndown.jar""]


","Java
99.8%





Shell
0.2%",2015-12-22 16:16:21,2016-04-14 08:22:55,https://github.com/leanix/docker-pivotal-burndown
12,uzyexe/dockerfile-lighttpd,,"FROM alpine:3.4
RUN apk add --update lighttpd openssl && \
    rm -rf /var/cache/apk/*
VOLUME [""/etc/lighttpd""]
ENTRYPOINT [""lighttpd""]
CMD [""-D"", ""-f"", ""/etc/lighttpd/lighttpd.conf""]]
EXPOSE 80 443
",,2016-02-04 01:50:07,2016-02-04 01:50:07,https://github.com/uzyexe/dockerfile-lighttpd
13,larsilerum/pythonwithgpio,,"# Pull base image
FROM resin/rpi-raspbian:jessie
MAINTAINER Lars Larsson <lars.martin.larsson@gmail.com>


# Install dependencies
RUN apt-get update && apt-get install -y \
    git-core \
    build-essential \
    gcc \
    python \
    python-dev \
    python-pip \
    python-virtualenv \
    --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*
RUN pip install pyserial
RUN pip install RPi.GPIO


# Define working directory
WORKDIR /data
VOLUME /data


# Define default command
CMD [""bash""]
",,2016-02-08 20:26:51,2016-02-08 20:26:51,https://github.com/larsilerum/pythonwithgpio
14,erikaulin/docker-jenkins,,"FROM nginx
Run mkdir -p /etc/nginx/sites-enabled/
ADD nginx.conf /etc/nginx/nginx.conf
ADD jenkins.conf /etc/nginx/sites-enabled/jenkins.conf
","Nginx
100.0%",2016-02-06 21:00:22,2016-02-09 09:52:13,https://github.com/erikaulin/docker-jenkins
15,sometea/ilmajs,,"FROM node:0.12


# Install gem sass for  grunt-contrib-sass
RUN apt-get update -qq && apt-get install -y build-essential
RUN apt-get install -y ruby
RUN gem install sass


WORKDIR /home/mean


# Install Mean.JS Prerequisites
RUN npm install -g grunt-cli
RUN npm install -g bower


# Install Mean.JS packages
ADD package.json /home/mean/package.json
RUN npm install


# Manually trigger bower. Why doesnt this work via npm install?
ADD .bowerrc /home/mean/.bowerrc
ADD bower.json /home/mean/bower.json
RUN bower install --config.interactive=false --allow-root


# Make everything available for start
ADD . /home/mean


# Set development environment as default
ENV NODE_ENV development


# Port 3000 for server
# Port 35729 for livereload
EXPOSE 3000 35729
CMD [""grunt""]
","JavaScript
89.2%





HTML
10.2%





Other
0.6%",2016-02-05 14:11:08,2016-02-05 14:12:32,https://github.com/sometea/ilmajs
16,tes/infra-gitrob-docker,"Organization(name=None, id=7055819)","# Use the Ubuntu 14.04.3 as the base image
FROM ubuntu:14.04.3


# Own up to this
MAINTAINER khushil ""khushil.dep@daemondreams.co.uk""


# Basics we need in this container
RUN apt-get update && \
    apt-get -y install ruby1.9.3 git libpq-dev build-essential postgresql-server-dev-all


# Install bundler
RUN gem install bundler


# Install the gem we require and deps
RUN gem install gitrob


# Copy in the start script
COPY gorob.sh /usr/local/bin/


# Set the correct exec perms
RUN chmod +x /usr/local/bin/gorob.sh


# Accept agreement for the particular version that got installed (bash fu baby!)
RUN touch /var/lib/gems/1.9.1/gems/gitrob-$(gem list | grep -E gitrob | awk '{print $2}' | tr -d '(' | tr -d ')')/agreement


# Clean up
RUN apt-get -y purge build-essential
RUN apt-get clean


# Docker 'networking' - yeah sure
EXPOSE 9393


# Docker 'main()'
ENTRYPOINT [""/usr/local/bin/gorob.sh""]
","Shell
100.0%",2016-02-04 13:06:54,2016-02-16 00:23:46,https://github.com/tes/infra-gitrob-docker
17,hector-valdivia/docker-php-mongodb-mysql-nginx,,"################################################################################
# Base image
################################################################################
FROM azukiapp/web-based


################################################################################
# Build instructions
################################################################################


# Install packages
RUN apt-get update && apt-get install -y -qq \
    nginx \
    supervisor \
    curl \
    git \
    wget \
    unzip \
    subversion \
    libxml2 \
    libcurl4-openssl-dev \
    php5-dev \
    php5-cli \
    php5-mysql \
    php5-mcrypt \
    php5-curl \
    php5-json \
    php5-gd \
    php5-fpm \
    php-pear \
    php-apc \
    php5-intl \
    php5-xdebug \
    && pecl install mongodb \
    && apt-get clean -qq \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Remove default nginx configs.
RUN rm -f /etc/nginx/conf.d/*


# Ensure that PHP5 FPM is run as root.
RUN sed -i ""s/user = www-data/user = root/"" /etc/php5/fpm/pool.d/www.conf
RUN sed -i ""s/group = www-data/group = root/"" /etc/php5/fpm/pool.d/www.conf


# Pass all docker environment
RUN sed -i '/^;clear_env = no/s/^;//' /etc/php5/fpm/pool.d/www.conf


# Get access to FPM-ping page /ping
RUN sed -i '/^;ping\.path/s/^;//' /etc/php5/fpm/pool.d/www.conf


# Get access to FPM_Status page /status
RUN sed -i '/^;pm\.status_path/s/^;//' /etc/php5/fpm/pool.d/www.conf


# Prevent PHP Warning: 'xdebug' already loaded.
# XDebug loaded with the core
RUN sed -i '/.*xdebug.so$/s/^/;/' /etc/php5/mods-available/xdebug.ini


# Enable MongoDB PHP
RUN echo ""extension=mongodb.so"" > /etc/php5/mods-available/mongodb.ini
RUN php5enmod mcrypt mongodb


# Add configuration files
COPY conf/nginx.conf /etc/nginx/
COPY conf/supervisord.conf /etc/supervisor/conf.d/
COPY conf/php.ini /etc/php5/fpm/conf.d/40-custom.ini


# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer


# Install phalcon
RUN git clone --depth=1 git://github.com/phalcon/cphalcon.git
RUN cd cphalcon/build && ./install 64bits
RUN echo ""extension=phalcon.so"" > /etc/php5/fpm/conf.d/30-phalcon.ini


################################################################################
# Volumes
################################################################################


VOLUME [""/var/www"", ""/etc/nginx/conf.d""]


################################################################################
# Ports
################################################################################


EXPOSE 80 443 9000


################################################################################
# Entrypoint
################################################################################


ENTRYPOINT [""/usr/bin/supervisord""]
","Nginx
98.9%





PHP
1.1%",2016-01-29 06:26:33,2016-01-29 07:35:30,https://github.com/hector-valdivia/docker-php-mongodb-mysql-nginx
18,c24-microws-jan/c24-catalog-service,"Organization(name=None, id=16943723)","FROM mhart/alpine-node:4.2.1
MAINTAINER https://github.com/c24-microws-jan/c24-catalog-service


RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app


COPY package.json /usr/src/app/
RUN npm install


COPY . /usr/src/app


ENV PORT=3000
ENV SHUTDOWN_TIMEOUT=10000
ENV SERVICE_CHECK_HTTP=/healthcheck
ENV SERVICE_CHECK_INTERVAL=10s
ENV SERVICE_CHECK_TIMEOUT=2s


EXPOSE 3000


CMD [""node"", ""index.js""]
","JavaScript
100.0%",2016-01-29 09:53:05,2016-01-29 09:59:13,https://github.com/c24-microws-jan/c24-catalog-service
19,coolcrowd/worker-ui,"Organization(name=None, id=15893550)","FROM nginx


RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections


RUN apt-get -qq update
RUN apt-get -qq install git -y
RUN apt-get -qq install nodejs -y
RUN ln -s /usr/bin/nodejs /usr/bin/node
RUN apt-get -qq install curl -y
RUN curl -q https://www.npmjs.com/install.sh | sh
COPY src /src
COPY lib /lib
COPY gulp /gulp
COPY gulpfile.js /gulpfile.js
COPY package.json /package.json
RUN npm config set registry http://registry.npmjs.org/
RUN npm install
RUN npm install gulp -g
RUN gulp production
RUN rm -rf src/
RUN rm -rf gulp/
RUN ls /usr/share/nginx/html
RUN rm /usr/share/nginx/html/index.html
RUN ls /usr/share/nginx/html
RUN mv /build/debug.html /build/debugraw.html
RUN mv /build/index.html /build/indexraw.html
RUN cp -avr /build/. /usr/share/nginx/html
RUN rm -rf build/
#from control-ui
# TODO: This is only a workaround, it doesn't trap signals corretly for nginx to stop on SIGINT, has to wait for SIGKILL.
ENTRYPOINT [""/bin/bash"", ""-c"", ""envsubst < /usr/share/nginx/html/debugraw.html > /usr/share/nginx/html/debug.html && envsubst < /usr/share/nginx/html/indexraw.html > /usr/share/nginx/html/index.html && nginx -g 'daemon off;'""]
","JavaScript
58.5%





HTML
22.7%





CSS
18.8%",2016-01-29 11:04:06,2016-02-11 12:45:32,https://github.com/coolcrowd/worker-ui
20,tom-f/shopping-list,,"FROM ubuntu:latest


MAINTAINER tom.fawssett@gmail.com


RUN apt-get install -y python-setuptools
RUN easy_install pip


ADD requirements.txt /src/requirements.txt
RUN cd /src; pip install -r requirements.txt


ADD . /src


EXPOSE  5000


CMD [""python"", ""/src/application.py""]
","HTML
60.6%





Python
39.4%",2016-02-07 09:25:34,2016-02-10 16:07:02,https://github.com/tom-f/shopping-list
21,SimonFischinger/sncn_local_doc_builder,,"FROM buildpack-deps:jessie-scm


# Install Ubuntu packages
RUN apt-get update && apt-get install -y \
    python \
    python-pip \
    python-dev \
    python-sphinx\
    doxygen \
    graphviz \
    apt-utils


# Install Python packages
RUN pip install \
    docutils \
    sphinx_bootstrap_theme \
    PyGithub 
 
COPY build_doc.py /build_doc.py


#ENTRYPOINT [""./build_doc.py""]
#CMD [""--build""]
","Python
100.0%",2016-02-07 12:19:22,2016-02-07 15:03:56,https://github.com/SimonFischinger/sncn_local_doc_builder
22,clickberry/feedback-api-nodejs,"Organization(name=None, id=10772219)","FROM node:5-onbuild
MAINTAINER Alexey Melnikov <a.melnikov@clickberry.com>


# prepare env vars and run nodejs
RUN chmod +x ./docker-entrypoint.sh
ENTRYPOINT [""./docker-entrypoint.sh""]


EXPOSE 8080
","JavaScript
88.7%





HTML
5.9%





Shell
5.4%",2016-02-07 14:40:05,2017-05-06 02:45:37,https://github.com/clickberry/feedback-api-nodejs
23,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update && apt-get install -y mongodb-clients \
                                         python-pymongo


RUN apt-get install -y ceilometer-api \
                       ceilometer-collector \
                       ceilometer-agent-central \
                       ceilometer-agent-notification \
                       ceilometer-alarm-evaluator \
                       ceilometer-alarm-notifier \
                       python-ceilometerclient




ADD setup.sh setup.sh
ADD run.sh run.sh
ADD wait_for_ks_admin_ep.sh wait_for_ks_admin_ep.sh
ADD wait_for_mysql.sh wait_for_mysql.sh
ADD wait_for_rabbitmq.sh wait_for_rabbitmq.sh
ADD wait_for_mongo.sh wait_for_mongo.sh
ADD wait_for_glance_api.sh wait_for_glance_api.sh
ADD wait_for_neutron_api.sh wait_for_neutron_api.sh
ADD wait_for_nova_api.sh wait_for_nova_api.sh


RUN chmod +x wait_for_ks_admin_ep.sh && \
   chmod +x wait_for_mysql.sh && \
   chmod +x wait_for_rabbitmq.sh && \
   chmod +x wait_for_mongo.sh && \
   chmod +x wait_for_glance_api.sh && \
   chmod +x wait_for_neutron_api.sh && \
   chmod +x wait_for_nova_api.sh && \
   chmod +x run.sh && \
   chmod +x setup.sh


EXPOSE 8777 


CMD ./setup.sh && sleep 5 && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
24,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive 


RUN apt-get install -y glance python-glanceclient python-swiftclient




ADD setup.sh setup.sh
ADD run.sh run.sh
ADD wait_for_ks_admin_ep.sh wait_for_ks_admin_ep.sh
ADD wait_for_mysql.sh wait_for_mysql.sh


RUN chmod +x wait_for_ks_admin_ep.sh && chmod +x wait_for_mysql.sh && chmod +x run.sh && chmod +x setup.sh


EXPOSE 9191
EXPOSE 9292


CMD ./wait_for_mysql.sh && ./setup.sh && sleep 5 && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
25,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get install -y \
            heat-api \
            heat-api-cfn \
            heat-engine \
            python-heatclient


ADD setup.sh setup.sh
ADD run.sh run.sh
ADD wait_for_ks_admin_ep.sh wait_for_ks_admin_ep.sh
ADD wait_for_mysql.sh wait_for_mysql.sh
ADD wait_for_rabbitmq.sh wait_for_rabbitmq.sh


RUN chmod +x wait_for_ks_admin_ep.sh && \
    chmod +x wait_for_mysql.sh && \
    chmod +x wait_for_rabbitmq.sh && \
    chmod +x run.sh && \
    chmod +x setup.sh


EXPOSE 8004
EXPOSE 8000


CMD ./wait_for_mysql.sh && ./setup.sh && sleep 5 && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
26,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive 


RUN apt-get install -y openstack-dashboard


ADD run.sh run.sh
ADD setup.sh setup.sh


RUN chmod +x run.sh && chmod +x setup.sh


EXPOSE 80


CMD ./setup.sh && sleep 5 && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
27,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive 


RUN apt-get install -y openssl


ENV ADMIN_TOKEN=c2905bc8ce0fgfgf7a9cf066a




RUN apt-get install -y keystone apache2 libapache2-mod-wsgi memcached python-memcache






ADD setup.sh setup.sh
ADD run.sh run.sh
ADD wait_for_mysql.sh wait_for_mysql.sh


RUN chmod +x wait_for_mysql.sh && chmod +x setup.sh && chmod +x run.sh


EXPOSE 5000
EXPOSE 35357


CMD ./wait_for_mysql.sh && ./setup.sh && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
28,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM mariadb:5


ADD mysqld_openstack.cnf /etc/mysql/conf.d/mysqld_openstack.cnf


ADD setup.sh /tmp/setup.sh 


RUN chmod +x /tmp/setup.sh




CMD /tmp/setup.sh && ./docker-entrypoint.sh mysqld
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
29,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive




RUN apt-get update && apt-get install -y mongodb-server \
                                         mongodb-clients \
                                         python-pymongo


ADD setup.sh setup.sh
ADD run.sh run.sh
ADD wait_for_ks_admin_ep.sh wait_for_ks_admin_ep.sh
ADD wait_for_mysql.sh wait_for_mysql.sh
ADD wait_for_rabbitmq.sh wait_for_rabbitmq.sh
ADD wait_for_mongo.sh wait_for_mongo.sh


RUN chmod +x wait_for_ks_admin_ep.sh && \
    chmod +x wait_for_mysql.sh && \
    chmod +x wait_for_rabbitmq.sh && \
    chmod +x wait_for_mongo.sh && \
    chmod +x run.sh && \
    chmod +x setup.sh


EXPOSE 27017


CMD ./setup.sh && sleep 5 && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
0,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive 


RUN apt-get install -y \
    neutron-server \
    neutron-plugin-ml2 \
    python-neutronclient


ADD setup.sh setup.sh
ADD run.sh run.sh
ADD wait_for_ks_admin_ep.sh wait_for_ks_admin_ep.sh
ADD wait_for_mysql.sh wait_for_mysql.sh
ADD wait_for_rabbitmq.sh wait_for_rabbitmq.sh


RUN chmod +x wait_for_ks_admin_ep.sh && \
    chmod +x wait_for_mysql.sh && \
    chmod +x wait_for_rabbitmq.sh && \
    chmod +x run.sh && \
    chmod +x setup.sh


EXPOSE 9696


CMD ./wait_for_mysql.sh && ./setup.sh && sleep 5 && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
1,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive 


RUN apt-get install -y \
    nova-api \
    nova-cert \
    nova-conductor \
    nova-consoleauth \
    nova-novncproxy \
    nova-scheduler \
    python-novaclient


ADD setup.sh setup.sh
ADD run.sh run.sh
ADD wait_for_ks_admin_ep.sh wait_for_ks_admin_ep.sh
ADD wait_for_mysql.sh wait_for_mysql.sh
ADD wait_for_rabbitmq.sh wait_for_rabbitmq.sh


RUN chmod +x wait_for_ks_admin_ep.sh && \
    chmod +x wait_for_mysql.sh && \
    chmod +x wait_for_rabbitmq.sh && \
    chmod +x run.sh && \
    chmod +x setup.sh


EXPOSE 8774
EXPOSE 8775
EXPOSE 6080


CMD ./wait_for_mysql.sh && ./setup.sh && sleep 5 && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
2,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM ubuntu:14.04


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update && apt-get install -y \
        crudini \
        curl \
        mariadb-client-5.* \
        python-mysqldb




## Get the packages
RUN apt-get install software-properties-common -y
RUN add-apt-repository cloud-archive:liberty -y
RUN apt-get update -y




RUN apt-get install -y python-openstackclient
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
3,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive 


RUN apt-get update && apt-get -y install ssh \
                                         git \
                                         python-heatclient \
					 python-ceilometerclient


ADD setup.sh setup.sh
ADD run.sh run.sh


RUN chmod +x setup.sh && chmod +x run.sh 


EXPOSE 22


CMD ./setup.sh && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
4,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update && apt-get install -y \
                      nova-compute \
                      sysfsutils


RUN apt-get install -y \
    neutron-plugin-ml2 \
    neutron-plugin-openvswitch-agent


ADD setup.sh setup.sh
ADD run.sh run.sh
ADD wait_for_ks_admin_ep.sh wait_for_ks_admin_ep.sh
ADD wait_for_mysql.sh wait_for_mysql.sh
ADD wait_for_rabbitmq.sh wait_for_rabbitmq.sh


RUN chmod +x wait_for_ks_admin_ep.sh && \
    chmod +x wait_for_mysql.sh && \
    chmod +x wait_for_rabbitmq.sh && \
    chmod +x run.sh && chmod +x setup.sh


CMD ./setup.sh && sleep 5 && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
5,moonbeamzebra/OpenStack-On-Docker-compose,,"FROM openstack-base


ENV DEBIAN_FRONTEND noninteractive


RUN apt-get update && apt-get install -y \
                      neutron-plugin-ml2 \
                      neutron-plugin-openvswitch-agent \
                      neutron-l3-agent \
                      neutron-dhcp-agent \
                      neutron-metadata-agent




ADD setup.sh setup.sh
ADD run.sh run.sh
ADD wait_for_ks_admin_ep.sh wait_for_ks_admin_ep.sh
ADD wait_for_mysql.sh wait_for_mysql.sh
ADD wait_for_rabbitmq.sh wait_for_rabbitmq.sh


RUN chmod +x wait_for_ks_admin_ep.sh && \
    chmod +x wait_for_mysql.sh && \
    chmod +x wait_for_rabbitmq.sh && \
    chmod +x run.sh && chmod +x setup.sh


CMD ./setup.sh && sleep 5 && ./run.sh
","Shell
100.0%",2016-01-13 02:48:22,2016-02-04 20:12:09,https://github.com/moonbeamzebra/OpenStack-On-Docker-compose
6,MikeAScott/dockerfiles,,"#
# Debian Desktop (LXDE) Dockerfile
#
# https://github.com/mikeascott/ubuntu-desktop
#


FROM debian
MAINTAINER Mike Scott <mike.scott@sqs.com>


# Install LXDE and vnc.
RUN \
  apt-get update && \
  DEBIAN_FRONTEND=noninteractive \
    apt-get install -y \
        locales \
        vim \
        curl \
        tightvncserver \
        lxde


ENV \
  USER=root \
  LANG=en_GB.UTF-8 \
  LANGUAGE=en_GB:en \
  LC_ALL=en_GB.UTF-8


RUN \
  echo ""en_GB.UTF-8 UTF-8"" > /etc/locale.gen && locale-gen


WORKDIR /data


CMD [""bash""]


EXPOSE 5901
","Shell
100.0%",2016-01-12 13:41:29,2016-11-08 16:10:30,https://github.com/MikeAScott/dockerfiles
7,MikeAScott/dockerfiles,,"# https://github.com/mikeascott/ubuntu-java-dev
#


# Pull base image.
FROM mikeascott/debian-desktop
MAINTAINER Mike Scott <mike.scott@sqs.com>


RUN apt-get update && \
    apt-get install -y \
    curl \
	openjdk-7-jdk \
	maven \
	git \
	--no-install-recommends


# Install Eclipse
RUN \
  	curl -sSL ""http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/mars/1/eclipse-dsl-mars-1-linux-gtk-x86_64.tar.gz&r=1"" -o /tmp/eclipse.tar.gz \
	&& mkdir -p /opt/eclipse \
	&& tar -xvzf /tmp/eclipse.tar.gz -C /opt/eclipse --strip-components 1 \
	&& rm /tmp/eclipse.tar.gz* \
	&& ln -s /opt/eclipse/eclipse /usr/bin/eclipse


COPY eclipse.desktop /usr/share/applications/


ENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64


RUN \
    adduser --disabled-password --gecos ""Developer"" developer --ingroup users \
    && adduser developer sudo \
    && echo ""developer:developer"" | chpasswd


RUN \
  mkdir -p /data/projects \
  && chown -R developer:users /data/projects


WORKDIR /data/projects


COPY init-user.sh /root/


RUN \
    chmod +x /root/init-user.sh


ENTRYPOINT [""/root/init-user.sh"", ""developer""]


CMD tail -f /home/developer/.vnc/*.log
","Shell
100.0%",2016-01-12 13:41:29,2016-11-08 16:10:30,https://github.com/MikeAScott/dockerfiles
8,MikeAScott/dockerfiles,,"#
# Ubuntu Desktop (LXDE) Dockerfile
#
# https://github.com/mikeascott/ubuntu-desktop
#


# Pull base image.
FROM ubuntu
MAINTAINER Mike Scott <mike.scott@sqs.com>


ENV \
  USER=root \
  LANG=en_GB \
  LANGUAGE=en_GB:en


# Install LXDE and VNC server.
RUN \
  locale-gen ""en_GB"" && \
  locale-gen ""en_GB.UTF-8"" && \
  apt-get update && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y lxde-core lxterminal lxappearance tightvncserver && \
  rm -rf /var/lib/apt/lists/*


# Define working directory.
WORKDIR /data


# Define default command.
CMD [""bash""]


# Expose ports.
EXPOSE 5901
","Shell
100.0%",2016-01-12 13:41:29,2016-11-08 16:10:30,https://github.com/MikeAScott/dockerfiles
9,MikeAScott/dockerfiles,,"#
# Ubuntu Java Dev Dockerfile
#
# Java Dev Environment
# Includes Open JDK 7 and Eclipse with LXDE and tightvnc
# https://github.com/mikeascott/ubuntu-java-dev
#


# Pull base image.
FROM ubuntu-desktop
MAINTAINER Mike Scott <mike.scott@sqs.com>


# Install
RUN sed -i.bak 's/sid main/sid main contrib/g' /etc/apt/sources.list && \
	apt-get update && apt-get install -y -q \
	ca-certificates \
	curl \
	firefox \
	openjdk-7-jdk \
	maven \
	git \
	--no-install-recommends


# Install Eclipse
RUN \
  	curl -sSL ""http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/mars/1/eclipse-dsl-mars-1-linux-gtk-x86_64.tar.gz&r=1"" -o /tmp/eclipse.tar.gz \
	&& mkdir -p /opt/eclipse \
	&& tar -xvzf /tmp/eclipse.tar.gz -C /opt/eclipse --strip-components 1 \
	&& rm /tmp/eclipse.tar.gz* \
	&& ln -s /opt/eclipse/eclipse /usr/bin/eclipse


COPY eclipse.desktop /usr/share/applications/


ENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64


# Define working directory.
WORKDIR /data/projects


# Define default command.
CMD [""bash""]


# Expose ports.
EXPOSE 5901
","Shell
100.0%",2016-01-12 13:41:29,2016-11-08 16:10:30,https://github.com/MikeAScott/dockerfiles
10,gyzpunk/readthedocs,,"FROM python:2


MAINTAINER  gyzpunk ""http://github.com/gyzpunk""


ENV RTD_PATH=""/usr/src/app"" \
	RTD_PRODUCTION_DOMAIN=""localhost:8000"" \
	RTD_SLUMBER_PASSWORD=""docbuilder"" \
	DJANGO_SETTINGS_MODULE=""readthedocs.settings.sqlite""


# Install necessary system packages
RUN export DEBIAN_FRONTEND=""noninteractive"" \
	&& curl -sL https://deb.nodesource.com/setup_4.x | bash - \
	&& apt-get update && apt-get install --no-install-recommends -y \
		locales \
		unzip \
		libxml2-dev \
		libxslt1-dev \
		libevent-dev \
		build-essential \
		zlib1g-dev \
		doxygen \
		texlive-latex-base \
		texlive-fonts-recommended \
		doxygen-latex \
		dvipng \
		graphviz \
		nodejs \


	&& export LANGUAGE=en_US.UTF-8 \
	&& export LANG=en_US.UTF-8 \
	&& export LC_ALL=en_US.UTF-8 \
	&& locale-gen en_US.UTF-8 \
	&& dpkg-reconfigure locales \


 # Install modules for pdflatex
	&& for i in cmap fancybox titlesec framed fancyvrb threeparttable mdwtools wrapfig parskip upquote float multirow; do \
		curl -L -o /tmp/$i.zip http://mirrors.ctan.org/macros/latex/contrib/$i.zip && unzip -d /usr/share/texmf/tex/latex/ /tmp/$i.zip; \
	done \
	&& cd /usr/share/texmf/tex/latex/fancyvrb && latex fancyvrb.ins && cd - \
	&& cd /usr/share/texmf/tex/latex/float && latex float.ins && cd - \
	&& texhash \


	&& npm install -g bower gulp \


 # Install application
	&& mkdir -p ${APP_DATA_PATH} ${APP_LOGS_PATH} ${RTD_PATH} \
	&& cd ${RTD_PATH} \
	&& curl -L -o /tmp/rtfd.zip https://github.com/rtfd/readthedocs.org/archive/master.zip \
	&& unzip -d . /tmp/rtfd.zip && mv readthedocs.org-master/* . && rm -r readthedocs.org-master \
	&& pip install --no-cache-dir sphinx \
	&& pip install --no-cache-dir -r requirements.txt \


 # Clean up everything
	&& rm -rf /tmp/* \
	&& apt-get purge -y unzip \
	&& apt-get purge -y $(dpkg-query -f '${binary:Package} ' -W '*-doc') \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/* \


 # Create user
	&& groupadd -r rtfd \
	&& useradd -m -r -g rtfd rtfd


WORKDIR /${RTD_PATH}


COPY files/local_settings.py ./readthedocs/settings/
COPY files/rtfd-start.sh ./
RUN chown -R rtfd:rtfd .


USER rtfd


RUN npm install \
	&& bower install \
	&& gulp build \
	&& gulp vendor \
	&& chmod +x rtfd-start.sh


EXPOSE 8000
ENTRYPOINT [""./rtfd-start.sh""]
CMD [""python"", ""manage.py"", ""runserver"", ""0.0.0.0:8000""]
","Python
65.1%





Shell
34.9%",2016-01-07 21:02:24,2017-03-29 18:04:47,https://github.com/gyzpunk/readthedocs
11,gyzpunk/readthedocs,,"FROM gyzpunk/readthedocs


MAINTAINER  gyzpunk ""http://github.com/gyzpunk""


ENV DJANGO_SETTINGS_MODULE=""readthedocs.settings.postgres""


USER root


RUN pip install --no-cache-dir -r requirements/deploy.txt


USER rtfd


CMD [""gunicorn"", ""--workers=4"", ""--bind=0.0.0.0:8000"", ""--access-logfile=-"", ""--error-logfile=-"", ""readthedocs.wsgi""]
","Python
65.1%





Shell
34.9%",2016-01-07 21:02:24,2017-03-29 18:04:47,https://github.com/gyzpunk/readthedocs
12,jjcosgrove/docker-mysql,,"FROM debian:latest
MAINTAINER Jonathan James Cosgrove


ENV TERM=xterm
ENV DEBIAN_FRONTEND noninteractive


RUN groupadd -r mysql && useradd -r -g mysql mysql


RUN bash -c ""debconf-set-selections <<< 'mysql-server mysql-server/root_password password mysql'""
RUN bash -c ""debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password mysql'""


RUN apt-get update && apt-get install -y \
    mysql-server \
    php5-mysql


RUN sed -i -e""s/^bind-address\s*=\s*127.0.0.1/bind-address = 0.0.0.0/"" /etc/mysql/my.cnf


ADD mysqlsetup.sh /usr/local/bin/mysqlsetup
RUN chmod +x /usr/local/bin/mysqlsetup
RUN /usr/local/bin/mysqlsetup


VOLUME /var/lib/mysql


CMD /usr/bin/mysqld_safe
","Shell
100.0%",2016-01-07 18:20:30,2017-02-15 21:49:11,https://github.com/jjcosgrove/docker-mysql
13,JasonLunsford/stackExperiment,,"#
# example Dockerfile for http://docs.docker.io/en/latest/examples/postgresql_service/
#


FROM ubuntu
MAINTAINER SvenDowideit@docker.com


# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc 
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8


# Add PostgreSQL's repository. It contains the most recent stable release
#     of PostgreSQL, ``9.3``.
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Update the Ubuntu and PostgreSQL repository indexes
RUN apt-get update


# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get -y -q install python-software-properties software-properties-common
RUN apt-get -y -q install postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3


# Note: The official Debian and Ubuntu images automatically ``apt-get clean``
# after each ``apt-get`` 


# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres


# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER docker WITH SUPERUSER PASSWORD 'docker';"" &&\
    createdb -O docker docker


# Adjust PostgreSQL configuration so that remote connections to the
# database are possible. 
RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf


# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


# Expose the PostgreSQL port
EXPOSE 5432


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME	[""/etc/postgresql"", ""/var/log/postgresql"", ""/var/lib/postgresql""]


# Set the default command to run when starting the container
CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/var/lib/postgresql/9.3/main"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","JavaScript
93.0%





HTML
5.6%





CSS
1.4%",2016-01-05 20:25:03,2016-01-05 20:27:35,https://github.com/JasonLunsford/stackExperiment
14,nilpaco/Angular-Polymer,,"###
# swagger-ui-builder - https://github.com/swagger-api/swagger-ui/
# Container for building the swagger-ui static site
#
# Build: docker build -t swagger-ui-builder .
# Run:   docker run -v $PWD/dist:/build/dist swagger-ui-builder
#
###


FROM    ubuntu:14.04
MAINTAINER dnephin@gmail.com


ENV     DEBIAN_FRONTEND noninteractive


RUN     apt-get update && apt-get install -y git npm nodejs openjdk-7-jre
RUN     ln -s /usr/bin/nodejs /usr/local/bin/node


WORKDIR /build
ADD     package.json    /build/package.json
RUN     npm install
ADD     .   /build
CMD     ./node_modules/gulp/bin/gulp.js serve
","Java
45.1%





JavaScript
26.8%





HTML
20.6%





ApacheConf
3.7%





CSS
1.4%





Shell
1.1%





Other
1.3%",2016-01-06 14:23:07,2016-01-16 17:11:36,https://github.com/nilpaco/Angular-Polymer
15,andorp/bead-docker,,"FROM ubuntu:14.04


# Set locale
RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV DEBIAN_FRONTEND noninteractive


# Download GHC and cabal
RUN apt-get update && \
    apt-get install -y software-properties-common pkg-config && \
    add-apt-repository -y ppa:hvr/ghc && \
    apt-get update && \
    apt-get install -y cabal-install-1.18 ghc-7.8.3 cpphs \
                       libpcre3 libpcre3-dev mysql-server \
                       libmysqlclient-dev screen \
                       happy-1.19.4 alex-3.1.3 \
                       zlib1g-dev libncurses5-dev && \
    service mysql start && \
    mysqladmin -u root password password && \
    mkdir /development && \
    mkdir /development/init && \
    mkdir /development/bead && \
    mkdir /bead-server


ENV PATH /opt/ghc/7.8.3/bin:/opt/cabal/1.18/bin:/opt/alex/3.1.3/bin:/opt/happy/1.19.4/bin:$PATH


# Copy cabal file and install dependencies
COPY ""./bead/Bead.cabal"" ""/development/init/Bead.cabal""
COPY ""./bead/docker/container-script/dev-env-setup.sh"" ""/development/init/dev-env-setup.sh""
RUN cd development/init && \
    cabal update && \
    cabal install --only-dependencies --reorder-goals


# Directory for sources, running
VOLUME [""/development/bead"", ""/bead-server""]


# Expose the default port
EXPOSE 8000
",,2016-01-05 20:28:51,2016-01-29 18:28:13,https://github.com/andorp/bead-docker
16,kpn-digital/django-minimal,"Organization(name=None, id=16085467)","FROM ubuntu:14.04.3


RUN apt-get update && apt-get -qy install \
    build-essential \
    nginx \
    python2.7 \
    virtualenvwrapper \
    python-dev \
    curl \
    apache2-utils


RUN mkdir /projects


ADD . /projects


WORKDIR /projects


RUN rm -rf venv && \
    virtualenv venv && \
    venv/bin/pip install -r requirements.txt


EXPOSE 8000


CMD make
","Python
85.7%





Makefile
14.3%",2016-01-05 16:15:22,2016-12-06 15:52:11,https://github.com/kpn-digital/django-minimal
17,hofer/docker-serverspec,,"FROM ubuntu:14.04


RUN apt-get -y update && apt-get -y install build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev wget


# install ruby 2.1.5
RUN cd /tmp && wget http://ftp.ruby-lang.org/pub/ruby/2.1/ruby-2.1.5.tar.gz
RUN cd /tmp && tar -xvzf ruby-2.1.5.tar.gz
RUN cd /tmp/ruby-2.1.5/ && ./configure --prefix=/usr/local
RUN cd /tmp/ruby-2.1.5/ && make
RUN cd /tmp/ruby-2.1.5/ && make install


# Install all gems:
RUN gem install serverspec
RUN gem install docker-api
","Ruby
92.7%





Shell
7.3%",2016-01-05 06:58:03,2016-09-12 13:30:32,https://github.com/hofer/docker-serverspec
18,jave/practicaldevops,,"FROM williamyeh/ansible:centos7






","Clojure
46.2%





HTML
29.9%





Java
14.0%





CSS
6.4%





Gherkin
2.7%





SaltStack
0.7%





Shell
0.1%",2016-01-05 08:06:26,2017-12-03 06:31:02,https://github.com/jave/practicaldevops
19,akokshar/DockerBuilder,,"FROM rhel7


RUN yum clean all && \
	yum-config-manager --disable rhel-sjis-for-rhel-7-server-rpms && \
	yum-config-manager --enable rhel-7-server-extras-rpms && \
	yum-config-manager --enable rhel-7-server-rpms && \
	yum install -y docker openssh-clients && \
	yum clean all


ENV HOME /root


USER 0


ADD ./run.sh /root/run.sh
RUN chmod +x /root/run.sh


CMD [""/root/run.sh""]


","Shell
100.0%",2016-01-11 15:00:28,2016-01-12 11:36:57,https://github.com/akokshar/DockerBuilder
20,MUICProgrammingClub/muicwebboard,"Organization(name=None, id=16684332)","FROM rails:4.2.5
RUN apt-get update
RUN apt-get install -y build-essential
RUN apt-get install -y imagemagick


ENV RAILS_ENV production


COPY webapp/Gemfile* /tmp/
WORKDIR /tmp
RUN bundle install
WORKDIR /myapp
# cache friendly
COPY webapp /myapp
ENV SECRET_KEY_BASE 45277c66386de6565db73cd31e814ffa245ac005e3f08626d548da4f18674904d93ea14b7fd9e9a56029296e875e84a231c298b72ac9ef70f5809ad71c702684
RUN bundle exec rake assets:precompile
EXPOSE 3000
CMD [""./run.sh""]
","Ruby
66.1%





HTML
30.0%





CSS
1.9%





Other
2.0%",2016-01-13 12:03:36,2016-03-23 15:09:15,https://github.com/MUICProgrammingClub/muicwebboard
21,freyrus/grd_frontend,"Organization(name=None, id=8476720)","FROM freyrus/base-php5.6


MAINTAINER gialac <gialacmail@gmail.com>


# install mongodb driver for php
RUN pecl install mongo
RUN echo ""extension=mongo.so"" >> /etc/php5/fpm/php.ini


ADD .               /var/www
WORKDIR             /var/www
USER www-data


#RUN composer install


EXPOSE 80


# Clean up APT when done.
USER root
ADD vhost   /etc/nginx/sites-available/default
#RUN /etc/init.d/nginx restart
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
",,2016-01-13 08:33:00,2016-01-13 08:33:00,https://github.com/freyrus/grd_frontend
22,JasonLunsford/stackExperiment,,"FROM ubuntu:12.04
MAINTAINER Remy Sharp <remy@leftlogic.com>


RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN apt-get update && apt-get install curl npm -y


ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION iojs
ENV NVM_VERSION 0.26.1
ENV TRAVIS TRUE


# # Install nvm with node and npm
RUN curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VERSION/install.sh | bash \
    && source $NVM_DIR/nvm.sh \
    && nvm install 0.10 \
    && nvm install 0.12 \
    && nvm install iojs-v1 \
    && nvm install iojs-v2 \
    && nvm install iojs-v3 \
    && nvm install 4.0 \
    && nvm alias default $NODE_VERSION \
    && nvm use default
","JavaScript
93.0%





HTML
5.6%





CSS
1.4%",2016-01-05 20:25:03,2016-01-05 20:27:35,https://github.com/JasonLunsford/stackExperiment
23,42nerds/docker-node,"Organization(name=None, id=13783982)","FROM 42nerds/java:latest
MAINTAINER 42nerds - Inh. Julian Kaffke <info@42nerds.com>


RUN curl -sL https://deb.nodesource.com/setup_5.x > install_node.sh && \
    bash install_node.sh && \
    rm -f install_node.sh && \
    apt-get install -y nodejs && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
",,2016-01-06 19:12:03,2016-01-06 19:12:03,https://github.com/42nerds/docker-node
24,simonchisnall-online/drupalinstallbehat,,"FROM debian:jessie
MAINTAINER Wouter Admiraal <wad@wadmiraal.net>
ENV DEBIAN_FRONTEND noninteractive
RUN rm /bin/sh && ln -s /bin/bash /bin/sh


# Install packages.
RUN apt-get update
RUN apt-get install -y \
	vim \
	git \
	apache2 \
	php5-cli \
	php5-mysql \
	php5-gd \
	php5-curl \
	libapache2-mod-php5 \
	curl \
	mysql-server \
	mysql-client \
	openssh-server \
	phpmyadmin \
	wget \
	supervisor
RUN apt-get clean


# Install Composer.
RUN curl -sS https://getcomposer.org/installer | php
RUN mv composer.phar /usr/local/bin/composer


# Install Drush 7.
RUN composer global require drush/drush:7.*
RUN composer global update
# Unfortunately, adding the composer vendor dir to the PATH doesn't seem to work. So:
RUN ln -s /root/.composer/vendor/bin/drush /usr/local/bin/drush


# Setup PHP.
RUN sed -i 's/display_errors = Off/display_errors = On/' /etc/php5/apache2/php.ini
RUN sed -i 's/display_errors = Off/display_errors = On/' /etc/php5/cli/php.ini


# Setup Blackfire.
# Get the sources and install the Debian packages.
# We create our own start script. If the environment variables are set, we
# simply start Blackfire in the foreground. If not, we create a dummy daemon
# script that simply loops indefinitely. This is to trick Supervisor into
# thinking the program is running and avoid unnecessary error messages.
RUN wget -O - https://packagecloud.io/gpg.key | apt-key add -
RUN echo ""deb http://packages.blackfire.io/debian any main"" > /etc/apt/sources.list.d/blackfire.list
RUN apt-get update
RUN apt-get install -y blackfire-agent blackfire-php
RUN echo -e '#!/bin/bash\n\
if [[ -z ""$BLACKFIREIO_SERVER_ID"" || -z ""$BLACKFIREIO_SERVER_TOKEN"" ]]; then\n\
    while true; do\n\
        sleep 1000\n\
    done\n\
else\n\
    /usr/bin/blackfire-agent -server-id=""$BLACKFIREIO_SERVER_ID"" -server-token=""$BLACKFIREIO_SERVER_TOKEN""\n\
fi\n\
' > /usr/local/bin/launch-blackfire
RUN chmod +x /usr/local/bin/launch-blackfire
RUN mkdir -p /var/run/blackfire


# Setup Apache.
# In order to run our Simpletest tests, we need to make Apache
# listen on the same port as the one we forwarded. Because we use
# 8080 by default, we set it up for that port.
RUN sed -i 's/AllowOverride None/AllowOverride All/' /etc/apache2/apache2.conf
RUN sed -i 's/DocumentRoot \/var\/www\/html/DocumentRoot \/var\/www/' /etc/apache2/sites-available/000-default.conf
RUN echo ""Listen 8080"" >> /etc/apache2/ports.conf
RUN sed -i 's/VirtualHost \*:80/VirtualHost \*:\*/' /etc/apache2/sites-available/000-default.conf
RUN a2enmod rewrite


# Setup PHPMyAdmin
RUN echo -e ""\n# Include PHPMyAdmin configuration\nInclude /etc/phpmyadmin/apache.conf\n"" >> /etc/apache2/apache2.conf
RUN sed -i -e ""s/\/\/ \$cfg\['Servers'\]\[\$i\]\['AllowNoPassword'\]/\$cfg\['Servers'\]\[\$i\]\['AllowNoPassword'\]/g"" /etc/phpmyadmin/config.inc.php


# Setup MySQL, bind on all addresses.
RUN sed -i -e 's/^bind-address\s*=\s*127.0.0.1/#bind-address = 127.0.0.1/' /etc/mysql/my.cnf


# Setup SSH.
RUN echo 'root:root' | chpasswd
RUN sed -i 's/PermitRootLogin without-password/PermitRootLogin yes/' /etc/ssh/sshd_config
RUN mkdir /var/run/sshd && chmod 0755 /var/run/sshd
RUN mkdir -p /root/.ssh/ && touch /root/.ssh/authorized_keys
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd


# Setup Supervisor.
RUN echo -e '[program:apache2]\ncommand=/bin/bash -c ""source /etc/apache2/envvars && exec /usr/sbin/apache2 -DFOREGROUND""\nautorestart=true\n\n' >> /etc/supervisor/supervisord.conf
RUN echo -e '[program:mysql]\ncommand=/usr/bin/pidproxy /var/run/mysqld/mysqld.pid /usr/sbin/mysqld\nautorestart=true\n\n' >> /etc/supervisor/supervisord.conf
RUN echo -e '[program:sshd]\ncommand=/usr/sbin/sshd -D\n\n' >> /etc/supervisor/supervisord.conf
RUN echo -e '[program:blackfire]\ncommand=/usr/local/bin/launch-blackfire\n\n' >> /etc/supervisor/supervisord.conf


EXPOSE 80 3306 22
CMD exec supervisord -n
","Shell
100.0%",2016-01-06 03:15:03,2016-01-06 03:25:04,https://github.com/simonchisnall-online/drupalinstallbehat
25,darren-a/udemy-meanjs-second,,"FROM dockerfile/nodejs


MAINTAINER Matthias Luebken, matthias@catalyst-zero.com


WORKDIR /home/mean


# Install Mean.JS Prerequisites
RUN npm install -g grunt-cli
RUN npm install -g bower


# Install Mean.JS packages
ADD package.json /home/mean/package.json
RUN npm install


# Manually trigger bower. Why doesnt this work via npm install?
ADD .bowerrc /home/mean/.bowerrc
ADD bower.json /home/mean/bower.json
RUN bower install --config.interactive=false --allow-root


# Make everything available for start
ADD . /home/mean


# currently only works for development
ENV NODE_ENV development


# Port 3000 for server
# Port 35729 for livereload
EXPOSE 3000 35729
CMD [""grunt""]
","JavaScript
84.7%





HTML
14.6%





Other
0.7%",2016-01-13 23:06:23,2016-01-13 23:09:30,https://github.com/darren-a/udemy-meanjs-second
26,colstrom/docker-upx,,"FROM colstrom/alpine


ADD upx /usr/local/bin/upx


ENTRYPOINT [""upx""]
","Shell
100.0%",2016-01-22 23:04:59,2016-01-23 00:00:30,https://github.com/colstrom/docker-upx
27,colstrom/docker-upx,,"FROM packages/build-base


RUN apk-install \
                perl \
                xz-dev \
                zlib-dev
","Shell
100.0%",2016-01-22 23:04:59,2016-01-23 00:00:30,https://github.com/colstrom/docker-upx
28,go-smart/glossia-container-goosefoot,"Organization(name=None, id=16688555)","FROM ubuntu:15.10


RUN adduser --system --quiet --home /var/run/gssf --no-create-home --shell /bin/false --group --gecos ""Go-Smart Simulation Framework"" gssf


RUN apt-get update


RUN apt-get install -y python python-pip python3 python3-pip libjsoncpp-dev cmake python3-yaml git python3-lxml software-properties-common \
        python-vtk libcgal-dev swig wget python-dev libvtk5-dev autoconf automake libtool curl libboost-filesystem-dev gmsh python3-numpy \
        python3-jinja2 libtinyxml2-dev python-numpy python-lxml


RUN pip install slugify


RUN pip3 install hachiko


RUN apt-get build-dep -y liboce-visualization-dev elmer


RUN apt-get install -y gdb # RMV


RUN cd /usr/local/src && wget https://github.com/tpaviot/oce/archive/OCE-0.16.1.tar.gz && tar -xzf OCE-0.16.1.tar.gz && mkdir /tmp/oce-build


WORKDIR /tmp/oce-build


RUN cmake /usr/local/src/oce-OCE-0.16.1


RUN make && make install


RUN cd /usr/local/src && git clone https://github.com/tpaviot/pythonocc-core.git


RUN mkdir /tmp/pythonocc-core-build


WORKDIR /tmp/pythonocc-core-build


RUN cmake /usr/local/src/pythonocc-core -DPYTHON_INCLUDE_DIR=/usr/include/python2.7 -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython2.7.so


RUN make && make install


RUN curl -SL https://github.com/google/protobuf/releases/download/v3.0.0-beta-2/protobuf-cpp-3.0.0-beta-2.tar.gz | tar -xzC /usr/local/src


RUN mkdir -p /tmp/protobuf-cpp-build


WORKDIR /tmp/protobuf-cpp-build


RUN /usr/local/src/protobuf-3.0.0-beta-2/configure


RUN make


# Should fail on Ruby test (1 FAIL)
#RUN make check


RUN make install && ldconfig


#THIS SHOULD BE removed from APT line at top, once time is available for long OCC rebuild
RUN apt-get remove -y libcgal-dev


WORKDIR /usr/local/src


ENV CGAL_RELEASE=CGAL-4.7
RUN wget https://github.com/CGAL/cgal/releases/download/releases%2F$CGAL_RELEASE/$CGAL_RELEASE.tar.gz -O $CGAL_RELEASE.tar.gz


RUN tar -xzf $CGAL_RELEASE.tar.gz


RUN mkdir /tmp/CGAL-build


WORKDIR /tmp/CGAL-build


RUN cmake -DCMAKE_BUILD_TYPE=Release /usr/local/src/$CGAL_RELEASE


RUN make && make install


ENV GOOSEFOOT_MESHER_CGAL_COMMIT=0695cfe
RUN cd /usr/local/src && git clone https://github.com/go-smart/goosefoot-mesher-cgal.git goosefoot-mesher-cgal && cd goosefoot-mesher-cgal && git checkout ${GOOSEFOOT_MESHER_CGAL_COMMIT}


RUN mkdir -p /tmp/mesher-cgal-build


WORKDIR /tmp/mesher-cgal-build


RUN cmake /usr/local/src/goosefoot-mesher-cgal


RUN make && make install


ENV LD_LIBRARY_PATH /usr/local/lib:/usr/lib:/lib


ENV GSSF_COMMIT=485957
RUN cd /usr/local/src && git clone https://github.com/go-smart/gssf.git gssf && cd gssf && git checkout ${GSSF_COMMIT}


RUN mkdir -p /tmp/gssf-build


WORKDIR /tmp/gssf-build


RUN cmake /usr/local/src/gssf


RUN make && make install
","Shell
100.0%",2016-01-26 13:00:02,2016-01-26 15:56:32,https://github.com/go-smart/glossia-container-goosefoot
29,go-smart/glossia-container-goosefoot,"Organization(name=None, id=16688555)","FROM gosmart/goosefoot-mesher-base


ENV GSSF_ELMER_COMMIT 1d621de3933435210b05d30d0142bfbaac30cc47
RUN cd /usr/src && git clone https://github.com/go-smart/gssf-elmer.git elmer && cd elmer && git checkout ${GSSF_ELMER_COMMIT}


RUN mkdir -p /opt/elmer


WORKDIR /opt/elmer


ENV GSSF_ELMER_PREFIX=/usr/local
RUN cmake /usr/src/elmer -DCMAKE_INSTALL_PREFIX=${GSSF_ELMER_PREFIX}


RUN make


RUN make install


ENV GSSF_LIBNUMA_COMMIT 334c3bb
RUN cd /usr/local/src && git clone https://github.com/go-smart/gssf-elmer-modules.git elmer-libnuma && cd elmer-libnuma && git checkout ${GSSF_LIBNUMA_COMMIT}


RUN mkdir -p /tmp/elmer-libnuma-build


WORKDIR /tmp/elmer-libnuma-build


RUN cmake /usr/local/src/elmer-libnuma -DCMAKE_INSTALL_PREFIX=${GSSF_ELMER_PREFIX}


RUN make && make install


# Remake GSSF to ensure Elmer is recognised
RUN rm -rf /tmp/gssf-build && mkdir -p /tmp/gssf-build


WORKDIR /tmp/gssf-build


RUN cmake /usr/local/src/gssf


RUN make && make install


ENV GSSA_CONTAINER_MODULE_COMMIT=a258bda
RUN pip3 install git+https://github.com/go-smart/gssa-container-module@$GSSA_CONTAINER_MODULE_COMMIT


RUN mkdir -p /var/run/gssf /shared


RUN chown -R gssf:gssf /var/run/gssf
RUN chown -R gssf:gssf /shared


WORKDIR /var/run/gssf


COPY env.sh /


USER gssf


ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8
ENTRYPOINT [""/env.sh""]
","Shell
100.0%",2016-01-26 13:00:02,2016-01-26 15:56:32,https://github.com/go-smart/glossia-container-goosefoot
0,christian-blades-cb/aglio-docker,,"# Pull base image
FROM alpine:3.3


LABEL version=2.2.0


RUN apk -U add nodejs g++ make python; npm install -g aglio@2.2.0; apk del g++ make python


ENTRYPOINT [""aglio""]
",,2016-01-27 03:21:00,2017-07-26 19:21:21,https://github.com/christian-blades-cb/aglio-docker
1,rockraft7/InventoryApp,,"###
# swagger-ui-builder - https://github.com/swagger-api/swagger-ui/
# Container for building the swagger-ui static site
#
# Build: docker build -t swagger-ui-builder .
# Run:   docker run -v $PWD/dist:/build/dist swagger-ui-builder
#
###


FROM    ubuntu:14.04
MAINTAINER dnephin@gmail.com


ENV     DEBIAN_FRONTEND noninteractive


RUN     apt-get update && apt-get install -y git npm nodejs openjdk-7-jre
RUN     ln -s /usr/bin/nodejs /usr/local/bin/node


WORKDIR /build
ADD     package.json    /build/package.json
RUN     npm install
ADD     .   /build
CMD     ./node_modules/gulp/bin/gulp.js serve
","Java
42.5%





JavaScript
30.6%





HTML
21.0%





ApacheConf
4.8%





CSS
1.1%",2016-01-27 14:37:48,2016-01-27 16:07:26,https://github.com/rockraft7/InventoryApp
2,vijayshinva/MachineLearningUltimate,,"FROM ubuntu:14.04


MAINTAINER Vijayshinva Karnure <Vijayshinva.github.io>


LABEL version=""0.1""
LABEL description=""One image to rule them all!""


# Update APT-GET Sources
RUN apt-get update -y


# Utilities
RUN apt-get install wget -y


# Anaconda
RUN wget --quiet https://repo.continuum.io/archive/Anaconda2-2.4.1-Linux-x86_64.sh
RUN bash Anaconda2-2.4.1-Linux-x86_64.sh -b -p /opt/anaconda
ENV PATH /opt/anaconda/bin:$PATH
RUN rm /Anaconda2-2.4.1-Linux-x86_64.sh


#Utilities
RUN pip install --upgrade pip
RUN apt-get install git-all -y


# R
RUN apt-get install r-base -y


# TensorFlow
RUN pip install --upgrade https://storage.googleapis.com/tensorflow/linux/cpu/tensorflow-0.5.0-cp27-none-linux_x86_64.whl


# Theano
RUN pip install Theano


# IPython
EXPOSE 8888




WORKDIR ""/root""


CMD [""/bin/bash""]
",,2016-02-01 06:46:13,2017-09-19 12:02:16,https://github.com/vijayshinva/MachineLearningUltimate
3,astagi/lcdchar,,"# To build and run with Docker:
#
#  $ docker build -t ng2-quickstart .
#  $ docker run -it --rm -p 3000:3000 -p 3001:3001 ng2-quickstart
#
FROM node:latest


RUN mkdir -p /quickstart /home/nodejs && \
    groupadd -r nodejs && \
    useradd -r -g nodejs -d /home/nodejs -s /sbin/nologin nodejs && \
    chown -R nodejs:nodejs /home/nodejs


WORKDIR /quickstart
COPY package.json typings.json /quickstart/
RUN npm install --unsafe-perm=true


COPY . /quickstart
RUN chown -R nodejs:nodejs /quickstart
USER nodejs


CMD npm start
","JavaScript
74.9%





CSS
12.2%





TypeScript
9.0%





HTML
3.9%",2016-02-01 08:28:01,2016-03-08 07:02:24,https://github.com/astagi/lcdchar
4,sonymoon/jhip-example,,"###
# swagger-ui-builder - https://github.com/swagger-api/swagger-ui/
# Container for building the swagger-ui static site
#
# Build: docker build -t swagger-ui-builder .
# Run:   docker run -v $PWD/dist:/build/dist swagger-ui-builder
#
###


FROM    ubuntu:14.04
MAINTAINER dnephin@gmail.com


ENV     DEBIAN_FRONTEND noninteractive


RUN     apt-get update && apt-get install -y git npm nodejs openjdk-7-jre
RUN     ln -s /usr/bin/nodejs /usr/local/bin/node


WORKDIR /build
ADD     package.json    /build/package.json
RUN     npm install
ADD     .   /build
CMD     ./node_modules/gulp/bin/gulp.js serve
","Java
41.2%





JavaScript
30.2%





HTML
19.5%





ApacheConf
5.3%





Shell
1.5%





CSS
1.2%





Batchfile
1.1%",2016-02-05 10:11:48,2016-02-05 10:15:32,https://github.com/sonymoon/jhip-example
5,sonymoon/jhip-example,,"###
# swagger-ui-builder - https://github.com/swagger-api/swagger-ui/
# Container for building the swagger-ui static site
#
# Build: docker build -t swagger-ui-builder .
# Run:   docker run -v $PWD/dist:/build/dist swagger-ui-builder
#
###


FROM    ubuntu:14.04
MAINTAINER dnephin@gmail.com


ENV     DEBIAN_FRONTEND noninteractive


RUN     apt-get update && apt-get install -y git npm nodejs openjdk-7-jre
RUN     ln -s /usr/bin/nodejs /usr/local/bin/node


WORKDIR /build
ADD     package.json    /build/package.json
RUN     npm install
ADD     .   /build
CMD     ./node_modules/gulp/bin/gulp.js serve
","Java
41.2%





JavaScript
30.2%





HTML
19.5%





ApacheConf
5.3%





Shell
1.5%





CSS
1.2%





Batchfile
1.1%",2016-02-05 10:11:48,2016-02-05 10:15:32,https://github.com/sonymoon/jhip-example
6,seanlth/CS4098PaddyPaddy,,"#
# example Dockerfile for http://docs.docker.io/en/latest/examples/postgresql_service/
#


FROM ubuntu
MAINTAINER SvenDowideit@docker.com


# Add the PostgreSQL PGP key to verify their Debian packages.
# It should be the same key as https://www.postgresql.org/media/keys/ACCC4CF8.asc 
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8


# Add PostgreSQL's repository. It contains the most recent stable release
#     of PostgreSQL, ``9.3``.
RUN echo ""deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main"" > /etc/apt/sources.list.d/pgdg.list


# Update the Ubuntu and PostgreSQL repository indexes
RUN apt-get update


# Install ``python-software-properties``, ``software-properties-common`` and PostgreSQL 9.3
#  There are some warnings (in red) that show up during the build. You can hide
#  them by prefixing each apt-get statement with DEBIAN_FRONTEND=noninteractive
RUN apt-get -y -q install python-software-properties software-properties-common
RUN apt-get -y -q install postgresql-9.3 postgresql-client-9.3 postgresql-contrib-9.3


# Note: The official Debian and Ubuntu images automatically ``apt-get clean``
# after each ``apt-get`` 


# Run the rest of the commands as the ``postgres`` user created by the ``postgres-9.3`` package when it was ``apt-get installed``
USER postgres


# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and
# then create a database `docker` owned by the ``docker`` role.
# Note: here we use ``&&\`` to run commands one after the other - the ``\``
#       allows the RUN command to span multiple lines.
RUN    /etc/init.d/postgresql start &&\
    psql --command ""CREATE USER docker WITH SUPERUSER PASSWORD 'docker';"" &&\
    createdb -O docker docker


# Adjust PostgreSQL configuration so that remote connections to the
# database are possible. 
RUN echo ""host all  all    0.0.0.0/0  md5"" >> /etc/postgresql/9.3/main/pg_hba.conf


# And add ``listen_addresses`` to ``/etc/postgresql/9.3/main/postgresql.conf``
RUN echo ""listen_addresses='*'"" >> /etc/postgresql/9.3/main/postgresql.conf


# Expose the PostgreSQL port
EXPOSE 5432


# Add VOLUMEs to allow backup of config, logs and databases
VOLUME	[""/etc/postgresql"", ""/var/log/postgresql"", ""/var/lib/postgresql""]


# Set the default command to run when starting the container
CMD [""/usr/lib/postgresql/9.3/bin/postgres"", ""-D"", ""/var/lib/postgresql/9.3/main"", ""-c"", ""config_file=/etc/postgresql/9.3/main/postgresql.conf""]
","JavaScript
88.4%





HTML
10.0%





CSS
1.2%





Python
0.3%





Makefile
0.1%





LiveScript
0.0%",2016-02-05 10:24:19,2017-05-24 04:44:45,https://github.com/seanlth/CS4098PaddyPaddy
7,tmyjoe/akka-microservices-template,,"FROM java:8
MAINTAINER tmyjoe


ARG JAR
ARG PORT


ADD ${JAR} app.jar


EXPOSE ${PORT}


ENTRYPOINT java -jar app.jar


# docker build -t ${NAME} --build-arg JAR=PATH_TO_A_JAR --build-arg PORT=9000 .
","Scala
93.3%





Shell
6.7%",2016-02-11 05:58:20,2016-02-11 10:46:11,https://github.com/tmyjoe/akka-microservices-template
8,ptimof/docker-brunel,,"FROM jupyter/notebook:stable


ENV DEBIAN_FRONTEND noninteractive
RUN apt-get update \
 && apt-get install -y \
 wget \
 curl \
 unzip \
 openjdk-7-jdk \
 python3-pandas \
 python3-numpy \
 && apt-get autoremove -y \
 && apt-get clean -y


RUN pip3 install ipywidgets
RUN pip3 install brunel


CMD ipython notebook --ip='*'
",,2016-01-06 21:48:05,2016-01-06 21:48:05,https://github.com/ptimof/docker-brunel
9,eliagbayani/eoearth,,"# PHP 6 Docker file with Composer installed
FROM composer/composer


RUN apt-get update
RUN apt-get upgrade -y
RUN apt-get install -y nano
RUN apt-get install -y cloc


# XSL and Graphviz for PhpDocumentor
RUN apt-get install -y php5-xsl
# TODO: Debian is putting the xsl extension in a different directory, should be in: /usr/local/lib/php/extensions/no-debug-non-zts-20131226
RUN echo ""extension=/usr/lib/php5/20131226/xsl.so"" >> /usr/local/etc/php/conf.d/xsl.ini
RUN apt-get install -y graphviz




RUN echo ""date.timezone=UTC"" >> /usr/local/etc/php/conf.d/timezone.ini


# Xdebug for coverage report
RUN apt-get install -y php5-xdebug
RUN echo ""zend_extension=/usr/lib/php5/20131226/xdebug.so"" >> /usr/local/etc/php/conf.d/xdebug.ini


# Memcache
RUN apt-get install -y php5-memcache
RUN echo ""extension=/usr/lib/php5/20131226/memcache.so"" >> /usr/local/etc/php/conf.d/memcache.ini


# Add composer bin to the environment
ENV PATH=/root/composer/vendor/bin:$PATH


# Overcome github access limits. GITHUB_OAUTH_TOKEN environment variable must be set with private token
RUN composer self-update


# Install development tools
RUN composer global require ""phpunit/phpunit=~4.7""
RUN composer global require ""pdepend/pdepend=~2.0""
RUN composer global require ""phpmd/phpmd=~2.2""
RUN composer global require ""mayflower/php-codebrowser=~1.1""
RUN composer global require ""sebastian/phpcpd=~2.0""
RUN composer global require ""squizlabs/php_codesniffer=~2.3""
RUN composer global require ""phploc/phploc=~2.1""
RUN composer global require ""fabpot/php-cs-fixer=1.8.1""




# Documentor dependencies
RUN composer global require ""phpdocumentor/template-zend=~1.3""
RUN composer global require ""phpdocumentor/phpdocumentor=~2.8""


# Install depdencies
WORKDIR /app
COPY composer.json /app/
RUN composer install


# Guzzle is not included composer.json because of PHP 5.3
RUN composer require ""guzzlehttp/guzzle=~6.0""


ENTRYPOINT []


ENV ES_HOST elasticsearch
ENV PROXY_HOST nginx
","PHP
60.3%





JavaScript
24.6%





CSS
13.0%





HTML
0.9%





Ruby
0.4%





PLSQL
0.2%





Other
0.6%",2016-01-12 10:05:01,2016-01-12 10:18:53,https://github.com/eliagbayani/eoearth
10,eliagbayani/eoearth,,"FROM elasticsearch:1.6.0
MAINTAINER Nicolas Ruflin <spam@ruflin.com>


# Dependencies
ENV ES_MAPPER_ATTACHMENTS_VER 2.6.0
ENV ES_TRANSPORT_MEMCACHED_VER 2.6.0
ENV ES_TRANSPORT_THRIFT_VER 2.6.0
ENV ES_GEOCLUSTER_FACET_VER 0.0.12
ENV ES_IMAGE_PLUGIN_VER 1.4.0
ENV ES_PLUGIN_BIN /usr/share/elasticsearch/bin/plugin


# Install Plugins
RUN ${ES_PLUGIN_BIN} -install elasticsearch/elasticsearch-mapper-attachments/${ES_MAPPER_ATTACHMENTS_VER}
RUN ${ES_PLUGIN_BIN} -install image --url https://github.com/SibaTokyo/elasticsearch-image/releases/download/${ES_IMAGE_PLUGIN_VER}/elasticsearch-image-${ES_IMAGE_PLUGIN_VER}.zip
RUN ${ES_PLUGIN_BIN} -install geocluster-facet --url https://github.com/zenobase/geocluster-facet/releases/download/${ES_GEOCLUSTER_FACET_VER}/geocluster-facet-${ES_GEOCLUSTER_FACET_VER}.jar
RUN ${ES_PLUGIN_BIN} -install elasticsearch/elasticsearch-transport-thrift/${ES_TRANSPORT_THRIFT_VER}
RUN ${ES_PLUGIN_BIN} -install elasticsearch/elasticsearch-transport-memcached/${ES_TRANSPORT_MEMCACHED_VER}


# Debug interface
RUN ${ES_PLUGIN_BIN} -install mobz/elasticsearch-head


# Copy config files
COPY *.yml /usr/share/elasticsearch/config/


# Expose standard ports, thrift, udp, memcache
EXPOSE 9200 9300 9500 9700 9800 11211
","PHP
60.3%





JavaScript
24.6%





CSS
13.0%





HTML
0.9%





Ruby
0.4%





PLSQL
0.2%





Other
0.6%",2016-01-12 10:05:01,2016-01-12 10:18:53,https://github.com/eliagbayani/eoearth
11,alinmindroc/Mean-App,,"FROM ubuntu:12.04
MAINTAINER Remy Sharp <remy@leftlogic.com>


RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN apt-get update && apt-get install curl npm -y


ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 4
ENV NVM_VERSION 0.26.1
ENV TRAVIS TRUE


# # Install nvm with node and npm
RUN curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VERSION/install.sh | bash \
    && source $NVM_DIR/nvm.sh \
    && nvm install 0.10 \
    && nvm install 0.12 \
    && nvm install 4 \
    && nvm alias default $NODE_VERSION \
    && nvm use default
","JavaScript
98.2%





CSS
1.8%",2016-01-14 17:45:30,2017-01-29 12:28:12,https://github.com/alinmindroc/Mean-App
12,lister284/sonos,,"###############################################
# Debian with sonos http api
###############################################


# Using latest debian image as base (ubuntu is a fat cow)
FROM node:4-slim


MAINTAINER Erik-jan Riemers


RUN apt-get update
RUN apt-get -y install npm git git-core


ADD dockerstart.sh /tmp/
RUN chmod +x /tmp/dockerstart.sh
CMD ./tmp/dockerstart.sh
","JavaScript
89.6%





CSS
9.5%





Other
0.9%",2016-01-18 17:25:28,2016-01-18 17:28:23,https://github.com/lister284/sonos
13,timadorus/rebar3-build,"Organization(name=None, id=2369680)","#
# Erlang build environment.
#
# docker build -t pt_erlang_build .
#
# APP_SOURCE_DIR is the folder containing the rebar.config file. 
#
# To execute unfortunately you have to use a linux machine. For windows, you have to log into the
# docker-machine VM. '$USERNAME' is the name you use on your private repositories
#
# docker run --rm --name build_test -v $SSH_AUTH_SOCK:$SSH_AUTH_SOCK -e SSH_AUTH_SOCK \
#     -v  $APP_SOURCE_DIR:/erlang_app timadorus/rebar3-build $USERNAME
#
# you must have a ssh-agent running, and it will only work if running local on the docker host!!!
#




# reuse the image already created 
FROM erlang


MAINTAINER Lutz Behnke <lutz.behnke@gmx.de>


RUN apt-get update
RUN apt-get -y install openssh-client git


RUN mkdir /build
WORKDIR /build/


ADD build_erlang.sh /build/
ADD https://s3.amazonaws.com/rebar3/rebar3 /build/
RUN chmod a+x /build/rebar3


VOLUME /erlang_app


CMD [""nouser""]
ENTRYPOINT [""/bin/bash"",""-ev"",""/build/build_erlang.sh"",""/erlang_app"",""/build""]




","Shell
100.0%",2016-01-05 09:52:16,2016-01-22 14:15:29,https://github.com/timadorus/rebar3-build
14,bradynpoulsen/docker-cs2810-nasm,,"FROM alpine


RUN apk update
RUN apk add binutils nasm


COPY bin/mynasm /usr/bin/mynasm
RUN chmod +x /usr/bin/mynasm


COPY ./.profile /root/.profile


VOLUME [""/code""]
WORKDIR /code


CMD [""/bin/sh"", ""--login""]
","Shell
100.0%",2016-01-14 22:24:23,2016-01-14 22:25:03,https://github.com/bradynpoulsen/docker-cs2810-nasm
15,TerrenceMiao/camel-spring,,"## Camel / Spring Boot demo in Docker


FROM jtech/oracle-jdk:latest


MAINTAINER Terrence Miao <TerrenceMiao@users.noreply.github.com>


ADD build/libs/camel-spring-1.0-SNAPSHOT.jar camel-spring.jar


EXPOSE 8080


## application log directory
VOLUME /var/log


## use ENTRYPOINT and CMD to pass arguments
ENTRYPOINT [""/usr/local/jdk/bin/java"", ""-jar"", ""camel-spring.jar""]
CMD [""""]
","Java
99.5%





Shell
0.5%",2016-01-17 18:49:05,2017-11-04 04:36:06,https://github.com/TerrenceMiao/camel-spring
16,pjperez/docker-iperfserver,,"# -----------------------------------------------------------------------------
# docker-iperfserver
#
# Base Ubuntu + SoftEther VPN + Wormhole + iPerf
# (https://wormhole.network).
#
# Authors: Pedro Perez
# Updated: Jan 16th, 2016
# Require: Docker (http://www.docker.io/)
# -----------------------------------------------------------------------------




# Base system is the LTS version of Ubuntu.
FROM   ubuntu:14.04




# Make sure we don't get notifications we can't answer during building.
ENV    DEBIAN_FRONTEND noninteractive


# Let's keep everything tidy
WORKDIR /usr/local/vpnclient


# Download and install the needed tools
RUN apt-get update &&\
        apt-get -y -q install gcc make wget iperf && \
        apt-get clean && \
        rm -rf /var/cache/apt/* /var/lib/apt/lists/* && \
        wget https://whdowns.blob.core.windows.net/whclient/softether-vpnclient-v4.19-9599-beta-2015.10.19-linux-x64-64bit.tar.gz -O /tmp/softether-vpnclient.tar.gz &&\
        tar -xzvf /tmp/softether-vpnclient.tar.gz -C /usr/local/ &&\
        rm /tmp/softether-vpnclient.tar.gz &&\
        make i_read_and_agree_the_license_agreement &&\
        apt-get purge -y -q --auto-remove gcc make wget && \
        apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*




RUN mv /sbin/dhclient /usr/sbin/dhclient


# Load in all of our config files.
ADD    ./scripts/start /start
ADD    ./linuxconfig /usr/local/vpnclient/linuxconfig
ADD    ./*.vpn /usr/local/vpnclient/


# Fix all permissions
RUN    chmod +x /start


# /start runs it.
CMD    [""/start""]
","Shell
100.0%",2016-01-16 03:31:05,2016-03-24 03:06:19,https://github.com/pjperez/docker-iperfserver
17,GeppettoTeam/CarPopUpGreen_10008,,"FROM mysql:5.7
ENV MYSQL_ROOT_PASSWORD tang3456
COPY db_creation_script.sql /docker-entrypoint-initdb.d/
COPY tables_db_script.sql /docker-entrypoint-initdb.d/
","JavaScript
78.9%





CSS
16.8%





HTML
3.5%





Other
0.8%",2016-11-27 11:05:33,2016-11-27 11:05:47,https://github.com/GeppettoTeam/CarPopUpGreen_10008
18,GeppettoTeam/CarPopUpGreen_10008,,"FROM java:8
RUN mkdir /app
COPY build/libs/CarPopUpGreen_10008.jar /app
COPY wait-for-it.sh /app
RUN chmod +x /app/wait-for-it.sh
WORKDIR /app
CMD [""java"",""-jar"",""CarPopUpGreen_10008.jar""]
","JavaScript
78.9%





CSS
16.8%





HTML
3.5%





Other
0.8%",2016-11-27 11:05:33,2016-11-27 11:05:47,https://github.com/GeppettoTeam/CarPopUpGreen_10008
19,cheyang/composer,,"FROM golang:1.6-alpine


ENV DISTRIBUTION_DIR /go/src/github.com/docker/distribution
ENV DOCKER_BUILDTAGS include_oss include_gcs


RUN set -ex \
    && apk add --no-cache make git


WORKDIR $DISTRIBUTION_DIR
COPY . $DISTRIBUTION_DIR
COPY cmd/registry/config-dev.yml /etc/docker/registry/config.yml


RUN make PREFIX=/go clean binaries


VOLUME [""/var/lib/registry""]
EXPOSE 5000
ENTRYPOINT [""registry""]
CMD [""serve"", ""/etc/docker/registry/config.yml""]
","Go
100.0%",2016-11-27 05:29:25,2016-11-27 05:40:00,https://github.com/cheyang/composer
20,goomoopunch/BiggityBudget,,"FROM microsoft/dotnet:latest


RUN apt-get update
RUN apt-get install -y build-essential nodejs nodejs-legacy


WORKDIR /app


COPY project.json .
RUN [""dotnet"", ""restore""]


COPY . /app
RUN [""dotnet"", ""build""]


EXPOSE 5000/tcp


ENTRYPOINT [""dotnet"", ""run"", ""--server.urls"", ""http://0.0.0.0:5000""]
","TypeScript
32.2%





C#
25.2%





HTML
18.6%





JavaScript
17.3%





CSS
6.7%",2016-11-25 20:25:47,2016-11-25 20:25:50,https://github.com/goomoopunch/BiggityBudget
21,tseng8628/docker_build,,"FROM ubuntu:14.04
MAINTAINER docker ""docker@nginx.com""
RUN apt-get update && apt-get install -y nginx
CMD [""nginx"", ""-g"", ""daemon off;""]
",,2016-11-26 02:48:45,2016-11-26 02:48:45,https://github.com/tseng8628/docker_build
22,mitchellcmurphy/touristBingo,,"# Builds a Docker to deliver dist/
FROM nginx:latest
COPY dist/ /usr/share/nginx/html
","TypeScript
44.1%





JavaScript
42.6%





HTML
8.6%





CSS
4.7%",2016-11-07 04:09:47,2016-12-21 17:20:50,https://github.com/mitchellcmurphy/touristBingo
23,jacohen10/docker-elevate,,"FROM ruby:2.2.0
RUN apt-get update -qq && apt-get install -y build-essential libpq-dev nodejs
RUN mkdir /myapp
WORKDIR /myapp
ADD Gemfile /myapp/Gemfile
ADD Gemfile.lock /myapp/Gemfile.lock
RUN bundle install
ADD . /myapp


EXPOSE 3000
","HTML
55.5%





Ruby
27.9%





CSS
13.6%





JavaScript
2.9%





CoffeeScript
0.1%",2016-10-29 16:21:45,2016-10-29 16:29:53,https://github.com/jacohen10/docker-elevate
24,stcalica/NginxDockerProxyPass,,"FROM nginx:latest
MAINTAINER Kyle Calica ""Kyle Calica""


#for nodejs
RUN apt-get update
RUN apt-get install -y build-essential git




#nginx configuration
RUN rm /etc/nginx/nginx.conf
COPY ./nginx.conf /etc/nginx/


#RUN mkdir /etc/nginx/sites-enabled
#RUN mkdir -p /var/www/coddeisdead/html
#RUN mkdir -p /var/www/server2/html


#RUN chmod 755 /var/www/


#COPY ./stcalica.github.io /var/www/codeisdead
#COPY ./server/server2 /var/www/server2


#COPY ./sites-enabled/codeisdead /etc/nginx/sites-available/
#COPY ./sites-enabled/server2 /etc/nginx/sites-available/


#RUN ln -s /etc/nginx/sites-available/codeisdead /etc/nginx/sites-enabled/
#RUN ln -s /etc/nginx/sites-available/server2 /etc/nginx/sites-enabled/




EXPOSE 80
","Nginx
100.0%",2016-11-28 23:54:18,2016-11-29 03:50:10,https://github.com/stcalica/NginxDockerProxyPass
25,xzdbd/dockerfiles,,"FROM python:3.4


ENV GOOGLER_GIT_URL https://github.com/jarun/googler/
ENV GO_VERSION 1.7.3
ENV GO_URL https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz


ADD $GO_URL /tmp/


RUN git clone $GOOGLER_GIT_URL &&\
    cd googler/ &&\
    make install


RUN tar -C /usr/local -xzf /tmp/go$GO_VERSION.linux-amd64.tar.gz &&\
	mkdir /gopath &&\
    mkdir /gopath/src &&\
    mkdir /gopath/bin &&\
    mkdir /gopath/lib &&\
    rm -f /tmp/go$GO_VERSION.linux-amd64.tar.gz


ENV GOPATH /gopath
ENV PATH $PATH:/usr/local/go/bin:$GOPATH/bin


RUN go get -u github.com/xzdbd/api &&\
	go get -u github.com/beego/bee
 
EXPOSE 8098


CMD bee run $GOPATH/src/github.com/xzdbd/api
","Shell
100.0%",2016-07-29 18:00:10,2017-11-07 08:12:59,https://github.com/xzdbd/dockerfiles
26,joshbav/scaler,,"FROM mesosphere/marathon-lb:latest
RUN export TERM=xterm
RUN apt-get update \ 
&& apt-get install -y \
curl \
vim \
less \
nano \
jq \
iputils-ping \
net-tools \
traceroute \
netcat \
dnsutils \
tcpdump \
nmap \
python3 \
python3-pip \
atop \
p7zip \
txt2regex \ 
git \
expect


# need to not use marathon-lb's entrypoint, not sure if it gets inherited or not, setting it just in case
ENTRYPOINT bash 
WORKDIR /


CMD pip3 install virtualenv
CMD export LC_ALL=C.UTF-8
CMD export LANG=C.UTF-8


# add the dcos CLI files
ADD https://downloads.dcos.io/binaries/cli/linux/x86-64/0.4.14/dcos /usr/local/sbin/dcos
# Not sure why this command doesn't seem to run / stick
RUN chmod u+x /usr/local/sbin/dcos


# zdd.py requirements already satisfied since we're using marathon-lb container as the base for this container
#CMD pip3 install --upgrade pip
#CMD pip3 install -r requirements.txt


# add utility scripts, such as for logging into DC/OS via the API
ADD https://raw.githubusercontent.com/mesosphere/dcos-commons/master/tools/dcos_login.py


add README.md /


# add project files
RUN chmod u+x /*.sh
ADD *.json / 
ADD *.sh /
RUN chmod u+x /*.sh


# add scripts, hence the name of this container even if it's used for ZDD or other uses than auto scale
# Documentation https://docs.mesosphere.com/1.8/usage/tutorials/autoscaling/
ADD https://github.com/mesosphere/marathon-autoscale/blob/master/marathon-autoscale.py /
ADD https://github.com/mesosphere/marathon-autoscale/blob/master/marathon-servicediscovery.py /
ADD https://github.com/mesosphere/marathon-autoscale/blob/master/marathon_scale_test.py /
ADD https://github.com/mesosphere/marathon-autoscale/blob/master/sample-mesos-statistics.json /


# add signal wrapper, just in case we need it for the scale down, even though it wouldn't be deployed from this container, but we could extend this container to create an easy test this way. and what signal wrapper does is it prevents the propagation of signals for 10s for the first signal, that way a sigterm doesn't immediately kill the app, and our load blancer has time to take out out of the pool since it learns of the mesos kill signal being sent.
# https://github.com/sargun/signal-wrapper
ADD https://2-69824194-gh.circle-artifacts.com/0/tmp/circle-artifacts.AwoLkSz/signal-wrapper--linux-amd64 /signal-wrapper
CMD chmod u+x /signal-wrapper




","Shell
100.0%",2016-11-26 23:05:19,2016-12-02 17:25:08,https://github.com/joshbav/scaler
27,kokaubeam/intogame.design,,"FROM mhart/alpine-node:7.0.0


WORKDIR /app


COPY .npmrc .npmrc


COPY package.json package.json
RUN npm install


COPY . .


RUN rm -f .npmrc


CMD [""npm"", ""start""]
","JavaScript
93.2%





HTML
6.8%",2016-11-29 06:16:38,2016-11-29 07:17:45,https://github.com/kokaubeam/intogame.design
28,ohr486/MyBooks,,"FROM python:3.4


RUN groupadd -r uwsgi && useradd -r -g uwsgi uwsgi


RUN pip install Flask==0.10.1 uWSGI==2.0.8 requests==2.5.1 redis==2.10.3
WORKDIR /app
COPY app /app
COPY cmd.sh /


EXPOSE 9090 9191
USER uwsgi


CMD [""/cmd.sh""]
","HTML
75.4%





Common Lisp
13.7%





Python
7.6%





Shell
3.3%",2014-02-02 14:28:20,2017-07-15 10:10:32,https://github.com/ohr486/MyBooks
29,Seanmatthews/rowboat-base-images,,"FROM ubergarm/armhf-ubuntu:trusty


ENV QEMU_EXECVE 1
# Force armv6l
# ENV QEMU_CPU arm1176




COPY dockerutils/* /usr/bin/
COPY sources.sh /tmp/


RUN [ ""cross-build-start"" ]


RUN /tmp/sources.sh
RUN more /etc/apt/sources.list


# Problem apt-gets
RUN apt-get update && apt-get install -y --no-install-recommends \
    libgsm1-dev \
    libboost-coroutine-dev \
    libboost-log-dev


RUN apt-get install -y --no-install-recommends \
    git \
    emacs \
    build-essential \
    python-dev \
    g++ \
    python-smbus \
    i2c-tools \
    cmake \
    libusb-1.0-0-dev \
    autoconf \
    automake \
    libass-dev \
    libavdevice-dev \
    libfreetype6-dev \
    libsdl1.2-dev \
    libtheora-dev \
    libtool \
    libva-dev \
    libvdpau-dev \
    libvorbis-dev \
    libxcb1-dev \
    libxcb-shm0-dev \
    libxcb-xfixes0-dev \
    pkg-config \
    texinfo \
    zlib1g-dev \
    libcurl4-openssl-dev \
    libcurlpp-dev \
    libcurlpp0 \
    libjsoncpp-dev


# FFmpeg
RUN git clone https://github.com/FFmpeg/FFmpeg.git; \
    cd FFmpeg; git checkout tags/n3.1.3; \
    ./configure; make; make install; cd ..; rm -rf FFmpeg;


# This fixes roscd (maybe something to do with running ROS as root)
# http://answers.ros.org/question/53353/autocomplete-not-working-anymore/?comment=72208#comment-72208
RUN echo ""export LC_ALL=""C"""" >> ~/.bashrc


# ROS Packages
# Most packages are suites, but some should only be installed individually because
# of either the magnitude of their dependencies or the size of other nodes in the suite.
# Particularly, these should be kept individual installations:
#   roslint
# 
RUN echo ""deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main"" > /etc/apt/sources.list.d/ros-latest.list
RUN apt-key adv --keyserver hkp://pool.sks-keyservers.net --recv-key 0xB01FA116
RUN apt-get clean && apt-get update && apt-get install -y --no-install-recommends \
     ros-indigo-ros-base \
     ros-indigo-catkin \
     ros-indigo-roslint \
     ros-indigo-image-common \
     ros-indigo-diagnostics \
     ros-indigo-image-transport-plugins \
     ros-indigo-teleop-twist-joy \
     ros-indigo-razor-imu-9dof \
     ros-indigo-vision-opencv \
     ros-indigo-geometry \
     python-rosinstall \
     python-catkin-tools 


RUN rosdep init


# Clean up installation files
RUN apt-get clean && rm -rf /var/lib/apt/lists/*


# switch to new user
USER root
WORKDIR /root


# configure ROS (it will give Warning as our UID is same as root, 0)
RUN echo ""source /opt/ros/indigo/setup.bash"" >> /root/.bashrc
RUN echo ""source /root/rowboat1/src/rowboat/devel/setup.bash"" >> /root/.bashrc
RUN bash -c ""source /root/.bashrc && rosdep update""


# Copy in git repo
# COPY . /root/rowboat1
# RUN git clone https://github.com/Seanmatthews/rowboat1.git


RUN [ ""cross-build-end"" ]


ENTRYPOINT [ ""/usr/bin/qemu-arm-static"", ""/usr/bin/env"", ""QEMU_EXECVE=1"" ]
CMD [ ""/bin/bash"" ]


","Shell
100.0%",2016-11-08 03:57:46,2016-11-10 18:32:53,https://github.com/Seanmatthews/rowboat-base-images
0,kevinmager65/docker-plex,,"from ubuntu:16.04


# package version
ENV DEBIAN_FRONTEND=""noninteractive""
ENV HOME=""/config""
ENV PLEX_INSTALL=""https://downloads.plex.tv/plex-media-server/1.2.7.2987-1bef33a/plexmediaserver_1.2.7.2987-1bef33a_amd64.deb""


# update 
RUN apt-get update


# install curl
RUN apt-get install -y curl


# create plex user
RUN useradd --system --uid 1000 -M --shell /usr/sbin/nologin plex


# make home dir
RUN mkdir -p ${HOME}
RUN chown plex ${HOME}


# install plex
RUN  curl -o /tmp/plexmediaserver.deb -L ""${PLEX_INSTALL}""
RUN  dpkg -i /tmp/plexmediaserver.deb


# expose plex ports
EXPOSE 32400 32400/udp 32469 32469/udp 5353/udp 1900/udp


# docker volumes
VOLUME /config /transcode


COPY ./start_plex.sh /usr/sbin/start_plex.sh
RUN chmod a+x /usr/sbin/start_plex.sh




# run plex
USER plex
CMD [""/usr/sbin/start_plex.sh""]




","Shell
100.0%",2016-11-23 21:20:02,2016-11-27 01:16:17,https://github.com/kevinmager65/docker-plex
1,ohr486/MyBooks,,"FROM python:3.4


RUN groupadd -r uwsgi && useradd -r -g uwsgi uwsgi
RUN pip install Flask==0.10.1 uWSGI==2.0.8
WORKDIR /app
COPY app /app
COPY cmd.sh /


EXPOSE 9090 9191
USER uwsgi


CMD [""/cmd.sh""]
","HTML
75.4%





Common Lisp
13.7%





Python
7.6%





Shell
3.3%",2014-02-02 14:28:20,2017-07-15 10:10:32,https://github.com/ohr486/MyBooks
2,xzdbd/dockerfiles,,"FROM xzdbd/golang:alpine


MAINTAINER xzdbd <xzdbd@sina.com>


RUN set -ex \
		apk update && apk upgrade && \
    	apk add --no-cache bash git openssh \
		&& go get -u github.com/xzdbd/ops-angel \
		&& cp -rf /go/src/github.com/xzdbd/ops-angel/conf /go/bin/ \
		&& cp -rf /go/src/github.com/xzdbd/ops-angel/views /go/bin/


EXPOSE 8099


WORKDIR /go/bin


CMD /go/bin/ops-angel
","Shell
100.0%",2016-07-29 18:00:10,2017-11-07 08:12:59,https://github.com/xzdbd/dockerfiles
3,sunfoxcz/docker-nodejs,"Organization(name=None, id=1386186)","FROM phusion/baseimage:latest
MAINTAINER Tomas Jacik <tomas@jacik.cz>


ADD . /build


RUN /build/prepare.sh && \
	/build/system_services.sh && \
	/build/cleanup.sh


CMD [""/sbin/my_init""]
","Shell
52.7%





Makefile
47.3%",2016-05-02 10:03:16,2016-11-30 04:38:57,https://github.com/sunfoxcz/docker-nodejs
4,lucasmengarda/parse-server-aws,,"FROM node:latest


RUN mkdir parse


ADD . /parse
WORKDIR /parse
RUN npm install


ENV APP_ID setYourAppId
ENV MASTER_KEY setYourMasterKey
ENV DATABASE_URI setMongoDBURI


# Optional (default : 'parse/cloud/main.js')
# ENV CLOUD_CODE_MAIN cloudCodePath


# Optional (default : '/parse')
# ENV PARSE_MOUNT mountPath


EXPOSE 1337


# Uncomment if you want to access cloud code outside of your container
# A main.js file must be present, if not Parse will not start


# VOLUME /parse/cloud               


CMD [ ""npm"", ""start"" ]
","JavaScript
42.4%





HTML
29.3%





CSS
28.3%",2016-11-30 02:40:33,2016-11-30 03:12:42,https://github.com/lucasmengarda/parse-server-aws
5,lucasmengarda/parse-server-aws,,,"JavaScript
42.4%





HTML
29.3%





CSS
28.3%",2016-11-30 02:40:33,2016-11-30 03:12:42,https://github.com/lucasmengarda/parse-server-aws
6,mnishikizawa/security-scan,,"FROM infobyte/faraday


RUN sed -i -e 's/^\.\/faraday\.py --gui=no-gui --update/yes | \.\/faraday\.py --gui=no-gui --update/' /root/run.sh


",,2016-12-01 07:05:02,2016-12-01 07:05:02,https://github.com/mnishikizawa/security-scan
7,mnishikizawa/security-scan,,"FROM jenkins


",,2016-12-01 07:05:02,2016-12-01 07:05:02,https://github.com/mnishikizawa/security-scan
8,mnishikizawa/security-scan,,"FROM owasp/zap2docker-stable


",,2016-12-01 07:05:02,2016-12-01 07:05:02,https://github.com/mnishikizawa/security-scan
9,PredicSis/mp_revision_observer,"Organization(name=None, id=6170002)","FROM ruby:2.3


ENV RAILS_ENV production
ENV RACK_ENV production
ENV RAILS_LOG_TO_STDOUT true
ENV LANG c.UTF-8


RUN bundle config --global frozen 1


RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app


RUN apt-get update -qq && apt-get install -y build-essential libpq-dev


COPY Gemfile /usr/src/app/
COPY Gemfile.lock /usr/src/app/


RUN bundle install --deployment --retry=3 --without development test


COPY . /usr/src/app


# mount point for nginx proxy
RUN bundle exec rake assets:precompile
VOLUME [""/usr/src/app/public""]


ADD dockerfiles/nginx.conf /etc/nginx/conf.d/default.conf
VOLUME [""/etc/nginx/conf.d""]


EXPOSE 3000
CMD [""bundle"", ""exec"", ""puma"", ""-v"", ""-C"", ""config/puma.rb""]
","Ruby
76.7%





HTML
15.6%





CSS
2.3%





JavaScript
2.1%





CoffeeScript
1.6%





Nginx
1.1%





Shell
0.6%",2016-04-07 16:20:26,2016-04-08 11:02:31,https://github.com/PredicSis/mp_revision_observer
10,Financial-Times/brightcove-notifier,"Organization(name=None, id=3502508)","FROM alpine:3.4


ADD *.go /brightcove-notifier/


RUN apk add --update bash \
  && apk --update add git bzr \
  && apk --update add go \
  && export GOPATH=/gopath \
  && REPO_PATH=""github.com/Financial-Times/brightcove-notifier"" \
  && mkdir -p $GOPATH/src/${REPO_PATH} \
  && mv brightcove-notifier/* $GOPATH/src/${REPO_PATH} \
  && cd $GOPATH/src/${REPO_PATH} \
  && go get -t ./... \
  && go build \
  && mv brightcove-notifier /brightcove-notifier-app \
  && rm -rf /brightcove-notifier \
  && mv /brightcove-notifier-app /brightcove-notifier \
  && apk del go git bzr \
  && rm -rf $GOPATH /var/cache/apk/*


CMD [ ""/brightcove-notifier"" ]
","Go
56.9%





Python
18.7%





Puppet
12.8%





Shell
9.6%





HTML
2.0%",2016-04-13 09:52:25,2016-04-13 09:58:56,https://github.com/Financial-Times/brightcove-notifier
11,AustralianSynchrotron/robotmx-testioc,"Organization(name=None, id=2002737)","FROM australiansynchrotron/epics:centos6
COPY robotmxtestioc /srv/robotmxtestioc
RUN cd /srv/robotmxtestioc && make
WORKDIR /srv/robotmxtestioc/iocBoot/iocrobotmx
ENV EPICS_CA_AUTO_ADDR_LIST=NO
ENTRYPOINT [""./st.cmd""]
","Makefile
74.5%





Batchfile
15.2%





C++
10.3%",2016-04-13 11:59:32,2017-10-09 06:35:12,https://github.com/AustralianSynchrotron/robotmx-testioc
12,space-beavers/meme-generator-api,"Organization(name=None, id=18359284)","FROM node:5


#
 # To use this image for your developer workflow:
 #
 # docker run -it -p 3000:3000 -v $(pwd):/usr/local/src spacebeavers/sb-meme-generator-api:latest
 #
 #/


ENV NODE_ENV=development


WORKDIR /usr/local/src


COPY package.json /usr/local/src/package.json


RUN npm install


RUN mv node_modules /usr/local


COPY . /usr/local/src/


EXPOSE 3000


CMD [""npm"", ""run"", ""start""]
","JavaScript
71.9%





CSS
23.8%





HTML
4.3%",2016-04-14 02:45:42,2016-04-26 02:41:06,https://github.com/space-beavers/meme-generator-api
13,vjscjp/test9909,,"FROM golang:1.5
EXPOSE 8888
WORKDIR /go/src/app
COPY . /go/src/app


RUN chmod a+x .shipped/build .shipped/run .shipped/test


RUN ["".shipped/build""]
CMD .shipped/run
","Go
67.6%





Shell
32.4%",2016-04-06 15:51:03,2016-04-06 15:51:12,https://github.com/vjscjp/test9909
14,weimeilin79/healthcaredemo,,"FROM jboss-fuse-6/fis-java-openshift:1.0
MAINTAINER docker-maven-plugin@jolokia.org
ENV HTTP_PORT=9123 JAVA_LIB_DIR=/deployments/lib JAVA_MAIN_CLASS=org.apache.camel.spring.Main
EXPOSE 9123
COPY maven /deployments/
","Java
48.8%





Shell
43.2%





Ruby
4.9%





Visual Basic
3.1%",2016-04-07 10:13:42,2016-04-07 10:16:52,https://github.com/weimeilin79/healthcaredemo
15,sgillis/hidenticon,,"FROM samdoshi/haskell-stack


WORKDIR /home
RUN git clone https://github.com/sgillis/hidenticon.git
WORKDIR /home/hidenticon
RUN stack setup
RUN stack install --ghc-options='-static -optc-static -optl-static -optl-pthread'
","Haskell
100.0%",2016-03-30 22:45:19,2016-08-17 15:45:31,https://github.com/sgillis/hidenticon
16,dineshtechnology/shopexplora,,"

FROM centos:centos6
MAINTAINER dinesh<adinesh.developer@gmail.com@gmail.com>
RUN yum -y update; yum clean all
RUN yum -y install epel-release; yum clean all
RUN yum -y install nodejs npm; yum clean all


# Create app directory
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app


# Install app dependencies
COPY package.json /usr/src/app/
RUN npm install


# Bundle app source
COPY . /usr/src/app


EXPOSE 8080
CMD [""node"", ""usr/src/app/app.js""]
","HTML
63.1%





CSS
24.7%





JavaScript
12.2%",2016-03-31 18:29:24,2016-03-31 18:37:02,https://github.com/dineshtechnology/shopexplora
17,saagie/jupyter-julia-notebook,"Organization(name=None, id=16132130)","FROM jupyter/notebook


MAINTAINER Saagie


# Julia Installation
RUN apt-get update && apt-get install --no-install-recommends software-properties-common python-software-properties libx11-dev libpng3 gettext tcl8.5 libpango1.0-0 tk8.5 hdf5-tools -y && \
    add-apt-repository ppa:staticfloat/julianightlies && \
    add-apt-repository ppa:staticfloat/julia-deps && \
    apt-get update && \
    apt-get install -y julia libnettle4 && \
    rm -rf /tmp/downloaded_packages/ /tmp/*.rds /var/tmp/* && \
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean


# Have root install julia packages globally. I found this directory by
# looking at `LOAD_PATH` from within a julia session
ENV JULIA_PKGDIR /usr/local/share/julia/site


# Julia package Installation (should be global)
RUN julia -e 'Pkg.init(); Pkg.add(""IJulia"")' && \
    julia -e 'Pkg.add(""Gadfly""); Pkg.add(""RDatasets""); Pkg.add(""ForwardDiff"")' && \
    julia -e 'Pkg.add(""Distributions""); Pkg.add(""NLsolve""); Pkg.add(""Interact"")' && \
    julia -e 'Pkg.add(""PyCall""); Pkg.add(""PyPlot""); Pkg.add(""Pandas""); Pkg.add(""Winston"")' && \
	julia -e 'Pkg.add(""QuantEcon""); Pkg.add(""Mongo""); Pkg.add(""Hive"");'


# check out ZMQ and IJulia to get them working
RUN julia -e 'Pkg.checkout(""ZMQ""); Pkg.checkout(""IJulia"");'


CMD jupyter notebook \
    --ip=* \
    --MappingKernelManager.time_to_dead=10 \
    --MappingKernelManager.first_beat=3 \
    --notebook-dir=/notebooks-dir/
",,2016-04-04 08:02:36,2016-04-04 08:02:36,https://github.com/saagie/jupyter-julia-notebook
18,michaelneale/pingbot,,"FROM haskell:7.8 
# mwotton/meanpath-build


#RUN echo 43


RUN apt-get update
#RUN apt-get install -y ghc-7.8.3


RUN apt-get install -y tmux make
RUN apt-get install -y curl python


WORKDIR /app


#ENV PATH /opt/ghc/7.8.3/bin:/opt/cabal/1.20/bin/:$PATH


ENV CONSOLE_URL=http://localhost:8000/checks.json


CMD python -m SimpleHTTPServer >> /tmp/simple.log & \
    /bin/bash
","Haskell
81.0%





Python
16.6%





Makefile
1.6%





Shell
0.8%",2016-04-04 08:17:57,2016-09-10 14:07:27,https://github.com/michaelneale/pingbot
19,FRosner/docker-spark-base,,"FROM frosner/java


MAINTAINER Frank Rosner <frank@fam-rosner.de>


RUN curl -s http://d3kbcqa49mib13.cloudfront.net/spark-1.5.0-bin-hadoop2.6.tgz | tar -xz -C /usr/local \
  && mv /usr/local/spark-1.5.0-bin-hadoop2.6 /usr/local/spark
ENV SPARK_HOME /usr/local/spark


RUN echo ""nameserver 8.8.8.8\nnameserver 8.8.4.4"" >> /etc/resolv.conf #https://www.turnkeylinux.org/forum/support/20090724/fix-apt-get-could-not-resolve-archiveubuntucom
RUN apt-get update && apt-get install python -y && apt-get clean all -y
",,2016-04-12 07:05:40,2016-04-12 07:05:40,https://github.com/FRosner/docker-spark-base
20,optiflows/docker-etcd-certs,"Organization(name=None, id=5174710)","FROM golang:1.6-alpine


RUN apk add --update gcc git make libc-dev && rm -rf /var/cache/apk/*


ENV GO15VENDOREXPERIMENT 1


WORKDIR /root/work
RUN go get -u -tags nopkcs11 github.com/cloudflare/cfssl/cmd/cfssl && go get -u github.com/cloudflare/cfssl/cmd/cfssljson


WORKDIR /root/work/tls
ENTRYPOINT [""make""]
",,2016-04-12 15:53:53,2016-04-12 15:53:53,https://github.com/optiflows/docker-etcd-certs
21,john-owens/gem_volume,,"FROM alpine:3.2
MAINTAINER john-owens
RUN mkdir -p /usr/local/bundle


VOLUME [""/usr/local/bundle""]
CMD [""true""]
",,2016-04-13 04:09:48,2016-04-13 04:09:48,https://github.com/john-owens/gem_volume
22,Shinsaro/AlKa-Tienda-Informatica,,"FROM ubuntu:12.04
MAINTAINER Remy Sharp <remy@leftlogic.com>


RUN rm /bin/sh && ln -s /bin/bash /bin/sh
RUN apt-get update && apt-get install curl npm -y


ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 4
ENV NVM_VERSION 0.26.1
ENV TRAVIS TRUE


# # Install nvm with node and npm
RUN curl https://raw.githubusercontent.com/creationix/nvm/v$NVM_VERSION/install.sh | bash \
    && source $NVM_DIR/nvm.sh \
    && nvm install 0.10 \
    && nvm install 0.12 \
    && nvm install 4 \
    && nvm alias default $NODE_VERSION \
    && nvm use default
","JavaScript
51.2%





HTML
25.6%





CSS
23.2%",2016-04-11 18:11:57,2016-05-17 18:47:30,https://github.com/Shinsaro/AlKa-Tienda-Informatica
23,liltaf/javahelloworld,,"FROM java:7
COPY src  /home/root/javahelloworld/src
WORKDIR /home/root/javahelloworld
RUN mkdir bin
RUN javac -d bin src/HelloWorld.java
ENTRYPOINT [""java"", ""-cp"", ""bin"", ""HelloWorld""]
","Java
100.0%",2016-04-05 14:41:13,2016-04-05 14:47:59,https://github.com/liltaf/javahelloworld
24,cyotee/jbpm-community-poc,,"FROM jboss/jbpm-workbench


MAINTAINER ""Robert Greathouse"" ""cyotee@gmail.com""


RUN /opt/jboss/wildfly/bin/add-user.sh --silent -a -u robert -p 0p3ns0urc3 -g admin
RUN /opt/jboss/wildfly/bin/add-user.sh --silent -a -u admin -p cand1c3 -g admin
RUN /opt/jboss/wildfly/bin/add-user.sh --silent -a -u nevin -p 0p3ns0urc3 -g admin


ADD installs/poc-dependencies/* $JBOSS_HOME/standalone/deployments/$KIE_CONTEXT_PATH.war/WEB-INF/lib/
ADD installs/poc-dependencies/* $JBOSS_HOME/standalone/deployments/$DASHBUILDER_CONTEXT_PATH.war/WEB-INF/lib/
",,2016-04-04 23:47:00,2016-04-04 23:47:00,https://github.com/cyotee/jbpm-community-poc
25,josueeduardo/Docker,,"FROM ubuntu


COPY ./setup.sh /tmp/setup.sh
RUN sudo /tmp/setup.sh


COPY ./custom.cnf /etc/mysql/conf.d/custom.cnf
COPY ./query.sql /tmp/query.sql
COPY ./initdb.sh /opt/initdb.sh


EXPOSE 3306


CMD [""/bin/bash"", ""/opt/initdb.sh""]
","Shell
100.0%",2016-04-08 20:17:49,2016-04-08 20:19:06,https://github.com/josueeduardo/Docker
26,josueeduardo/Docker,,"FROM java:openjdk-8-jdk
MAINTAINER josue.egontijo@gmail.com


ENV VERSION 10.0.0.Final
ENV INSTALL_DIR /opt
ENV WILDFLY_HOME $INSTALL_DIR/wildfly
ENV DEPLOYMENT_DIR $WILDFLY_HOME/standalone/deployments


RUN curl -O http://download.jboss.org/wildfly/$VERSION/wildfly-$VERSION.tar.gz
RUN mkdir $WILDFLY_HOME
RUN tar -xzf wildfly-$VERSION.tar.gz -C $WILDFLY_HOME --strip-components 1


RUN $WILDFLY_HOME/bin/add-user.sh admin admin123 --silent


ADD mysql $WILDFLY_HOME/modules/system/layers/base/com/mysql
ADD configuration/* $WILDFLY_HOME/standalone/configuration/


RUN chmod a+x $WILDFLY_HOME/bin/standalone.sh


ENTRYPOINT [""/opt/wildfly/bin/standalone.sh"", ""-b"", ""0.0.0.0""]
EXPOSE 8080 9990
","Shell
100.0%",2016-04-08 20:17:49,2016-04-08 20:19:06,https://github.com/josueeduardo/Docker
27,risq/folio,,"FROM ghost


MAINTAINER Valentin Ledrapier <valentin.ledrapier@gmail.com>


ADD config.example.js config.example.js
ADD theme $GHOST_SOURCE/content/themes/custom
ADD nginx.conf.sigil .


WORKDIR $GHOST_SOURCE/content/themes/custom


RUN npm install && npm run build


WORKDIR $GHOST_SOURCE


# Fix ownership in src
RUN chown -R user $GHOST_SOURCE/content


EXPOSE 2368
","CSS
68.6%





HTML
18.3%





JavaScript
13.1%",2016-04-09 14:38:25,2016-04-09 14:40:51,https://github.com/risq/folio
28,aaspnas/DevTalksDemo16,,"FROM windowsservercore:10.0.10586.0
ADD temp /install
RUN powershell -Command ""& {Add-WindowsFeature -Name web-server}""
","PowerShell
42.2%





HTML
35.3%





C#
22.5%",2016-03-30 10:13:23,2016-04-06 18:02:10,https://github.com/aaspnas/DevTalksDemo16
29,Battleroid/nginx-rtmp-stream,,"FROM ubuntu:latest


ENV DEBIAN_FRONTEND noninteractive
ENV PATH=$PATH:/usr/local/nginx/sbin


RUN \
	mkdir /src && \
	mkdir /logs && \
	mkdir /vids && \
	mkdir /config && \
	chmod 777 /vids


RUN \
	apt-get update && \
	apt-get upgrade -yq && \
	apt-get clean


RUN \
	apt-get install -yq build-essential wget && \
	apt-get install -yq libpcre3-dev zlib1g-dev libssl-dev && \
	apt-get install -yq ffmpeg


RUN \
	cd /src && \
	wget http://nginx.org/download/nginx-1.11.1.tar.gz && \
	tar zxf nginx-1.11.1.tar.gz && \
	rm nginx-1.11.1.tar.gz


RUN \
	cd /src && \
	wget https://github.com/arut/nginx-rtmp-module/archive/v1.1.8.tar.gz && \
	tar zxf v1.1.8.tar.gz && \
	rm v1.1.8.tar.gz


RUN \
	cd /src/nginx-1.11.1 && \
	./configure --add-module=/src/nginx-rtmp-module-1.1.8 --conf-path=/config/nginx.conf --error-log-path=/logs/error.log --http-log-path=/logs/access.log --with-debug && \
	make && \
	make install


ADD nginx.conf /config/nginx.conf


EXPOSE 80
EXPOSE 1935


VOLUME [""/logs"", ""/vids""]


CMD ""nginx""
","Nginx
100.0%",2016-03-30 13:31:35,2016-07-11 23:25:26,https://github.com/Battleroid/nginx-rtmp-stream
0,brnavneet/MyProject,,"FROM tomcat:8.0
ADD spring-boot-microservice-1.0.war /usr/local/tomcat/webapps/
","Java
69.4%





Puppet
30.6%",2016-03-27 10:46:48,2016-08-25 09:20:38,https://github.com/brnavneet/MyProject
1,blackillzone/docker-python,,"FROM gliderlabs/alpine:3.3


RUN apk add --update --no-cache python py-pip && rm -rf /var/cache/apk/*
","Shell
100.0%",2016-03-26 12:48:52,2016-03-26 13:39:48,https://github.com/blackillzone/docker-python
2,abradle/rdkit-compose,,"FROM informaticsmatters/rdkit:Release_2015_03_1
MAINTAINER Anthony Bradley
ENV PYTHONUNBUFFERED 1
RUN mkdir /code
WORKDIR /code


RUN apt-get update
RUN apt-get upgrade -y
RUN apt-get install -y  python-psycopg2 \
libffi-dev \
python-pip \
python-scipy
# this section is very important to keep a separate layer for the dependencies
RUN mkdir /code/requirements
ADD requirements.txt /code/
ADD requirements/* /code/requirements/
RUN pip install -r requirements.txt


ADD . /code/


# Docker specific config
RUN mv proj/settings/docker.py proj/settings/local.py


# build static assets
RUN SECRET_KEY=temp_value python manage.py collectstatic -v 0 --clear --noinput
","Python
94.0%





Shell
3.8%





Nginx
1.3%





HTML
0.9%",2016-03-19 19:08:39,2016-03-19 19:09:22,https://github.com/abradle/rdkit-compose
3,abradle/rdkit-compose,,"FROM nginx


COPY nginx.conf /etc/nginx/nginx.conf
","Python
94.0%





Shell
3.8%





Nginx
1.3%





HTML
0.9%",2016-03-19 19:08:39,2016-03-19 19:09:22,https://github.com/abradle/rdkit-compose
4,rzitomer/digit_recognizer,,"FROM jupyter/datascience-notebook


MAINTAINER Martin Ames Harrison <martinmartinharrisonharrison@gmail.com>


USER root


RUN apt-get update && apt-get upgrade -y


RUN apt-get -y install python-pip libpq-dev python-dev


#python development tools & other personal
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install pep8 &&\
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install pip-tools &&\
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install pyyaml &&\
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install tabulate && \
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install --upgrade --no-cache-dir https://get.dato.com/GraphLab-Create/1.7.1/richiezitomer@gmail.com/A143-EC30-47C6-CE26-CFE4-38ED-1DFC-169F/GraphLab-Create-License.tar.gz && \
source deactivate""]
RUN apt-get -y install openconnect


#aws
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install boto && \
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install boto3 &&\
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install s4cmd && \
source deactivate""]


#ftp
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install pysftp && \
source deactivate""]




#mysql connectors and high-level tools
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install PyMySQL && \
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install -Iv http://cdn.mysql.com/Downloads/Connector-Python/mysql-connector-python-1.2.3.zip#md5=6d42998cfec6e85b902d4ffa5a35ce86 && \
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install dataset &&\
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
apt-get -y install libmysqlclient-dev && \
pip install MySQL-python && \
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install format-sql && \
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install db.py && \
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install -U sqlalchemy && \
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install psycopg2 && \
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
git clone https://github.com/coleifer/peewee.git -b master""]
WORKDIR peewee
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
python setup.py install""]
WORKDIR /home/jovyan/work
RUN rm -r peewee


#since 2/14
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
wget http://prdownloads.sourceforge.net/ta-lib/ta-lib-0.4.0-src.tar.gz && \
tar -xzf ta-lib-0.4.0-src.tar.gz && \
cd ta-lib && \
./configure --prefix=/usr && \
make && \
sudo make install && \
pip install ta-lib && \
cd .. && \
rm -rf ta-lib/ ta-lib-0.4.0-src.tar.gz && \
source deactivate""]


#lexical analysis dependencies
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
pip install nltk && \
source deactivate""]
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
python -m nltk.downloader averaged_perceptron_tagger && \
source deactivate""]


#snowflake connector
RUN [""/bin/bash"", ""-c"", ""source activate python2 && \
apt-get install -y libffi-dev && \
pip install snowflake-connector-python && \
pip uninstall -y cryptography && \
pip install cryptography && \
source deactivate""]
","Jupyter Notebook
100.0%",2016-03-19 19:32:22,2016-03-19 20:20:00,https://github.com/rzitomer/digit_recognizer
5,minikiller/kubernetes-karaf,,"FROM 172.18.82.3:5000/docker-jre8


MAINTAINER Flávio Ferreira <flaviommferreira@gmail.com>


# expose Jolokia and Hazelcast (for Cellar)
EXPOSE 8778 5701 5005 8181 8101


ENV KARAF_VERSION 4.0.4
ENV KARAF_HOME /karaf
ENV DEPLOY_DIR $KARAF_HOME/deploy
ENV JOLOKIA_VERSION 1.3.2
ENV JAVA_HOME /usr/jdk1.8.0_31


WORKDIR /tmp
# download, extract and install Karaf
COPY apache-karaf-${KARAF_VERSION}.tar.gz /tmp/
RUN ( tar xf apache-karaf-${KARAF_VERSION}.tar.gz ) && \
    mv apache-karaf-${KARAF_VERSION} ${KARAF_HOME} && \
    rm -rf /tmp/apache-karaf-${KARAF_VERSION}.tar.gz && \
    rm -rf ${KARAF_HOME}/deploy/*


# Download jolokia agent
# RUN wget http://central.maven.org/maven2/org/jolokia/jolokia-jvm/${JOLOKIA_VERSION}/jolokia-jvm-${JOLOKIA_VERSION}-agent.jar -O ${KARAF_HOME}/jolokia-agent.jar
COPY jolokia-agent.jar ${KARAF_HOME}/
ENV KARAF_OPTS -javaagent:/$KARAF_HOME/jolokia-agent.jar=host=0.0.0.0,port=8778,authMode=jaas,realm=karaf,user=karaf,password=karaf,agentId=$HOSTNAME
ENV PATH $PATH:$KARAF_HOME/bin


# ADD users.properties /karaf/etc/


CMD [""karaf""]
","Java
75.2%





Shell
24.8%",2016-03-20 14:22:55,2016-03-20 14:39:10,https://github.com/minikiller/kubernetes-karaf
6,minikiller/kubernetes-karaf,,"FROM 172.18.82.3:5000/kalix/karaf


# Add hazelcast configuration to be used by cellar
ADD config/hazelcast.xml $KARAF_HOME/etc/
# Disable auto replication of everything except config
ADD config/org.apache.karaf.cellar.groups.cfg $KARAF_HOME/etc/
# Add kubernetes discovery configuration
ADD config/org.apache.karaf.cellar.kubernetes-myconf.cfg $KARAF_HOME/etc/


# put app features.xml to $KARAF/deploy
ADD target/classes/features.xml /karaf/deploy/
","Java
75.2%





Shell
24.8%",2016-03-20 14:22:55,2016-03-20 14:39:10,https://github.com/minikiller/kubernetes-karaf
7,minikiller/kubernetes-karaf,,"FROM 172.18.82.3:5000/kalix/karaf


# Add hazelcast configuration to be used by cellar
ADD config/hazelcast.xml $KARAF_HOME/etc/
# Disable auto replication of everything except config
ADD config/org.apache.karaf.cellar.groups.cfg $KARAF_HOME/etc/
# Add kubernetes discovery configuration
ADD config/org.apache.karaf.cellar.kubernetes-myconf.cfg $KARAF_HOME/etc/




# put app features.xml to $KARAF/deploy
ADD target/classes/features.xml /karaf/deploy/
","Java
75.2%





Shell
24.8%",2016-03-20 14:22:55,2016-03-20 14:39:10,https://github.com/minikiller/kubernetes-karaf
8,nharsch/wagtail_example,,"FROM python:3.4
ENV PYTHONUNBUFFERED 1
RUN mkdir /code
ADD . /code/
WORKDIR /code
RUN pip install -r /code/requirements.txt


","Python
74.0%





HTML
26.0%",2016-03-24 15:52:20,2016-03-24 15:52:32,https://github.com/nharsch/wagtail_example
9,catawiki/docker-spark-sbt,"Organization(name=None, id=1814394)","FROM catawiki/docker-spark
MAINTAINER Fokko Driesprong <f.driesprong@catawiki.nl>


RUN mkdir /tmp/ \
  && chmod 777 /tmp/ \
  && update-ca-certificates -f


RUN wget -O ./bin/sbt https://raw.githubusercontent.com/paulp/sbt-extras/master/sbt \
  && chmod 0755 ./bin/sbt \
  && ./bin/sbt -v -211 -sbt-create about


CMD sbt
",,2016-01-25 06:31:44,2016-02-04 15:30:57,https://github.com/catawiki/docker-spark-sbt
10,CodeArtLibs/benchmark-py35-meinheld-wsgi,"Organization(name=None, id=10099039)","FROM ubuntu:14.04


# Installing Linux packages
RUN apt-get -y update
RUN apt-get install -y build-essential


# Installing Python
RUN apt-get -y install python-dev python-pip


# Installing Python packages
RUN pip install supervisor==3.2.0 virtualenv==14.0.0


# Code + Benchmark configuration
RUN apt-get -y install libev-dev
COPY requirements.txt /src/requirements.txt
COPY run.py /src/run.py
COPY supervisord.conf /src/supervisord.conf
WORKDIR /src
RUN virtualenv env -p python
RUN env/bin/pip install -r requirements.txt


# Important for ELB
EXPOSE 8000


CMD [""supervisord"", ""-z"", ""0"", ""-c"", ""/src/supervisord.conf""]


# Information
WORKDIR /src
RUN env/bin/python -c 'import struct ; import sys ; print(""Python %s\n%sbits"" % (sys.version, 8 * struct.calcsize(""P"")))'
RUN env/bin/python -c 'import sys ; print(sys.maxunicode)'
","Python
56.5%





Makefile
43.5%",2016-01-25 06:08:48,2016-01-25 06:10:34,https://github.com/CodeArtLibs/benchmark-py35-meinheld-wsgi
11,dougrich/srd,,"FROM nginx


RUN rm /etc/nginx/conf.d/default.conf


COPY dist /var/www/app


COPY srd /var/www/app/srd


COPY srd.conf /etc/nginx/conf.d
","JavaScript
71.1%





CSS
25.5%





HTML
3.4%",2016-01-22 05:22:30,2016-01-29 13:43:38,https://github.com/dougrich/srd
12,codecentric/bundesliga-dojo,"Organization(name=None, id=1009716)","FROM java:8
ADD bundesliga-dojo-0.0.1-SNAPSHOT.jar app.jar
RUN bash -c 'touch /app.jar'
ENTRYPOINT [""java"",""-Djava.security.egd=file:/dev/./urandom"", ""-jar"",""/app.jar""]


EXPOSE 8080
EXPOSE 1099
","JavaScript
51.0%





Java
24.6%





HTML
24.4%",2016-01-22 12:28:32,2016-01-22 12:29:50,https://github.com/codecentric/bundesliga-dojo
13,robusta-hk/mongo-primary,"Organization(name=None, id=16838509)","FROM mongo:3.2


MAINTAINER Nicolas Zozol - nz@robusta.io - http://www.robusta.io




#RUN apt-get update && apt-get install -y procps \
#                    && apt-get clean \
#                    && rm -rf /var/lib/apt/lists/*








# Warning : js script will use this directory
RUN mkdir --parents /data/db && mkdir --parents /opt/setup \
        && mkdir --parents /opt/conf && chown -R mongodb:mongodb /data/db
WORKDIR /opt/setup/


RUN echo ""++++ working at : $(pwd)""




COPY create-users.js /opt/setup/
COPY create-replica.js /opt/setup/




VOLUME /opt/conf


# If We don't want again to treat this master as an executable
# ENTRYPOINT [""/bin/bash""]


","JavaScript
100.0%",2016-01-22 14:18:14,2016-01-22 14:57:42,https://github.com/robusta-hk/mongo-primary
14,arvatoSCM/dockerize-magento2,"Organization(name=None, id=17927210)","FROM php:7.0-fpm


ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --enable-intl --enable-opcache --enable-zip


RUN apt-get update


RUN \
  apt-get install -y \
  libcurl4-gnutls-dev \
  libxml2-dev \
  libssl-dev


RUN \
    /usr/local/bin/docker-php-ext-install \
    dom \
    pcntl \
    phar \
    posix


# Configure PHP
# php module build deps
RUN \
  apt-get install -y \
  g++ \
  autoconf \
  libbz2-dev \
  libltdl-dev \
  libpng12-dev \
  libjpeg62-turbo-dev \
  libfreetype6-dev \
  libxpm-dev \
  libimlib2-dev \
  libicu-dev \
  libmcrypt-dev \
  libxslt1-dev \


  re2c \
  libpng++-dev \
  libpng3 \
  libvpx-dev \
  zlib1g-dev \
  libgd-dev \
  libtidy-dev \
  libmagic-dev \
  libexif-dev \
  file \
  libssh2-1-dev \
  libjpeg-dev \
  git \
  curl \
  wget \
  librabbitmq-dev \
  libzip-dev \
  libzip2


# http://devdocs.magento.com/guides/v2.0/install-gde/system-requirements.html
RUN \
    /usr/local/bin/docker-php-ext-install \
    pdo \
    sockets \
    pdo_mysql \
    mysqli \
    mbstring \
    mcrypt \
    hash \
    simplexml \
    xsl \
    soap \
    intl \
    bcmath \
    json \
    opcache \
    zip


# Make sure the volume mount point is empty
RUN rm -rf /var/www/html/*


# Set www-data as owner for /var/www
RUN chown -R www-data:www-data /var/www/
RUN chmod -R g+w /var/www/


# Create log folders
RUN mkdir /var/log/php-fpm && \
    touch /var/log/php-fpm/access.log && \
    touch /var/log/php-fpm/error.log && \
    chown -R www-data:www-data /var/log/php-fpm


RUN docker-php-ext-configure gd --with-freetype-dir=/usr --with-jpeg-dir=/usr --with-png-dir=/usr \
    && docker-php-ext-install gd


# Install xdebug
RUN cd /tmp/ && git clone https://github.com/xdebug/xdebug.git \
    && cd xdebug && phpize && ./configure --enable-xdebug && make \
    && mkdir /usr/lib/php7/ && cp modules/xdebug.so /usr/lib/php7/xdebug.so \
    && touch /usr/local/etc/php/ext-xdebug.ini \
    && rm -r /tmp/xdebug \
    && apt-get purge -y --auto-remove
","Shell
93.3%





Nginx
6.7%",2016-03-29 13:22:32,2017-12-04 17:33:43,https://github.com/arvatoSCM/dockerize-magento2
15,cedbossneo/kubernetes-devoxx16,,"FROM node:5


RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app


ADD package.json .
RUN PHANTOMJS_PLATFORM=linux PHANTOMJS_ARCH=x64 npm install
ADD .babelrc .
ADD bin bin
ADD build build
ADD config config
ADD dist dist
ADD constants constants
ADD migrations migrations
ADD server server


ENV NODE_ENV production


ENTRYPOINT [ ""npm"", ""start"" ]


EXPOSE 3000
","JavaScript
94.6%





Shell
4.4%





Other
1.0%",2016-04-04 12:51:18,2016-04-20 21:48:51,https://github.com/cedbossneo/kubernetes-devoxx16
16,cedbossneo/kubernetes-devoxx16,,"# Copyright 2016 The Kubernetes Authors All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the ""License"");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an ""AS IS"" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


FROM rethinkdb


MAINTAINER BinZhao <wo@zhaob.in>


RUN apt-get update && \
    apt-get install -yq curl && \
    rm -rf /var/cache/apt/* && rm -rf /var/lib/apt/lists/* && \
    curl -L http://stedolan.github.io/jq/download/linux64/jq > /usr/bin/jq && \
    chmod u+x /usr/bin/jq


COPY ./run.sh /usr/bin/run.sh
RUN chmod u+x /usr/bin/run.sh


CMD ""/usr/bin/run.sh""
","JavaScript
94.6%





Shell
4.4%





Other
1.0%",2016-04-04 12:51:18,2016-04-20 21:48:51,https://github.com/cedbossneo/kubernetes-devoxx16
17,rachelleannmorales/meanApp,,"FROM node:4.2


RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app


RUN npm install -g mean-cli bower gulp


RUN	groupadd -r node \
&&	useradd -r -m -g node node


COPY . /usr/src/app/
RUN rm -rf /usr/src/app/node_modules
RUN chown -R node:node /usr/src/app


USER node
RUN touch /home/node/.mean
RUN npm install 
ENV PORT 3000  
ENV DB_PORT_27017_TCP_ADDR db
CMD [ ""npm"", ""start"" ]
EXPOSE 3000




#How to build:
# git clone https://github.com/linnovate/mean
# cd mean
# docker build -t mean .


#How to run:
# docker pull mongo
# docker run -d --name db mongo
# docker run -p 3000:3000 --link db:db mean
","JavaScript
81.1%





CSS
10.4%





HTML
8.5%",2016-03-31 17:42:27,2016-03-31 17:50:53,https://github.com/rachelleannmorales/meanApp
18,jlabusch/docker-syslog,,"FROM ubuntu:14.04


ENV TERM xterm


RUN apt-get update && \
    apt-get install -y vim less strace tcpdump lsof gdb && \
    apt-get install -y rsyslog && \
    apt-get clean && \
    rm -fr /var/lib/apt/lists/*


RUN sed 's/#$ModLoad imudp/$ModLoad imudp/'                 -i /etc/rsyslog.conf && \
    sed 's/#$UDPServerRun 514/$UDPServerRun 514/'           -i /etc/rsyslog.conf && \
    sed 's/$FileOwner syslog/$FileOwner root/'              -i /etc/rsyslog.conf && \
    sed 's/$PrivDropToUser syslog/#$PrivDropToUser syslog/' -i /etc/rsyslog.conf && \
    sed 's/$PrivDropToGroup syslog/#$PrivDropToGroup syslog/' -i /etc/rsyslog.conf


VOLUME [ ""/var/log"" ]


CMD [ ""rsyslogd"", ""-n"" ]


",,2016-04-02 05:10:34,2016-04-02 05:10:34,https://github.com/jlabusch/docker-syslog
19,andrewhowdencom/www.andrewhowden.com,,"FROM littleman/nginx:latest
MAINTAINER littleman.co <support@littleman.co>


ADD site/public                                       /var/www/public
ADD site/pgp                                          /var/www/pgp
ADD etc/nginx/sites-enabled/www-andrewhowden-com.conf /etc/nginx/sites-enabled/www-andrewhowden-com.conf
","CSS
41.5%





JavaScript
32.6%





HTML
16.8%





Shell
5.0%





Makefile
4.1%",2016-04-02 10:33:27,2017-10-25 12:07:43,https://github.com/andrewhowdencom/www.andrewhowden.com
20,keeppythonweird/pytest-dockerpy,"Organization(name=None, id=14064210)","FROM python:2
EXPOSE 80
RUN pip install flask
ADD app.py ./
CMD [""python"", ""app.py""]
","Python
100.0%",2016-04-15 14:30:14,2017-09-18 20:05:30,https://github.com/keeppythonweird/pytest-dockerpy
21,lazyguru/docker-m2-php56,,"FROM lazyguru/mage2base


# Installing PHP 5.6
RUN yum -y install https://mirror.webtatic.com/yum/el6/latest.rpm
RUN yum -y install php56w-pecl-memcache php56w-fpm php56w-intl php56w-mcrypt php56w-mbstring php56w-mysql php56w-pdo php56w-mbstring php56w-soap php56w-pecl-zendopcache php56w-xml php56w-gd php56w-opcache php56w-pecl-imagick php56w-bcmath
# <---- End


# php
ADD etc/php.conf/php.ini /etc/php.ini


# php fpm
RUN mv /etc/php-fpm.d/www.conf /etc/php-fpm.d/www.conf.default
ADD etc/php-fpm.conf/www.conf /etc/php-fpm.d/www.conf
RUN mkdir -p /var/lib/php/session
RUN mkdir -p /var/lib/php/wsdlcache
RUN chmod -R 777 /var/lib/php/session
RUN chmod -R 777 /var/lib/php/wsdlcache


VOLUME [""/var/www/html""]


EXPOSE 9001


ADD scripts/start.sh /start.sh
RUN chmod 755 /start.sh


CMD [""/bin/bash"", ""/start.sh""]
","Shell
100.0%",2016-04-15 21:47:24,2016-04-15 21:47:43,https://github.com/lazyguru/docker-m2-php56
22,bobwei/webservice,,"FROM redis


COPY redis.conf /usr/local/etc/redis/redis.conf


CMD [ ""redis-server"", ""/usr/local/etc/redis/redis.conf"" ]
","Shell
100.0%",2016-04-09 17:02:24,2016-04-09 17:02:45,https://github.com/bobwei/webservice
23,danielmccosker/dockerized-aspnet-core,,"FROM microsoft/aspnet:1.0.0-rc1-update1


RUN printf ""deb http://ftp.us.debian.org/debian jessie main\n"" >> /etc/apt/sources.list
RUN apt-get -qq update && apt-get install -qqy sqlite3 libsqlite3-dev && rm -rf /var/lib/apt/lists/*


COPY . /app
WORKDIR /app
RUN [""dnu"", ""restore""]


EXPOSE 5000/tcp
ENTRYPOINT [""dnx"", ""-p"", ""project.json"", ""Microsoft.AspNet.Server.Kestrel"", ""--server.urls"", ""http://0.0.0.0:5000""]
","C#
98.4%





JavaScript
1.2%





CSS
0.4%",2016-04-09 08:48:22,2016-04-09 09:25:21,https://github.com/danielmccosker/dockerized-aspnet-core
24,tomhughesnice/likesquared-web,,"FROM java:openjdk-8-jdk-alpine


# add directly the war
ADD *.war /app.war


RUN sh -c 'touch /app.war'
VOLUME /tmp
CMD [""java"",""-Djava.security.egd=file:/dev/./urandom"",""-jar"",""/app.war""]


EXPOSE 8080
","Java
31.2%





JavaScript
26.8%





CSS
25.0%





HTML
15.1%





Shell
1.1%





Batchfile
0.8%",2016-04-06 17:59:18,2016-04-06 18:00:24,https://github.com/tomhughesnice/likesquared-web
25,tomhughesnice/likesquared-web,,"###
# swagger-ui-builder - https://github.com/swagger-api/swagger-ui/
# Container for building the swagger-ui static site
#
# Build: docker build -t swagger-ui-builder .
# Run:   docker run -v $PWD/dist:/build/dist swagger-ui-builder
#
###


FROM    ubuntu:14.04
MAINTAINER dnephin@gmail.com


ENV     DEBIAN_FRONTEND noninteractive


RUN     apt-get update && apt-get install -y git npm nodejs openjdk-7-jre
RUN     ln -s /usr/bin/nodejs /usr/local/bin/node


WORKDIR /build
ADD     package.json    /build/package.json
RUN     npm install
ADD     .   /build
CMD     ./node_modules/gulp/bin/gulp.js serve
","Java
31.2%





JavaScript
26.8%





CSS
25.0%





HTML
15.1%





Shell
1.1%





Batchfile
0.8%",2016-04-06 17:59:18,2016-04-06 18:00:24,https://github.com/tomhughesnice/likesquared-web
26,skliew/tht,,"###
# swagger-ui-builder - https://github.com/swagger-api/swagger-ui/
# Container for building the swagger-ui static site
#
# Build: docker build -t swagger-ui-builder .
# Run:   docker run -v $PWD/dist:/build/dist swagger-ui-builder
#
###


FROM    ubuntu:14.04
MAINTAINER dnephin@gmail.com


ENV     DEBIAN_FRONTEND noninteractive


RUN     apt-get update && apt-get install -y git npm nodejs openjdk-7-jre
RUN     ln -s /usr/bin/nodejs /usr/local/bin/node


WORKDIR /build
ADD     package.json    /build/package.json
RUN     npm install
ADD     .   /build
CMD     ./node_modules/gulp/bin/gulp.js serve
","JavaScript
87.4%





CSS
10.8%





HTML
1.2%





Ruby
0.6%",2016-04-18 16:27:13,2016-04-18 16:27:53,https://github.com/skliew/tht
27,pikoscielniak/asp-net-core-configuration,,"FROM microsoft/aspnet:1.0.0-rc1-update1


RUN printf ""deb http://ftp.us.debian.org/debian jessie main\n"" >> /etc/apt/sources.list
RUN apt-get -qq update && apt-get install -qqy sqlite3 libsqlite3-dev && rm -rf /var/lib/apt/lists/*


COPY . /app
WORKDIR /app
RUN [""dnu"", ""restore""]


EXPOSE 5000/tcp
ENTRYPOINT [""dnx"", ""-p"", ""project.json"", ""web""]
","C#
100.0%",2016-04-15 23:36:08,2016-04-15 23:36:53,https://github.com/pikoscielniak/asp-net-core-configuration
28,jellymann/websocket-game,,"FROM node:6.1.0


# Create app directory
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app


# Install app dependencies
COPY package.json /usr/src/app/
RUN npm install


# Bundle app source
COPY ./index.js /usr/src/app/index.js
COPY ./public /usr/src/app/public


ENV PORT 80
EXPOSE 80


CMD [ ""npm"", ""start"" ]
","JavaScript
92.2%





CSS
5.1%





HTML
2.7%",2016-04-16 01:13:05,2016-04-16 01:21:54,https://github.com/jellymann/websocket-game
29,jantoebes/xyz.stream-exploration.web,,"FROM kyma/docker-nginx
COPY dist/prod/ /var/www
EXPOSE 80
CMD 'nginx'
","TypeScript
68.9%





HTML
25.6%





JavaScript
5.5%",2016-02-18 12:29:23,2016-02-18 15:39:43,https://github.com/jantoebes/xyz.stream-exploration.web
